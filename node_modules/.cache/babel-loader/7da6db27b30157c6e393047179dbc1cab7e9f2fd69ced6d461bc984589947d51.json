{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  name: 'Skeleton',\n  props: {\n    SkeletorType: {\n      type: String\n    },\n    SkeletorLocation: {\n      type: String\n    },\n    SkeletorLength: {\n      type: Number\n    },\n    SkeletorHeight: {\n      type: Number\n    }\n  },\n  setup(props) {\n    const typeValue = ref('');\n    const locationValue = ref('');\n    const isChange = ref(false);\n    const listLength = ref(0);\n    const listItemHeight = ref(0);\n    typeValue.value = props.SkeletorType;\n    locationValue.value = props.SkeletorLocation;\n    listLength.value = props.SkeletorLength;\n    listItemHeight.value = props.SkeletorHeight;\n    if (locationValue.value == 'main') {\n      isChange.value = true;\n    }\n    return {\n      typeValue,\n      locationValue,\n      isChange,\n      listLength,\n      listItemHeight\n    };\n  }\n};","map":{"version":3,"names":["ref","name","props","SkeletorType","type","String","SkeletorLocation","SkeletorLength","Number","SkeletorHeight","setup","typeValue","locationValue","isChange","listLength","listItemHeight","value"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\common\\Skeleton.vue"],"sourcesContent":["<template>\r\n    <aside id=\"skeletons\">\r\n        \r\n        <template  v-if=\"typeValue =='list' \">\r\n            <ul class=\"skeleton--list\" :class=\"isChange ? 'full' : '' \">\r\n                <li v-for=\"item in listLength\" :style=\"{ height: listItemHeight + 'px' }\"></li>\r\n            </ul>\r\n        </template>\r\n        <template v-if=\"typeValue == 'card'\">\r\n            <div class=\"skeleton--card\"></div>\r\n        </template>\r\n    </aside>\r\n</template>\r\n    \r\n<script>\r\n  import { ref } from 'vue';\r\n  export default {\r\n    name: 'Skeleton',\r\n    props: {\r\n        SkeletorType:{\r\n          type:String,\r\n        },\r\n        SkeletorLocation:{\r\n            type:String\r\n        },\r\n        SkeletorLength:{\r\n            type: Number\r\n        },\r\n        SkeletorHeight:{\r\n            type: Number\r\n        }\r\n    },\r\n    setup( props ) {\r\n        const typeValue = ref('');\r\n        const locationValue = ref('');\r\n        const isChange = ref( false );\r\n        const listLength = ref( 0 );\r\n        const listItemHeight = ref( 0 );\r\n\r\n        typeValue.value = props.SkeletorType;\r\n        locationValue.value = props.SkeletorLocation;\r\n        listLength.value = props.SkeletorLength;\r\n        listItemHeight.value = props.SkeletorHeight;\r\n        if( locationValue.value  == 'main' ){\r\n            isChange.value = true;\r\n        }\r\n        return{ \r\n            typeValue,\r\n            locationValue,\r\n            isChange,\r\n            listLength,\r\n            listItemHeight\r\n        }\r\n    }\r\n  }\r\n  </script>\r\n    \r\n<style lang=\"scss\" scoped>\r\n#skeletons{\r\n    display: block;\r\n    .skeleton{\r\n        display: block;\r\n        width:100%;\r\n        height:100%;\r\n\r\n        &--card{\r\n            display: block;\r\n            width:100%;\r\n            height:100%;\r\n            padding-bottom: 50%;\r\n            background: linear-gradient(120deg, #e5e5e5 30%, #f0f0f0 38%, #f0f0f0 40%, #e5e5e5 48%);\r\n            border-radius: 1rem;\r\n            background-size: 200% 100%;\r\n            background-position: 100% 0;\r\n            animation: load 1s infinite;\r\n        }\r\n        &--list{\r\n            margin-bottom: vw(100px);\r\n            @include breakDevicePoint( padding,  vw(0 200px), vw(0 400px), null ); \r\n            li{\r\n                display: block;\r\n                width:100%;\r\n                height:vw(300px);\r\n                margin-top: vw(30px);\r\n                background: linear-gradient(120deg, #e5e5e5 30%, #f0f0f0 38%, #f0f0f0 40%, #e5e5e5 48%);\r\n                border-radius: 1rem;\r\n                background-size: 200% 100%;\r\n                background-position: 100% 0;\r\n                animation: load 1s infinite;\r\n              \r\n            }\r\n            &.full{\r\n                padding:0;\r\n            }\r\n        }\r\n    }\r\n}\r\n@keyframes load {\r\n    100% {\r\n        background-position: -100% 0;\r\n    }\r\n}\r\n\r\n\r\n// .skeleton_loading {\r\n//     width: vw(1000px);\r\n//     height: vw(1000px);\r\n// }\r\n// /* 스켈레톤 이미지 */\r\n// .skeleton_img {\r\n//     width: 100%;\r\n//     height: 100%;\r\n// }\r\n\r\n// /* 스켈레톤 텍스트 */\r\n// .skeleton_text {\r\n//     margin-bottom: 0.5rem;\r\n//     height: 1rem;\r\n// }\r\n// .skeleton_text:nth-child(1) {\r\n//     width: 50%;\r\n//     height: 1.5rem;\r\n// }\r\n// .skeleton_text:nth-child(2) {\r\n//     width: 20%;\r\n//     height: 0.8rem;\r\n// }\r\n// .skeleton_text:last-child {\r\n//     width: 80%;\r\n// }\r\n\r\n// .skeleton_loading{\r\n//     background: linear-gradient(120deg, #e5e5e5 30%, #f0f0f0 38%, #f0f0f0 40%, #e5e5e5 48%);\r\n//     border-radius: 1rem;\r\n//     background-size: 200% 100%;\r\n//     background-position: 100% 0;\r\n//     animation: load 1s infinite;\r\n// }\r\n\r\n// @keyframes load {\r\n//     100% {\r\n//         background-position: -100% 0;\r\n//     }\r\n// }\r\n\r\n  </style>\r\n    "],"mappings":"AAeE,SAASA,GAAE,QAAS,KAAK;AACzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACHC,YAAY,EAAC;MACXC,IAAI,EAACC;IACP,CAAC;IACDC,gBAAgB,EAAC;MACbF,IAAI,EAACC;IACT,CAAC;IACDE,cAAc,EAAC;MACXH,IAAI,EAAEI;IACV,CAAC;IACDC,cAAc,EAAC;MACXL,IAAI,EAAEI;IACV;EACJ,CAAC;EACDE,KAAKA,CAAER,KAAI,EAAI;IACX,MAAMS,SAAQ,GAAIX,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMY,aAAY,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMa,QAAO,GAAIb,GAAG,CAAE,KAAM,CAAC;IAC7B,MAAMc,UAAS,GAAId,GAAG,CAAE,CAAE,CAAC;IAC3B,MAAMe,cAAa,GAAIf,GAAG,CAAE,CAAE,CAAC;IAE/BW,SAAS,CAACK,KAAI,GAAId,KAAK,CAACC,YAAY;IACpCS,aAAa,CAACI,KAAI,GAAId,KAAK,CAACI,gBAAgB;IAC5CQ,UAAU,CAACE,KAAI,GAAId,KAAK,CAACK,cAAc;IACvCQ,cAAc,CAACC,KAAI,GAAId,KAAK,CAACO,cAAc;IAC3C,IAAIG,aAAa,CAACI,KAAI,IAAM,MAAK,EAAG;MAChCH,QAAQ,CAACG,KAAI,GAAI,IAAI;IACzB;IACA,OAAM;MACFL,SAAS;MACTC,aAAa;MACbC,QAAQ;MACRC,UAAU;MACVC;IACJ;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}