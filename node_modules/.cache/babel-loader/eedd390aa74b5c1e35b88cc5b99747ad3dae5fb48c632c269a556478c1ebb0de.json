{"ast":null,"code":"import axios from 'axios';\nimport { ref, onMounted, toRefs, reactive } from 'vue';\nimport { gsap, Power2 } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\ngsap.registerPlugin(ScrollTrigger);\nexport default {\n  name: 'Work',\n  props: ['itemLength'],\n  setup(props) {\n    // const { itemLength } = toRefs(props);\n    const publicPath = process.env.BASE_URL;\n    const items = reactive(null);\n    const express = require('express');\n    const app = express();\n    app.get('/api/data', (req, res) => {\n      // Handle the request and send the response\n      const data = {\n        message: 'This is the data from the server.'\n      };\n      res.json(data);\n    });\n\n    // Start the server\n    app.listen(8080, () => {\n      console.log('Server is running on port 8080');\n    });\n    const cardList = ref(null);\n    const workListItems = ref([{\n      id: 1,\n      src: '@/assets/images/aboute_me_img_01',\n      skill: ['UI Publishing', 'SM']\n    }\n    // { id: 2, src: require('@/assets/video/guud.mp4'), skill: [ 'UI Publishing', 'build' ] },\n    // { id: 3, src: require('@/assets/video/bullsone.mp4'),  skill: [ 'UI Publishing', 'build' ] },\n    // { id: 4, src: require('@/assets/video/hodooschool.mp4'), skill: [ 'UI Publishing', 'build' ] },\n    ]);\n\n    onMounted(() => {\n      // const gnbItems = gsap.utils.toArray(\".video__dimd\");\n      // gnbItems.forEach((item) => {\n      //     let tl = gsap.timeline({\n      //         scrollTrigger: {\n      //             trigger: item,\n      //         }\n      //     });\n      //     tl.set(item, { autoAlpha: 1, left: 0 });\n      //     tl.to(item, 0.75, {\n      //         left: 100 + \"%\",\n      //         ease: Power2.out\n      //     });\n      // })\n    });\n    return {\n      cardList,\n      workListItems,\n      publicPath\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","toRefs","reactive","gsap","Power2","ScrollTrigger","registerPlugin","name","props","setup","publicPath","process","env","BASE_URL","items","express","require","app","get","req","res","data","message","json","listen","console","log","cardList","workListItems","id","src","skill"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Card\\CardList.vue"],"sourcesContent":["<template>\r\n    <ul class=\"card--list\" ref=\"cardList\">\r\n        <li class=\"card__item\" v-for=\"(item, index) in workListItems\" :key=\"index\">\r\n            <a href=\"javascript:;\">\r\n                <div class=\"video__dimd\"></div>\r\n                <img :src='`${item.src}.jpg`' alt=\"\">\r\n                <!-- <video loop playsinline muted autoplay>\r\n                    <source :src=\"item.src\" type=\"video/mp4\">\r\n                </video> -->\r\n                <ul class=\"card--tag__list\" >\r\n                    <li>{{ item.skill[0] }}</li>\r\n                    <li>{{ item.skill[1] }}</li>\r\n                </ul>\r\n            </a>\r\n        </li> \r\n    </ul>\r\n</template>\r\n      \r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, onMounted, toRefs, reactive } from 'vue';\r\nimport { gsap, Power2 } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default {\r\n    name: 'Work',\r\n    props: ['itemLength'],\r\n\r\n    setup(props) {\r\n        // const { itemLength } = toRefs(props);\r\n        const publicPath  = process.env.BASE_URL;\r\n \r\n        const items = reactive( null );\r\n        const express = require('express');\r\n        const app = express();\r\n\r\n\r\n        app.get('/api/data', (req, res) => {\r\n        // Handle the request and send the response\r\n        const data = { message: 'This is the data from the server.' };\r\n            res.json(data);\r\n        });\r\n\r\n        // Start the server\r\n        app.listen(8080, () => {\r\n            console.log('Server is running on port 8080');\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const cardList = ref(null);\r\n        const workListItems = ref([\r\n            { id: 1, src: '@/assets/images/aboute_me_img_01', skill: [ 'UI Publishing', 'SM' ]  },\r\n            // { id: 2, src: require('@/assets/video/guud.mp4'), skill: [ 'UI Publishing', 'build' ] },\r\n            // { id: 3, src: require('@/assets/video/bullsone.mp4'),  skill: [ 'UI Publishing', 'build' ] },\r\n            // { id: 4, src: require('@/assets/video/hodooschool.mp4'), skill: [ 'UI Publishing', 'build' ] },\r\n        ]);\r\n\r\n\r\n      \r\n\r\n\r\n        onMounted(() => {\r\n            // const gnbItems = gsap.utils.toArray(\".video__dimd\");\r\n            // gnbItems.forEach((item) => {\r\n            //     let tl = gsap.timeline({\r\n            //         scrollTrigger: {\r\n            //             trigger: item,\r\n            //         }\r\n            //     });\r\n            //     tl.set(item, { autoAlpha: 1, left: 0 });\r\n            //     tl.to(item, 0.75, {\r\n            //         left: 100 + \"%\",\r\n            //         ease: Power2.out\r\n            //     });\r\n            // })\r\n        })\r\n        return {\r\n            cardList,\r\n            workListItems,\r\n            publicPath\r\n        };\r\n    }\r\n}\r\n</script>\r\n      \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n.card {\r\n    &--list {\r\n        >li {\r\n            position: relative;\r\n            margin: vw(0 0 50px 0);\r\n            border-radius: vw(15px);\r\n            overflow: hidden;\r\n            height: vw(750px);\r\n\r\n            a {\r\n                display: block;\r\n                height: inherit;\r\n\r\n                .video__dimd {\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 0;\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    background: #fff;\r\n                    z-index: 5;\r\n                }\r\n\r\n                video {\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    object-fit: cover;\r\n                    pointer-events: none;\r\n                    position: absolute;\r\n                    top: 0;\r\n                    left: 0;\r\n                    z-index: 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &--tag__list {\r\n        position: absolute;\r\n        bottom: vw(50px);\r\n        left: vw(30px);\r\n        display: flex;\r\n\r\n        >li {\r\n            border-radius: vw(30px);\r\n            font-size: vw(40px);\r\n            padding: vw(14px 30px);\r\n            margin-left: vw(20px);\r\n            background: #fff;\r\n            color: $dpColor;\r\n            font-weight: 600;\r\n\r\n            &:first-child {\r\n                margin-left: 0;\r\n            }\r\n\r\n            &:nth-child(odd) {\r\n                background: $dpColor;\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n}</style>\r\n      "],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAO,QAAS,KAAK;AACtD,SAASC,IAAI,EAAEC,MAAK,QAAS,MAAM;AACnC,SAASC,aAAY,QAAS,oBAAoB;AAClDF,IAAI,CAACG,cAAc,CAACD,aAAa,CAAC;AAElC,eAAe;EACXE,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,CAAC,YAAY,CAAC;EAErBC,KAAKA,CAACD,KAAK,EAAE;IACT;IACA,MAAME,UAAS,GAAKC,OAAO,CAACC,GAAG,CAACC,QAAQ;IAExC,MAAMC,KAAI,GAAIZ,QAAQ,CAAE,IAAK,CAAC;IAC9B,MAAMa,OAAM,GAAIC,OAAO,CAAC,SAAS,CAAC;IAClC,MAAMC,GAAE,GAAIF,OAAO,CAAC,CAAC;IAGrBE,GAAG,CAACC,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;MACnC;MACA,MAAMC,IAAG,GAAI;QAAEC,OAAO,EAAE;MAAoC,CAAC;MACzDF,GAAG,CAACG,IAAI,CAACF,IAAI,CAAC;IAClB,CAAC,CAAC;;IAEF;IACAJ,GAAG,CAACO,MAAM,CAAC,IAAI,EAAE,MAAM;MACnBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IACjD,CAAC,CAAC;IASF,MAAMC,QAAO,GAAI5B,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAM6B,aAAY,GAAI7B,GAAG,CAAC,CACtB;MAAE8B,EAAE,EAAE,CAAC;MAAEC,GAAG,EAAE,kCAAkC;MAAEC,KAAK,EAAE,CAAE,eAAe,EAAE,IAAG;IAAK;IACpF;IACA;IACA;IAAA,CACH,CAAC;;IAMF/B,SAAS,CAAC,MAAM;MACZ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACH;IACD,OAAO;MACH2B,QAAQ;MACRC,aAAa;MACblB;IACJ,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}