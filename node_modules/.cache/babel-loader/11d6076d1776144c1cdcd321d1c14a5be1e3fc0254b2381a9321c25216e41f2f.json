{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useWorkStore } from '@/store/index';\nconst paginationStore = useWorkStore();\nexport default {\n  name: 'Pagination',\n  props: {},\n  setup(props, {\n    emit\n  }) {\n    const startIndex = computed(() => paginationStore.startIndex);\n    const endIndex = computed(() => paginationStore.endIndex);\n    const currentPage = computed(() => paginationStore.currentPage);\n    const prevClick = () => {\n      if (currentPage.value > 1) {\n        paginationStore.setCurrentPage(currentPage.value - 1);\n      }\n    };\n    const nextClick = () => {\n      if (endIndex.value < totalPineapples - 1) {\n        paginationStore.setCurrentPage(currentPage.value + 1);\n      }\n    };\n    onMounted(() => {});\n    return {\n      startIndex,\n      endIndex,\n      currentPage,\n      prevClick,\n      nextClick\n    };\n  }\n};\n\n// export default {\n//     name: 'Pagination',\n//     props: {\n//         // currentPage: {\n//         //     type: Number,\n//         //     required: true\n//         // },\n//         // totalPages: {\n//         //     type: Number,\n//         //     required: true\n//         // },\n//         // prevInfo: {\n//         //     type: Object,\n//         //     default: () => {\n//         //         return { id: '', project: '', middleBigImgSrc: ''};\n//         //     },\n//         // },\n//         // nextInfo: {\n//         //     type: Object,\n//         //     default: () => {\n//         //         return { id: '', project: '', middleBigImgSrc: ''};\n//         //     },\n//         // }\n\n//     },\n//     setup(props, { emit }) { \n//         // const itemsStore = useDataStore();\n//         // const currentPage = ref(1);\n//         // const prevProjectName = ref( '' );\n//         // const nextProjectName = ref('');\n//         // const nextProjectBg = ref('');\n//         // const prevProjectBg = ref('');\n\n//         // const counterStore = useWorkStore();\n//         // const { increment, name, count, doubleCount  } = counterStore;\n\n//         // const emitPageChange = ( page ) => {\n//         //     if (page >= 1 && page <= props.totalPages) {\n//         //         emit('page-change', page);\n//         //     }\n//         // };\n\n//         onMounted(() => {\n//         });\n\n//         // watchEffect(() => {\n//         //     nextProjectName.value = props.nextInfo.project;\n//         //     nextProjectBg.value = props.nextInfo.view?.middleBigImgSrc;\n//         //     prevProjectName.value = props.prevInfo.project;\n//         //     prevProjectBg.value = props.prevInfo.view?.middleBigImgSrc;\n//         //     console.log( \"watchEffect\");\n//         // });\n\n//         return {\n//             // prevProjectName,\n//             // nextProjectName,\n//             // nextProjectBg,\n//             // prevProjectBg,\n//             // emitPageChange,\n//             // // itemsStore,\n//             // name,\n//             // count, \n//             // doubleCount,\n//             // increment\n//         };\n//     }\n\n// }","map":{"version":3,"names":["ref","computed","onMounted","useRoute","useWorkStore","paginationStore","name","props","setup","emit","startIndex","endIndex","currentPage","prevClick","value","setCurrentPage","nextClick","totalPineapples"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\common\\Pagination.vue"],"sourcesContent":["<template>\r\n    <div class=\"work_project\">\r\n        <div class=\"project_info\" >\r\n            <router-link :to=\"'/workView' + (currentPage - 1)\" @click=\"prevClick\" >\r\n                <em class=\"text\">Prev Project</em>\r\n                <em class=\"title\">텍스트</em>\r\n                <!-- <em class=\"title\">{{ prevProjectInfo }}</em> -->\r\n            </router-link>\r\n        </div>\r\n        <div class=\"project_info\">\r\n            <router-link :to=\"'/workView' + (currentPage + 1)\" @click=\"nextPage\">\r\n                <em class=\"text\">Next Project</em>\r\n                <em class=\"title\">텍스트</em>\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n</template>  \r\n\r\n\r\n\r\n<!-- \r\n<template>\r\n    v-if=\"showPrevLink && currentPage > 1\" -->\r\n    <!--<div class=\"work_project\" :class=\"currentPage > 1 ? 'on' : ''\">\r\n        <div class=\"project_info\" v-show=\"currentPage != 1\" >\r\n            <router-link :to=\"'/workView' + (currentPage - 1)\"  :style=\"{'background-image': `url(${prevProjectBg})`}\">\r\n                <em class=\"text\">Prev Project</em>\r\n                <em class=\"title\">{{ prevProjectName }}</em>\r\n               <em class=\"title\">{{ prevProjectInfo }}</em> \r\n            </router-link>\r\n        </div>\r\n         v-if=\"showNextLink && currentPage >= 1 && currentPage <= totalPages\" \r\n        <div class=\"project_info\">\r\n            <router-link :to=\"'/workView' + (currentPage + 1)\" :style=\"{'background-image': `url(${nextProjectBg})`}\">\r\n                <em class=\"text\">Next Project</em>\r\n                <em class=\"title\">{{ nextProjectName }}</em>\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n</template>  -->\r\n<script>\r\n\r\nimport { ref, computed, onMounted   } from 'vue';\r\nimport { useRoute  } from 'vue-router';\r\nimport { useWorkStore } from '@/store/index'\r\n\r\nconst  paginationStore = useWorkStore();\r\n\r\nexport default {\r\n    name: 'Pagination',\r\n    props: {\r\n     \r\n\r\n    },\r\n    setup(props, { emit }) { \r\n        const startIndex = computed(() => paginationStore.startIndex);\r\n        const endIndex = computed(() => paginationStore.endIndex);\r\n        const currentPage = computed(() => paginationStore.currentPage);\r\n\r\n        const prevClick = () => {\r\n            if (currentPage.value > 1) {\r\n                paginationStore.setCurrentPage(currentPage.value - 1);\r\n            }\r\n        }\r\n\r\n        const nextClick = () => {\r\n            if (endIndex.value < totalPineapples - 1) {\r\n                paginationStore.setCurrentPage(currentPage.value + 1);\r\n            }\r\n        }\r\n\r\n        onMounted(() => {\r\n        });\r\n     \r\n\r\n        return {\r\n            startIndex,\r\n            endIndex,\r\n            currentPage,\r\n            prevClick,\r\n            nextClick\r\n        };\r\n    }\r\n\r\n}\r\n\r\n\r\n// export default {\r\n//     name: 'Pagination',\r\n//     props: {\r\n//         // currentPage: {\r\n//         //     type: Number,\r\n//         //     required: true\r\n//         // },\r\n//         // totalPages: {\r\n//         //     type: Number,\r\n//         //     required: true\r\n//         // },\r\n//         // prevInfo: {\r\n//         //     type: Object,\r\n//         //     default: () => {\r\n//         //         return { id: '', project: '', middleBigImgSrc: ''};\r\n//         //     },\r\n//         // },\r\n//         // nextInfo: {\r\n//         //     type: Object,\r\n//         //     default: () => {\r\n//         //         return { id: '', project: '', middleBigImgSrc: ''};\r\n//         //     },\r\n//         // }\r\n\r\n//     },\r\n//     setup(props, { emit }) { \r\n//         // const itemsStore = useDataStore();\r\n//         // const currentPage = ref(1);\r\n//         // const prevProjectName = ref( '' );\r\n//         // const nextProjectName = ref('');\r\n//         // const nextProjectBg = ref('');\r\n//         // const prevProjectBg = ref('');\r\n\r\n//         // const counterStore = useWorkStore();\r\n//         // const { increment, name, count, doubleCount  } = counterStore;\r\n\r\n\r\n\r\n//         // const emitPageChange = ( page ) => {\r\n//         //     if (page >= 1 && page <= props.totalPages) {\r\n//         //         emit('page-change', page);\r\n//         //     }\r\n//         // };\r\n\r\n//         onMounted(() => {\r\n//         });\r\n\r\n\r\n//         // watchEffect(() => {\r\n//         //     nextProjectName.value = props.nextInfo.project;\r\n//         //     nextProjectBg.value = props.nextInfo.view?.middleBigImgSrc;\r\n//         //     prevProjectName.value = props.prevInfo.project;\r\n//         //     prevProjectBg.value = props.prevInfo.view?.middleBigImgSrc;\r\n//         //     console.log( \"watchEffect\");\r\n//         // });\r\n\r\n\r\n//         return {\r\n//             // prevProjectName,\r\n//             // nextProjectName,\r\n//             // nextProjectBg,\r\n//             // prevProjectBg,\r\n//             // emitPageChange,\r\n//             // // itemsStore,\r\n//             // name,\r\n//             // count, \r\n//             // doubleCount,\r\n//             // increment\r\n//         };\r\n//     }\r\n\r\n// }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n.work_project {\r\n    .project_info {\r\n        a {\r\n            padding: vw(50px 100px);\r\n            display: block;\r\n            width: 100%;\r\n            background: url(\"@/assets/images/nextproject_img1.jpg\") 0 0 no-repeat;\r\n            background-size:cover;\r\n            height: vw(260px);\r\n            box-sizing: border-box;\r\n\r\n            em {\r\n                display: block;\r\n            }\r\n\r\n            .text {\r\n                font-size: vw(30px);\r\n                font-weight: 600;\r\n                color: #fff;\r\n            }\r\n\r\n            .title {\r\n                padding-top: vw(30px);\r\n                text-align: center;\r\n                font-size: vw(50px);\r\n                color: #fff;\r\n                font-family: 'Noto Sans Korean';\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.on {\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        .project_info {\r\n            width: 50%;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"AA0CA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAW,KAAK;AAChD,SAASC,QAAO,QAAU,YAAY;AACtC,SAASC,YAAW,QAAS,eAAc;AAE3C,MAAOC,eAAc,GAAID,YAAY,CAAC,CAAC;AAEvC,eAAe;EACXE,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CAGP,CAAC;EACDC,KAAKA,CAACD,KAAK,EAAE;IAAEE;EAAK,CAAC,EAAE;IACnB,MAAMC,UAAS,GAAIT,QAAQ,CAAC,MAAMI,eAAe,CAACK,UAAU,CAAC;IAC7D,MAAMC,QAAO,GAAIV,QAAQ,CAAC,MAAMI,eAAe,CAACM,QAAQ,CAAC;IACzD,MAAMC,WAAU,GAAIX,QAAQ,CAAC,MAAMI,eAAe,CAACO,WAAW,CAAC;IAE/D,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACpB,IAAID,WAAW,CAACE,KAAI,GAAI,CAAC,EAAE;QACvBT,eAAe,CAACU,cAAc,CAACH,WAAW,CAACE,KAAI,GAAI,CAAC,CAAC;MACzD;IACJ;IAEA,MAAME,SAAQ,GAAIA,CAAA,KAAM;MACpB,IAAIL,QAAQ,CAACG,KAAI,GAAIG,eAAc,GAAI,CAAC,EAAE;QACtCZ,eAAe,CAACU,cAAc,CAACH,WAAW,CAACE,KAAI,GAAI,CAAC,CAAC;MACzD;IACJ;IAEAZ,SAAS,CAAC,MAAM,CAChB,CAAC,CAAC;IAGF,OAAO;MACHQ,UAAU;MACVC,QAAQ;MACRC,WAAW;MACXC,SAAS;MACTG;IACJ,CAAC;EACL;AAEJ;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}