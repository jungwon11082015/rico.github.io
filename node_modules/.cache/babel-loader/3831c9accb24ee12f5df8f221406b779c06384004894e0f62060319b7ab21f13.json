{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3ed33cf2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Project Work\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CardList = _resolveComponent(\"CardList\");\n  const _component_Skeletor = _resolveComponent(\"Skeletor\");\n  const _component_AllWork = _resolveComponent(\"AllWork\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, $setup.isShow ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_CardList, {\n    itemLimit: 5\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_Skeletor, {\n    SkeletorLength: 5,\n    SkeletorLocation: `main`,\n    SkeletorType: `list`\n  })])), _createVNode(_component_AllWork)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$setup","isShow","_hoisted_4","_createVNode","_component_CardList","itemLimit","_hoisted_5","_component_Skeletor","SkeletorLength","SkeletorLocation","SkeletorType","_component_AllWork"],"sources":["C:\\Rico\\portfilo2023\\src\\views\\Main\\Section\\Work.vue"],"sourcesContent":["<template>\r\n    <section class=\"card\" >\r\n        <div class=\"inner\"  > \r\n            <h2>Project Work</h2>\r\n                <div v-if=\"isShow\">\r\n                    <CardList  :itemLimit=\"5\" />\r\n                </div> \r\n                <div v-else>\r\n                    <Skeletor :SkeletorLength=\"5\" :SkeletorLocation=\"`main`\"  :SkeletorType=\"`list`\"/>\r\n                </div> \r\n               \r\n              \r\n            <AllWork /> \r\n        </div>  \r\n    </section>\r\n</template>\r\n       \r\n<script>\r\nimport { ref, inject, onMounted   } from 'vue';\r\nimport CardList from '@/components/Layouts/List/CardList.vue'\r\nimport AllWork from '@/components/Layouts/buttons/AllWork.vue'\r\nimport Skeletor from \"@/components/Layouts/common/Skeleton.vue\";\r\n\r\nexport default {\r\n    name: 'Work',\r\n    components: {\r\n        CardList,\r\n        AllWork,\r\n        Skeletor\r\n    },\r\n\r\n    setup() {\r\n        const isShow = ref(false);\r\n        const emitter = inject('emitter');  \r\n\r\n\r\n        const isPageChange =  () => {\r\n            emitter.on('workDataJson', (value) => {\r\n                console.log('isDataShow received!', `value: ${value}`);\r\n                isShow.value = value;\r\n                console.log( typeof value );\r\n            });\r\n        };\r\n\r\n\r\n        onMounted(() => {\r\n            isPageChange();\r\n        })\r\n        return {\r\n            isShow,\r\n        };\r\n    }\r\n}\r\n</script>\r\n      \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\nsection {\r\n    padding: vw(100px 0);\r\n    align-items: start;\r\n\r\n    .inner {\r\n        display: block;\r\n\r\n        h2 {\r\n            font-size: vw(60px);\r\n            color: $dpColor;\r\n            font-weight: bold;\r\n            letter-spacing: vw(-1px);\r\n            margin-bottom: vw(30px);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n</style>\r\n      "],"mappings":";;;EACaA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAO;gEACdC,mBAAA,CAAqB,YAAjB,cAAY;;;;;;;;;;;uBAFxBC,mBAAA,CAaU,WAbVC,UAaU,GAZNF,mBAAA,CAWM,OAXNG,UAWM,GAVFC,UAAqB,EACNC,MAAA,CAAAC,MAAM,I,cAAjBL,mBAAA,CAEM,OAAAM,UAAA,GADFC,YAAA,CAA4BC,mBAAA;IAAhBC,SAAS,EAAE;EAAC,G,oBAE5BT,mBAAA,CAEM,OAAAU,UAAA,GADFH,YAAA,CAAkFI,mBAAA;IAAvEC,cAAc,EAAE,CAAC;IAAGC,gBAAgB,EAAE,MAAM;IAAIC,YAAY,EAAE;SAIjFP,YAAA,CAAWQ,kBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}