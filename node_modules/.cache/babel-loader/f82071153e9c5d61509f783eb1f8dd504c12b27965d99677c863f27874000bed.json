{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"cursor\",\n    ref: \"cursorPointer\",\n    onMousemove: _cache[0] || (_cache[0] = (...args) => $setup.mouseMoveEvent && $setup.mouseMoveEvent(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */);\n}","map":{"version":3,"names":["_createElementBlock","class","ref","onMousemove","_cache","args","$setup","mouseMoveEvent"],"sources":["C:\\2023\\project\\src\\components\\Mouse\\Cursor.vue"],"sourcesContent":["<template>\r\n  <div class=\"cursor\" ref=\"cursorPointer\" @mousemove=\"mouseMoveEvent\"></div>\r\n</template>\r\n  \r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport {gsap, power3 } from 'gsap';\r\nexport default {\r\n\r\n    name: 'cursor',\r\n    props: {\r\n    },\r\n\r\n    setup() {\r\n        const cursorPointer = ref(null);\r\n        const mouseMoveEvent = (e) => {\r\n            let x = e.clientX;\r\n            let y = e.clientY;\r\n            console.log( x, y );\r\n            console.log( \"이벤트 실행되니?\" ); \r\n        }\r\n\r\n        onMounted(() => {\r\n            gsap.set(cursorPointer.value, { force3D: true });\r\n            // document.addEventListener('mousemove', handleMouseMove);\r\n            // document.body.addEventListener('mouseleave', handleMouseLeave);\r\n            // document.body.addEventListener('mouseenter', handleMouseEnter);\r\n        });\r\n\r\n   \r\n\r\n        function handleMouseMove(e) {\r\n            let x = e.clientX;\r\n            let y = e.clientY;\r\n            console.log( x, y );\r\n            gsap.to(cursorPointer.value, {\r\n                x: x - 16,\r\n                y: y - 16,\r\n                ease: 'power3',\r\n            });\r\n        }\r\n\r\n        function handleMouseLeave() {\r\n            gsap.to(cursorPointer.value, {\r\n                scale: 0,\r\n                duration: 0.1,\r\n                ease: 'none',\r\n            });\r\n        }\r\n\r\n        function handleMouseEnter() {\r\n            gsap.to(cursorPointer.value, {\r\n                scale: 1,\r\n                duration: 0.1,\r\n                ease: 'none',\r\n            });\r\n        }\r\n\r\n        return {\r\n            // cursorPointer,\r\n            mouseMoveEvent \r\n        };\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\" scoped>\r\n.cursor {\r\n    border-radius: 50%;\r\n    width: 32px;\r\n    height: 32px;\r\n    background-color: white;\r\n    mix-blend-mode: difference;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    will-change: transform;\r\n    pointer-events: none;\r\n}\r\n</style>\r\n  "],"mappings":";;uBACEA,mBAAA,CAA0E;IAArEC,KAAK,EAAC,QAAQ;IAACC,GAAG,EAAC,eAAe;IAAEC,WAAS,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}