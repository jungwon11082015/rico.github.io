{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { gsap, Expo, Linear } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport CardList from '@/components/Card/CardList.vue';\ngsap.registerPlugin(ScrollTrigger);\nexport default {\n  name: 'WorkList',\n  props: {},\n  components: {\n    CardList\n  },\n  setup() {\n    const title = ref(null);\n    const subTitle = ref(null);\n    const count = ref(0);\n    const game = {\n      score: 0\n    };\n    const titleShow = () => {\n      const tl = gsap.timeline();\n      const items = gsap.utils.toArray(\".js-motion\");\n      items.forEach(() => {\n        gsap.set(items, {\n          opacity: 0,\n          y: 20\n        });\n        gsap.to(items, 0.75, {\n          opacity: 1,\n          y: 0,\n          ease: Expo.easeInOut\n        });\n        gsap.to(game, 4, {\n          score: \"+=58\",\n          roundProps: \"score\",\n          ease: Linear.easeNone,\n          onUpdate: upDateHandler\n        });\n      });\n    };\n    const upDateHandler = () => {\n      count.value.innerText = game.score;\n    };\n    onMounted(() => {\n      titleShow();\n    });\n    return {\n      title,\n      subTitle,\n      count\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","gsap","Expo","Linear","ScrollTrigger","CardList","registerPlugin","name","props","components","setup","title","subTitle","count","game","score","titleShow","tl","timeline","items","utils","toArray","forEach","set","opacity","y","to","ease","easeInOut","roundProps","easeNone","onUpdate","upDateHandler","value","innerText"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\Work\\WorkList.vue"],"sourcesContent":["<template>\r\n  <div id=\"work\">\r\n    <div class=\"inner\">\r\n      <div class=\"work_text_box js-motion\">\r\n        <h2 class=\"work_title\" ref=\"title\">\r\n          참여했던 프로젝트를<br />\r\n          소개합니다.\r\n        </h2>\r\n        <h3 class=\"work_subtitle js-motion\" ref=\"subTitle\">\r\n          약 <span class=\"count\" ref=\"count\">0</span>개의 프로젝트를 성공적으로 해냈습니다.\r\n        </h3>\r\n      </div>\r\n\r\n      <CardList />\r\n    </div>\r\n  </div>\r\n</template>\r\n    \r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { gsap, Expo, Linear } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\nimport CardList from '@/components/Card/CardList.vue'\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\n\r\nexport default {\r\n  name: 'WorkList',\r\n  props: {\r\n  },\r\n  components: {\r\n    CardList,\r\n  },\r\n  setup() {\r\n    const title = ref(null);\r\n    const subTitle = ref(null);\r\n    const count = ref( 0 );\r\n    const game = {score:0};\r\n    \r\n    const titleShow =  () =>{\r\n      \r\n      const tl = gsap.timeline();\r\n      const items = gsap.utils.toArray(\".js-motion\");\r\n      \r\n      items.forEach( () =>{\r\n        gsap.set(  items, { opacity: 0, y:20 });\r\n        gsap.to(  items, 0.75, { opacity: 1, y:0, ease:Expo.easeInOut});\r\n        gsap.to( game, 4, {score:\"+=58\", roundProps:\"score\", ease:Linear.easeNone, onUpdate:upDateHandler});\r\n      })\r\n    }\r\n\r\n    const upDateHandler = () => {\r\n      count.value.innerText = game.score;\r\n    }\r\n\r\n    onMounted(() => {\r\n      titleShow();\r\n    });\r\n\r\n\r\n    return {\r\n      title,\r\n      subTitle,\r\n      count\r\n    };\r\n  }\r\n}\r\n</script>\r\n    \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n#work {\r\n  .inner {\r\n    display: block;\r\n    .work_text_box{\r\n      padding: vw(400px 0 400px 0);\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    h2 {\r\n      width: 45%;\r\n      font-size: vw(80px);\r\n      color: #141414;\r\n      font-weight: bold;\r\n      letter-spacing: vw(-3px);\r\n      line-height: 1.3;\r\n      font-family: 'Noto Sans Korean';\r\n    }\r\n    h3 {\r\n      width: 55%;\r\n      font-size: vw(80px);\r\n      color: #141414;\r\n      font-weight: bold;\r\n      letter-spacing: vw(-3px);\r\n      line-height: 1.3;\r\n      font-family: 'Noto Sans Korean';\r\n      .count{\r\n        display: inline-block;\r\n        text-align: center;\r\n        font-size: vw(80px);\r\n        width: vw(100px);\r\n        color: $dpColor;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n    "],"mappings":"AAmBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,IAAI,EAAEC,IAAI,EAAEC,MAAK,QAAS,MAAM;AACzC,SAASC,aAAY,QAAS,oBAAoB;AAClD,OAAOC,QAAO,MAAO,gCAA+B;AACpDJ,IAAI,CAACK,cAAc,CAACF,aAAa,CAAC;AAGlC,eAAe;EACbG,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,CACP,CAAC;EACDC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIZ,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMa,QAAO,GAAIb,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMc,KAAI,GAAId,GAAG,CAAE,CAAE,CAAC;IACtB,MAAMe,IAAG,GAAI;MAACC,KAAK,EAAC;IAAC,CAAC;IAEtB,MAAMC,SAAQ,GAAKA,CAAA,KAAK;MAEtB,MAAMC,EAAC,GAAIhB,IAAI,CAACiB,QAAQ,CAAC,CAAC;MAC1B,MAAMC,KAAI,GAAIlB,IAAI,CAACmB,KAAK,CAACC,OAAO,CAAC,YAAY,CAAC;MAE9CF,KAAK,CAACG,OAAO,CAAE,MAAK;QAClBrB,IAAI,CAACsB,GAAG,CAAGJ,KAAK,EAAE;UAAEK,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAC;QAAG,CAAC,CAAC;QACvCxB,IAAI,CAACyB,EAAE,CAAGP,KAAK,EAAE,IAAI,EAAE;UAAEK,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAC,CAAC;UAAEE,IAAI,EAACzB,IAAI,CAAC0B;QAAS,CAAC,CAAC;QAC/D3B,IAAI,CAACyB,EAAE,CAAEZ,IAAI,EAAE,CAAC,EAAE;UAACC,KAAK,EAAC,MAAM;UAAEc,UAAU,EAAC,OAAO;UAAEF,IAAI,EAACxB,MAAM,CAAC2B,QAAQ;UAAEC,QAAQ,EAACC;QAAa,CAAC,CAAC;MACrG,CAAC;IACH;IAEA,MAAMA,aAAY,GAAIA,CAAA,KAAM;MAC1BnB,KAAK,CAACoB,KAAK,CAACC,SAAQ,GAAIpB,IAAI,CAACC,KAAK;IACpC;IAEAf,SAAS,CAAC,MAAM;MACdgB,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;IAGF,OAAO;MACLL,KAAK;MACLC,QAAQ;MACRC;IACF,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}