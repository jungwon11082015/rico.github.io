{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-04eab39e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"blog\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nconst _hoisted_3 = {\n  class: \"posting--info\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"posting--title\"\n}, \" 디지털 트랜스포메이션 - CDP(Customer Data Platform) \", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"posting--context\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_dompurify_html = _resolveDirective(\"dompurify-html\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pageItem, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"posting--contents\",\n      key: item.id\n    }, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pageItem.tags, (tag, index) => {\n      return _openBlock(), _createElementBlock(\"em\", {\n        key: index\n      }, _toDisplayString($setup.removeSpecialChars(tag)), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"span\", null, _toDisplayString($setup.formatDate($setup.pageItem.date)), 1 /* TEXT */)]), _hoisted_4, _withDirectives(_createElementVNode(\"div\", _hoisted_5, null, 512 /* NEED_PATCH */), [[_directive_dompurify_html, $setup.pageItem]])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","pageItem","item","index","key","_hoisted_3","tags","tag","_toDisplayString","removeSpecialChars","formatDate","date","_hoisted_4","_hoisted_5"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\Views\\BlogView.vue"],"sourcesContent":["<template>\r\n  <section id=\"blog\">\r\n    <div class=\"inner\">\r\n      <div class=\"posting--contents\" v-for=\"(item, index) in pageItem\" :key=\"item.id\">\r\n        <div class=\"posting--info\">\r\n          <em v-for=\"(tag, index) in pageItem.tags\"  :key=\"index\">{{ removeSpecialChars(tag) }}</em>\r\n          <span>{{ formatDate(pageItem.date)}}</span>\r\n        </div>\r\n        <h2 class=\"posting--title\">\r\n          디지털 트랜스포메이션 - CDP(Customer Data Platform)\r\n        </h2>\r\n        <div class=\"posting--context\"  v-dompurify-html=\"pageItem\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </section>\r\n</template>\r\n    \r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport default {\r\n  name: 'BlogView',\r\n  postId: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  components: {},\r\n  setup() {\r\n    const route = useRoute();\r\n    const pageId = route.params.id;\r\n    const pageItem = ref({ tags: [] });\r\n    const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\r\n\r\n    const formatDate = (dateString) => {\r\n        const dateObject = new Date(dateString);\r\n        const year = dateObject.getFullYear();\r\n        const month = String(dateObject.getMonth() + 1).padStart(2, '0');\r\n        const day = String(dateObject.getDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n\r\n\r\n    const removeSpecialChars = (text) => {\r\n      const reg = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\' \\\"]/gi;\r\n      return text.replace(reg, '');\r\n    };\r\n\r\n\r\n    \r\n    const tstoryitemView = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://www.tistory.com/apis/post/read?\", {\r\n                params: {\r\n                  access_token: ACCESS_TOKEN,\r\n                  blogName: 'rico86',\r\n                  output: 'json',\r\n                  postId:pageId\r\n                },\r\n            })\r\n            pageItem.value = response.data.tistory.item;\r\n            console.log(  pageItem.value );\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n    onMounted(() => {\r\n      tstoryitemView();\r\n    });\r\n\r\n    return {\r\n      formatDate,\r\n      removeSpecialChars,\r\n      pageItem,\r\n    };\r\n  }\r\n}\r\n</script>\r\n    \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n  #blog {\r\n    \r\n    .inner{\r\n      display: block;\r\n      padding: 0 300px;\r\n    }\r\n    .posting{\r\n      &--contents{\r\n        padding-top: 200px;\r\n      }\r\n      &--info{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding-bottom: 40px;\r\n        em{\r\n          display: block;\r\n          width: 90%;\r\n          font-style: normal;\r\n          color: $dpColor;\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          font-family: 'Noto Sans Korean';\r\n        }\r\n        span{\r\n          display: block;\r\n          width: 10%;\r\n          font-size: 24px;\r\n        }\r\n      }\r\n      &--title{\r\n        padding-bottom: 120px;\r\n        width: 100%;\r\n        font-size: 58px;\r\n        line-height: 68px;\r\n        font-weight: bold;\r\n        color: #000;\r\n        letter-spacing: -1px;\r\n        font-family: 'Noto Sans Korean';\r\n      }\r\n      &--context{\r\n        line-height: 1.7;\r\n        p{ \r\n          margin-bottom: 0;\r\n          color: #000;\r\n          font-size: 18px;\r\n         \r\n          >img{ width: auto; } \r\n        }\r\n        table{\r\n          width: 100%;\r\n          td{padding: 8px 0;}\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style> \r\n    "],"mappings":";;;EACWA,EAAE,EAAC;AAAM;;EACXC,KAAK,EAAC;AAAO;;EAETA,KAAK,EAAC;AAAe;gEAI1BC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAgB,GAAC,6CAE3B;;EACKA,KAAK,EAAC;AAAkB;;;uBAVnCE,mBAAA,CAeU,WAfVC,UAeU,GAdRF,mBAAA,CAYM,OAZNG,UAYM,I,kBAXJF,mBAAA,CAUMG,SAAA,QAAAC,WAAA,CAViDC,MAAA,CAAAC,QAAQ,GAAxBC,IAAI,EAAEC,KAAK;yBAAlDR,mBAAA,CAUM;MAVDF,KAAK,EAAC,mBAAmB;MAAoCW,GAAG,EAAEF,IAAI,CAACV;QAC1EE,mBAAA,CAGM,OAHNW,UAGM,I,kBAFJV,mBAAA,CAA0FG,SAAA,QAAAC,WAAA,CAA/DC,MAAA,CAAAC,QAAQ,CAACK,IAAI,GAA5BC,GAAG,EAAEJ,KAAK;2BAAtBR,mBAAA,CAA0F;QAA9CS,GAAG,EAAED;MAAK,GAAAK,gBAAA,CAAKR,MAAA,CAAAS,kBAAkB,CAACF,GAAG;oCACjFb,mBAAA,CAA2C,cAAAc,gBAAA,CAAlCR,MAAA,CAAAU,UAAU,CAACV,MAAA,CAAAC,QAAQ,CAACU,IAAI,kB,GAEnCC,UAEK,E,gBACLlB,mBAAA,CACM,OADNmB,UACM,gC,4BAD2Cb,MAAA,CAAAC,QAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}