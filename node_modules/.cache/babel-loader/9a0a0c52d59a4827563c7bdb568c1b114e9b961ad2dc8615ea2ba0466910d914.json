{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a59524ec\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hero\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hero--layout\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hero--slogan\"\n}, [/*#__PURE__*/_createTextVNode(\"미래를 꿈꾸며\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" 끊임없이 도전하라.\")]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hero--description\"\n}, [/*#__PURE__*/_createTextVNode(\"한 번에 하나의 사용자 인터페이스\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"디지털 세상 만들기\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.heroItems, (item, index) => {\n    return _openBlock(), _createElementBlock(\"h2\", {\n      class: \"hero--title\",\n      key: index\n    }, [_createElementVNode(\"span\", null, _toDisplayString(item.title), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_3])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","heroItems","item","index","key","_toDisplayString","title","_hoisted_3"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\Main\\Hero.vue"],"sourcesContent":["<template>\r\n  <section class=\"hero\">\r\n   <div class=\"inner\">\r\n    <h2 class=\"hero--title\" v-for=\"(item, index ) in heroItems\" :key=\"index\">\r\n      <span>{{item.title}}</span>\r\n    </h2>\r\n    <div class=\"hero--layout\">\r\n      <div class=\"hero--slogan\">미래를 꿈꾸며<br /> 끊임없이 도전하라.</div>\r\n      <div class=\"hero--description\">한 번에 하나의 사용자 인터페이스<br />디지털 세상 만들기</div> \r\n\r\n    </div>\r\n   </div>\r\n  </section>\r\n</template>\r\n    \r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { gsap, power3 } from 'gsap';\r\nimport SplitType from 'split-type'\r\n\r\nexport default {\r\n  name: 'Intro',\r\n  props: {\r\n  },\r\n\r\n  setup() {\r\n\r\n    const heroItems = ref([\r\n            { id: 1, title: \"Radiant\"   },\r\n            { id: 2, title: \"Ingenious\"  },\r\n            { id: 3, title: \"Compassion\" },\r\n            { id: 4, title: \"Optimism\" },\r\n        ]);\r\n\r\n    onMounted(() => {\r\n     \r\n\r\n\r\n    })\r\n\r\n    return {\r\n    };\r\n  }\r\n\r\n}\r\n</script>\r\n    \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\"; \r\n  .hero {\r\n    position: relative;\r\n    justify-content: center;\r\n    .inner{ display: block;}\r\n    &--title{\r\n      text-align: center;\r\n      width: 100%;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      span{\r\n        display: inline-block;\r\n        width: vw(450px);\r\n        font-size:vw(800px);\r\n        color: $dpColor;\r\n        font-weight: bold;\r\n        height: 89vh;\r\n        border-radius: 3vw;\r\n        display: inline-block;\r\n        cursor: pointer;\r\n        overflow: hidden;\r\n        &:nth-child(2){\r\n          width: vw(191px);\r\n        }\r\n      }\r\n    }\r\n    &--layout{\r\n      display:flex;\r\n      justify-content: space-between;\r\n    }\r\n    &--slogan{\r\n      font-size:vw(30px);\r\n      color: $dpColor;\r\n      font-weight: 600;\r\n      line-height: 1.3;\r\n      font-family: 'Noto Sans Korean';\r\n    }\r\n    &--description{\r\n      font-size:vw(30px); \r\n      color: $dpColor;\r\n      font-weight: 600;\r\n      line-height: 1.3;\r\n      font-family: 'Noto Sans Korean';\r\n      text-align: right;\r\n    }\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n</style>\r\n    "],"mappings":";;;EACWA,KAAK,EAAC;AAAM;;EACfA,KAAK,EAAC;AAAO;gEAIjBC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAc,I,aACvBC,mBAAA,CAAwD;EAAnDD,KAAK,EAAC;AAAc,I,8BAAC,SAAO,G,aAAAC,mBAAA,CAAM,O,8BAAA,aAAW,E,gBAClDA,mBAAA,CAAuE;EAAlED,KAAK,EAAC;AAAmB,I,8BAAC,oBAAkB,G,aAAAC,mBAAA,CAAM,O,8BAAA,YAAU,E;;;uBAPrEC,mBAAA,CAWU,WAXVC,UAWU,GAVTF,mBAAA,CASM,OATNG,UASM,I,kBARLF,mBAAA,CAEKG,SAAA,QAAAC,WAAA,CAF4CC,IAAA,CAAAC,SAAS,GAA1BC,IAAI,EAAEC,KAAK;yBAA3CR,mBAAA,CAEK;MAFDF,KAAK,EAAC,aAAa;MAAsCW,GAAG,EAAED;QAChET,mBAAA,CAA2B,cAAAW,gBAAA,CAAnBH,IAAI,CAACI,KAAK,iB;kCAEpBC,UAIM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}