{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-781941dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"blog\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"BLOG\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"blog--word\"\n}, [/*#__PURE__*/_createTextVNode(\"현재 등록된 글 \"), /*#__PURE__*/_createElementVNode(\"em\", null, \"10\"), /*#__PURE__*/_createTextVNode(\"개입니다.\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BlogList = _resolveComponent(\"BlogList\");\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createVNode(_component_BlogList)])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_BlogList"],"sources":["C:\\Rico\\portfilo2023\\src\\views\\Blog.vue"],"sourcesContent":["<template>\r\n    <section id=\"blog\">\r\n        <div class=\"inner\">\r\n            <h2>BLOG</h2>\r\n            <p class=\"blog--word\">현재 등록된 글 <em>10</em>개입니다.</p>\r\n            <BlogList />\r\n        </div>\r\n    </section>\r\n</template>\r\n  \r\n<script>\r\nimport BlogList from '@/components/Layouts/List/BlogList.vue'\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    name: 'Blog',\r\n    props: {\r\n    },\r\n    components: {\r\n        BlogList\r\n    },\r\n    setup() {\r\n        const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\r\n\r\n        const objLayout = async () => {\r\n\r\n            \r\n            try {\r\n                const response = await axios.get(\"https://www.tistory.com/apis/post/list\", {\r\n                    params: {\r\n                    access_token: ACCESS_TOKEN,\r\n                    output: 'json',\r\n                    blogName: 'rico86',\r\n                    page: '1',\r\n                    },\r\n                })\r\n                // Handle the response data\r\n                console.log(response);\r\n            } catch (error) {\r\n                // Handle errors \r\n                console.error('An error occurred:', error);\r\n            }\r\n        };\r\n        \r\n        onMounted(() => {\r\n            objLayout();\r\n        });\r\n        \r\n        return {\r\n            objLayout\r\n        };\r\n    }\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n#blog {\r\n    .inner {\r\n        display: block;\r\n\r\n        h2 {\r\n            padding-top: 150px;\r\n            text-align: center;\r\n            font-weight: bold;\r\n            font-size: 120px;\r\n            color: $dpColor;\r\n        }\r\n\r\n        .blog--word {\r\n            padding: 20px 0;\r\n            text-align: center;\r\n            font-size: 24px;\r\n            font-family: 'Noto Sans Korean';\r\n            font-weight: 600;\r\n            color: #181818;\r\n\r\n            >em {\r\n                font-size: 24px;\r\n                color: $dpColor;\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n  "],"mappings":";;;EACaA,EAAE,EAAC;AAAM;;EACTC,KAAK,EAAC;AAAO;gEACdC,mBAAA,CAAa,YAAT,MAAI;gEACRA,mBAAA,CAAmD;EAAhDD,KAAK,EAAC;AAAY,I,8BAAC,WAAS,G,aAAAC,mBAAA,CAAW,YAAP,IAAE,G,8BAAK,OAAK,E;;;;uBAHvDC,mBAAA,CAMU,WANVC,UAMU,GALNF,mBAAA,CAIM,OAJNG,UAIM,GAHFC,UAAa,EACbC,UAAmD,EACnDC,YAAA,CAAYC,mBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}