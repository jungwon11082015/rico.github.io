{"ast":null,"code":"import { ref, computed, watch, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useDataStore } from '@/store/index';\nexport default {\n  name: 'Pagination',\n  props: {\n    currentPage: {\n      type: Number,\n      required: true\n    },\n    totalPages: {\n      type: Number,\n      required: true\n    },\n    prevPageData: {\n      type: Object,\n      default: () => ({})\n    },\n    nextPageData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const itemsStore = useDataStore();\n    const prevProjectName = ref('');\n    const nextProjectName = ref('');\n    const nextProjectBg = ref('');\n    const emitPageChange = page => {\n      if (page >= 1 && page <= props.totalPages) {\n        emit('page-change', page);\n      }\n    };\n    const handlePrevClick = () => {\n      // emitPageChange(props.currentPage - 1)\n      // counter.decrement()\n    };\n    const handleNextClick = () => {\n      const nextPageIndex = props.currentPage.value + 1; // Calculate the next index\n      if (nextPageIndex >= 0 && nextPageIndex < totalPages.value) {\n        props.currentPage.value = nextPageIndex; // Update the current index\n        nextPageData.value = jsonData.value[nextPageIndex]; // Update next data\n      }\n    };\n\n    watch(() => props.nextPageData, newData => {\n      nextProjectName.value = newData.project;\n      nextProjectBg.value = newData.view.middleBigImgSrc;\n    });\n    watch(() => props.currentPage, newData => {\n      console.log(newData);\n    });\n    onMounted(async () => {});\n    return {\n      prevProjectName,\n      nextProjectName,\n      nextProjectBg,\n      emitPageChange,\n      itemsStore,\n      handlePrevClick,\n      handleNextClick\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","useRoute","useDataStore","name","props","currentPage","type","Number","required","totalPages","prevPageData","Object","default","nextPageData","setup","emit","itemsStore","prevProjectName","nextProjectName","nextProjectBg","emitPageChange","page","handlePrevClick","handleNextClick","nextPageIndex","value","jsonData","newData","project","view","middleBigImgSrc","console","log"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\common\\Pagination.vue"],"sourcesContent":["<template>\r\n    <!-- v-if=\"showPrevLink && currentPage > 1\" -->\r\n    <div class=\"work_project\" :class=\"currentPage > 1 ? 'on' : ''\">\r\n        <div class=\"project_info\" v-show=\"currentPage != 1\" >\r\n            <router-link :to=\"'/workView' + (currentPage - 1)\"  @click=\"handlePrevClick\">\r\n                <em class=\"text\">Prev Project</em>\r\n                <em class=\"title\">test</em>\r\n                <!-- <em class=\"title\">{{ prevProjectInfo }}</em> -->\r\n            </router-link>\r\n        </div>\r\n        <!-- v-if=\"showNextLink && currentPage >= 1 && currentPage <= totalPages\" -->\r\n        <div class=\"project_info\">\r\n            <router-link :to=\"'/workView' + (currentPage + 1)\" @click=\"handleNextClick\"  :style=\"{ background: nextProjectBg }\">\r\n                <em class=\"text\">Next Project</em>\r\n                <em class=\"title\">{{ nextProjectName }}</em>\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n</template>  \r\n<script>\r\n\r\nimport { ref, computed,  watch, onMounted } from 'vue';\r\nimport { useRoute  } from 'vue-router';\r\nimport { useDataStore } from '@/store/index'\r\n\r\nexport default {\r\n    name: 'Pagination',\r\n    props: {\r\n        currentPage: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        totalPages: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        prevPageData: {\r\n            type: Object,\r\n            default: () => ({})\r\n        },\r\n        nextPageData: {\r\n            type: Object,\r\n            default: () => ({})\r\n        }\r\n\r\n    },\r\n    setup(props, { emit }) { \r\n        const itemsStore = useDataStore();\r\n        const prevProjectName = ref( '' );\r\n        const nextProjectName = ref( '' );\r\n        const nextProjectBg = ref( '' );\r\n        const emitPageChange = ( page ) => {\r\n            if (page >= 1 && page <= props.totalPages) {\r\n                emit('page-change', page);\r\n            }\r\n        };\r\n\r\n        const handlePrevClick = () => {\r\n            // emitPageChange(props.currentPage - 1)\r\n            // counter.decrement()\r\n        }\r\n\r\n        const handleNextClick = () => {\r\n            const nextPageIndex = props.currentPage.value + 1; // Calculate the next index\r\n            if (nextPageIndex >= 0 && nextPageIndex < totalPages.value) {\r\n                props.currentPage.value = nextPageIndex; // Update the current index\r\n                nextPageData.value = jsonData.value[nextPageIndex]; // Update next data\r\n            }\r\n        }\r\n        watch(() => props.nextPageData, (newData) => {\r\n            nextProjectName.value = newData.project; \r\n            nextProjectBg.value = newData.view.middleBigImgSrc;\r\n        });\r\n        watch(() => props.currentPage, (newData) => {\r\n            console.log(newData);\r\n        });\r\n\r\n\r\n     \r\n        \r\n        onMounted( async() => {\r\n        });\r\n\r\n        return {\r\n            prevProjectName,\r\n            nextProjectName,\r\n            nextProjectBg,\r\n            emitPageChange,\r\n            itemsStore,\r\n            handlePrevClick,\r\n            handleNextClick,\r\n        };\r\n    }\r\n\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n.work_project {\r\n    .project_info {\r\n        a {\r\n            padding: vw(50px 100px);\r\n            display: block;\r\n            width: 100%;\r\n            background: url(\"@/assets/images/nextproject_img1.jpg\") 0 0 no-repeat;\r\n            background-size: 100% auto;\r\n            height: vw(260px);\r\n            box-sizing: border-box;\r\n\r\n            em {\r\n                display: block;\r\n            }\r\n\r\n            .text {\r\n                font-size: vw(30px);\r\n                font-weight: 600;\r\n                color: #fff;\r\n            }\r\n\r\n            .title {\r\n                padding-top: vw(30px);\r\n                text-align: center;\r\n                font-size: vw(50px);\r\n                color: #fff;\r\n                font-family: 'Noto Sans Korean';\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.on {\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        .project_info {\r\n            width: 50%;\r\n\r\n            a {\r\n                background-size: auto 100%;\r\n                background-position: center center;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"AAqBA,SAASA,GAAG,EAAEC,QAAQ,EAAGC,KAAK,EAAEC,SAAQ,QAAS,KAAK;AACtD,SAASC,QAAO,QAAU,YAAY;AACtC,SAASC,YAAW,QAAS,eAAc;AAE3C,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACHC,WAAW,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDC,UAAU,EAAE;MACRH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDE,YAAY,EAAE;MACVJ,IAAI,EAAEK,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO,CAAC,CAAC;IACtB,CAAC;IACDC,YAAY,EAAE;MACVP,IAAI,EAAEK,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO,CAAC,CAAC;IACtB;EAEJ,CAAC;EACDE,KAAKA,CAACV,KAAK,EAAE;IAAEW;EAAK,CAAC,EAAE;IACnB,MAAMC,UAAS,GAAId,YAAY,CAAC,CAAC;IACjC,MAAMe,eAAc,GAAIpB,GAAG,CAAE,EAAG,CAAC;IACjC,MAAMqB,eAAc,GAAIrB,GAAG,CAAE,EAAG,CAAC;IACjC,MAAMsB,aAAY,GAAItB,GAAG,CAAE,EAAG,CAAC;IAC/B,MAAMuB,cAAa,GAAMC,IAAG,IAAO;MAC/B,IAAIA,IAAG,IAAK,KAAKA,IAAG,IAAKjB,KAAK,CAACK,UAAU,EAAE;QACvCM,IAAI,CAAC,aAAa,EAAEM,IAAI,CAAC;MAC7B;IACJ,CAAC;IAED,MAAMC,eAAc,GAAIA,CAAA,KAAM;MAC1B;MACA;IAAA,CACJ;IAEA,MAAMC,eAAc,GAAIA,CAAA,KAAM;MAC1B,MAAMC,aAAY,GAAIpB,KAAK,CAACC,WAAW,CAACoB,KAAI,GAAI,CAAC,EAAE;MACnD,IAAID,aAAY,IAAK,KAAKA,aAAY,GAAIf,UAAU,CAACgB,KAAK,EAAE;QACxDrB,KAAK,CAACC,WAAW,CAACoB,KAAI,GAAID,aAAa,EAAE;QACzCX,YAAY,CAACY,KAAI,GAAIC,QAAQ,CAACD,KAAK,CAACD,aAAa,CAAC,EAAE;MACxD;IACJ;;IACAzB,KAAK,CAAC,MAAMK,KAAK,CAACS,YAAY,EAAGc,OAAO,IAAK;MACzCT,eAAe,CAACO,KAAI,GAAIE,OAAO,CAACC,OAAO;MACvCT,aAAa,CAACM,KAAI,GAAIE,OAAO,CAACE,IAAI,CAACC,eAAe;IACtD,CAAC,CAAC;IACF/B,KAAK,CAAC,MAAMK,KAAK,CAACC,WAAW,EAAGsB,OAAO,IAAK;MACxCI,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACxB,CAAC,CAAC;IAKF3B,SAAS,CAAE,YAAW,CACtB,CAAC,CAAC;IAEF,OAAO;MACHiB,eAAe;MACfC,eAAe;MACfC,aAAa;MACbC,cAAc;MACdJ,UAAU;MACVM,eAAe;MACfC;IACJ,CAAC;EACL;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}