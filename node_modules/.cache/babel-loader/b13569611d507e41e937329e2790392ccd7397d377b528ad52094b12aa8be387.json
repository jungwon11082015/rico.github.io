{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { gsap, power3 } from 'gsap';\nexport default {\n  name: 'cursor',\n  props: {},\n  setup() {\n    const mouseMoveEvent = e => {\n      let x = e.clientX;\n      let y = e.clientY;\n      console.log(x, y);\n      gsap.to(cursorPointer.value, {\n        x: x - 16,\n        y: y - 16,\n        ease: 'power3'\n      });\n    };\n    onMounted(() => {\n      const cursorPointer = ref(null);\n      gsap.set(cursorPointer.value, {\n        force3D: true\n      });\n      mouseMoveEvent();\n\n      // document.addEventListener('mousemove', handleMouseMove);\n      // document.body.addEventListener('mouseleave', handleMouseLeave);\n      // document.body.addEventListener('mouseenter', handleMouseEnter);\n    });\n\n    // function handleMouseMove(e) {\n    //     let x = e.clientX;\n    //     let y = e.clientY;\n    //     console.log( x, y );\n    //     gsap.to(cursorPointer.value, {\n    //         x: x - 16,\n    //         y: y - 16,\n    //         ease: 'power3',\n    //     });\n    // }\n\n    // function handleMouseLeave() {\n    //     gsap.to(cursorPointer.value, {\n    //         scale: 0,\n    //         duration: 0.1,\n    //         ease: 'none',\n    //     });\n    // }\n\n    // function handleMouseEnter() {\n    //     gsap.to(cursorPointer.value, {\n    //         scale: 1,\n    //         duration: 0.1,\n    //         ease: 'none',\n    //     });\n    // }\n\n    return {\n      mouseMoveEvent\n      // cursorPointer,\n      // mouseMoveEvent \n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","gsap","power3","name","props","setup","mouseMoveEvent","e","x","clientX","y","clientY","console","log","to","cursorPointer","value","ease","set","force3D"],"sources":["C:\\2023\\project\\src\\components\\Mouse\\Cursor.vue"],"sourcesContent":["<template>\r\n  <div class=\"cursor\" ref=\"cursorPointer\" @mousemove=\"mouseMoveEvent\" ></div>\r\n</template>\r\n  \r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport {gsap, power3 } from 'gsap';\r\nexport default {\r\n\r\n    name: 'cursor',\r\n    props: {\r\n    },\r\n\r\n    setup() {\r\n        const mouseMoveEvent = (e) => {\r\n            let x = e.clientX;\r\n            let y = e.clientY;\r\n            console.log( x, y );\r\n            gsap.to(cursorPointer.value, {\r\n                x: x - 16,\r\n                y: y - 16,\r\n                ease: 'power3',\r\n            });\r\n        }\r\n        onMounted(() => {\r\n            const cursorPointer = ref(null);\r\n            gsap.set(cursorPointer.value, { force3D: true });\r\n            mouseMoveEvent();\r\n\r\n          \r\n\r\n\r\n\r\n            // document.addEventListener('mousemove', handleMouseMove);\r\n            // document.body.addEventListener('mouseleave', handleMouseLeave);\r\n            // document.body.addEventListener('mouseenter', handleMouseEnter);\r\n        });\r\n\r\n   \r\n\r\n        // function handleMouseMove(e) {\r\n        //     let x = e.clientX;\r\n        //     let y = e.clientY;\r\n        //     console.log( x, y );\r\n        //     gsap.to(cursorPointer.value, {\r\n        //         x: x - 16,\r\n        //         y: y - 16,\r\n        //         ease: 'power3',\r\n        //     });\r\n        // }\r\n\r\n        // function handleMouseLeave() {\r\n        //     gsap.to(cursorPointer.value, {\r\n        //         scale: 0,\r\n        //         duration: 0.1,\r\n        //         ease: 'none',\r\n        //     });\r\n        // }\r\n\r\n        // function handleMouseEnter() {\r\n        //     gsap.to(cursorPointer.value, {\r\n        //         scale: 1,\r\n        //         duration: 0.1,\r\n        //         ease: 'none',\r\n        //     });\r\n        // }\r\n\r\n        return {\r\n            mouseMoveEvent\r\n            // cursorPointer,\r\n            // mouseMoveEvent \r\n        };\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\" scoped>\r\n.cursor {\r\n    border-radius: 50%;\r\n    width: 32px;\r\n    height: 32px;\r\n    background-color: white;\r\n    mix-blend-mode: difference;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    will-change: transform;\r\n    pointer-events: none;\r\n}\r\n</style>\r\n  "],"mappings":"AAKA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAAQC,IAAI,EAAEC,MAAK,QAAS,MAAM;AAClC,eAAe;EAEXC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,CACP,CAAC;EAEDC,KAAKA,CAAA,EAAG;IACJ,MAAMC,cAAa,GAAKC,CAAC,IAAK;MAC1B,IAAIC,CAAA,GAAID,CAAC,CAACE,OAAO;MACjB,IAAIC,CAAA,GAAIH,CAAC,CAACI,OAAO;MACjBC,OAAO,CAACC,GAAG,CAAEL,CAAC,EAAEE,CAAE,CAAC;MACnBT,IAAI,CAACa,EAAE,CAACC,aAAa,CAACC,KAAK,EAAE;QACzBR,CAAC,EAAEA,CAAA,GAAI,EAAE;QACTE,CAAC,EAAEA,CAAA,GAAI,EAAE;QACTO,IAAI,EAAE;MACV,CAAC,CAAC;IACN;IACAjB,SAAS,CAAC,MAAM;MACZ,MAAMe,aAAY,GAAIhB,GAAG,CAAC,IAAI,CAAC;MAC/BE,IAAI,CAACiB,GAAG,CAACH,aAAa,CAACC,KAAK,EAAE;QAAEG,OAAO,EAAE;MAAK,CAAC,CAAC;MAChDb,cAAc,CAAC,CAAC;;MAMhB;MACA;MACA;IACJ,CAAC,CAAC;;IAIF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAO;MACHA;MACA;MACA;IACJ,CAAC;EACL;AAGJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}