{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6f7e05be\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"sections\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Intro = _resolveComponent(\"Intro\");\n  const _component_Text = _resolveComponent(\"Text\");\n  const _component_Work = _resolveComponent(\"Work\");\n  const _component_BigLogo = _resolveComponent(\"BigLogo\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Intro), _createVNode(_component_Text), _createVNode(_component_Work), _createVNode(_component_BigLogo)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_Intro","_component_Text","_component_Work","_component_BigLogo"],"sources":["C:\\2023\\project\\src\\components\\Layouts\\Main\\Sections.vue"],"sourcesContent":["<template>\r\n  <div id=\"sections\">\r\n    <Intro />\r\n    <Text />\r\n    <Work />\r\n    <BigLogo />\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\n\r\nimport Intro from '@/components/Layouts/Main/Intro.vue'\r\nimport Text from '@/components/Layouts/Main/Text.vue'\r\nimport Work from '@/components/Layouts/Main/Work.vue'\r\nimport BigLogo from '@/components/Layouts/Main/BigLogo.vue'\r\nexport default {\r\n  name: 'Sections',\r\n  props: {\r\n  },\r\n  components: {\r\n    Intro,\r\n    Text,\r\n    Work,\r\n    BigLogo,\r\n  },\r\n  setup() {\r\n    onMounted(() => {\r\n \r\n    });\r\n\r\n\r\n    return {\r\n    };\r\n  }\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\" scoped>\r\n#sections {\r\n  overflow: hidden;\r\n}\r\n</style>\r\n  "],"mappings":";;;EACOA,EAAE,EAAC;AAAU;;;;;;uBAAlBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAASC,gBAAA,GACTD,YAAA,CAAQE,eAAA,GACRF,YAAA,CAAQG,eAAA,GACRH,YAAA,CAAWI,kBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}