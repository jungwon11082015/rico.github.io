{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { gsap, Power0, Power2, power3, Expo } from 'gsap';\nexport default {\n  name: 'Intro',\n  props: {},\n  setup() {\n    const textTarget = ref(\"\");\n    const textTitle = ref(\"\");\n    const visualShow = () => {\n      const textItems = gsap.utils.toArray(\".hero--text em\");\n      textItems.forEach((item, index) => {\n        gsap.set(textItems, {\n          opacity: 0,\n          scale: .5\n        });\n        gsap.to(item, 0.75, {\n          opacity: 1,\n          scale: 1,\n          transformOrigin: \"50% 50%\",\n          ease: Expo.easeOut,\n          delay: 1.5 * index,\n          onStart: () => {\n            textItems.forEach((otherItem, otherIndex) => {\n              if (otherIndex !== index) {\n                otherItem.style.opacity = 0;\n              }\n            });\n          },\n          onComplete: () => {\n            if (index === textItems.length - 1) {\n              gsap.to(item, 0.75, {\n                opacity: 0,\n                ease: Power0.easeInOut,\n                delay: 0.25,\n                onComplete: () => {\n                  if (textTarget.value != null) {\n                    textTarget.value.remove();\n                    textTitle.value.classList.add(\"on\");\n                  }\n                }\n              });\n            }\n          }\n        });\n      });\n    };\n    onMounted(() => {\n      visualShow();\n    });\n    onUnmounted(() => {\n      visualShow();\n    });\n    return {\n      textTarget,\n      textTitle,\n      visualShow\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","gsap","Power0","Power2","power3","Expo","name","props","setup","textTarget","textTitle","visualShow","textItems","utils","toArray","forEach","item","index","set","opacity","scale","to","transformOrigin","ease","easeOut","delay","onStart","otherItem","otherIndex","style","onComplete","length","easeInOut","value","remove","classList","add"],"sources":["C:\\Rico\\portfilo2023\\src\\views\\Main\\Section\\Hero.vue"],"sourcesContent":["<template>\r\n  <section class=\"hero\">\r\n    <div class=\"inner\">\r\n      <h2 class=\"hero--title\" ref=\"textTarget\">\r\n        <div class=\"hero--text\">\r\n              <em class=\"on\">Radiant</em>\r\n              <em>Inspirational</em>\r\n              <em>Cheerful</em>\r\n              <em>Optimistic</em>\r\n        </div>\r\n      </h2>\r\n      <h3 class=\"hero--name\" ref=\"textTitle\">RICO</h3>\r\n      <div class=\"hero--layout\">\r\n        <div class=\"hero--slogan\">도전을 즐기며<br /> 실패를 즐기는 사람.</div>\r\n        <div class=\"hero--description\">사용자 UI 인터페이스를<br />생각하는 사람</div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n    \r\n<script>\r\nimport { ref, onMounted, onUnmounted  } from 'vue';\r\nimport { gsap, Power0, Power2, power3, Expo } from 'gsap';\r\n\r\nexport default {\r\n  name: 'Intro',\r\n  props: {\r\n  },\r\n\r\n  setup() {\r\n    const textTarget = ref( \"\" );\r\n    const textTitle = ref( \"\" );\r\n\r\n    const visualShow = () => {\r\n      const textItems =  gsap.utils.toArray(\".hero--text em\");\r\n      textItems.forEach((item, index) =>{\r\n          gsap.set( textItems, {  opacity:0, scale:.5   });\r\n          gsap.to(item, 0.75, {\r\n              opacity:1, scale:1, transformOrigin:\"50% 50%\",\r\n              ease: Expo.easeOut,\r\n              delay: 1.5 * index,\r\n              onStart: () => {\r\n                  textItems.forEach((otherItem, otherIndex) => {\r\n                      if (otherIndex !== index) {\r\n                          otherItem.style.opacity = 0;\r\n                      }\r\n                  });\r\n              },\r\n              onComplete: () => {\r\n                if (index === textItems.length - 1) {\r\n                  gsap.to( item, 0.75, {  opacity:0, ease:Power0.easeInOut, delay:0.25, onComplete: () =>{\r\n                    if( textTarget.value != null ){\r\n                      textTarget.value.remove();\r\n                      textTitle.value.classList.add( \"on\" );\r\n                    }\r\n                  }})\r\n                }\r\n              }\r\n          });\r\n      }); \r\n    }\r\n\r\n    onMounted(() => {\r\n      visualShow();\r\n    })\r\n\r\n    onUnmounted( () =>{\r\n      visualShow();\r\n    });\r\n\r\n    return {\r\n      textTarget,\r\n      textTitle,\r\n      visualShow\r\n    };\r\n  }\r\n\r\n}\r\n</script>\r\n    \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n.hero {\r\n  width: 100%;\r\n  position: relative;\r\n  justify-content: center;\r\n\r\n  .inner {\r\n    display: block;\r\n    @include breakDevicePoint( padding-top, null, vw(250px), null ); \r\n  }\r\n\r\n  &--text{\r\n    position: relative;\r\n    padding-bottom: vw(750px);\r\n    width: 100%;\r\n    overflow: hidden;\r\n    em{\r\n      position: absolute;\r\n      top:50%;\r\n      left:50%;\r\n      transform: translate(-50%, -50%);\r\n      font-size:vw(600px);\r\n      color: $dpColor;\r\n      font-weight: bold;\r\n      opacity: 0;\r\n      &:nth-child(2){\r\n        font-size:vw(370px);\r\n      }\r\n      &:nth-child(3){\r\n        font-size:vw(540px);\r\n      }\r\n      &:nth-child(4){\r\n        font-size:vw(450px);\r\n      }\r\n     \r\n    }\r\n  }\r\n  &--name{\r\n      display: none;\r\n      font-size:vw(850px);\r\n      color: $dpColor;\r\n      font-weight: bold;\r\n      text-align: center;\r\n      &.on{\r\n        display: block;\r\n      }\r\n  }\r\n\r\n  &--layout {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  &--slogan {\r\n    font-size: vw(30px);\r\n    color: $dpColor;\r\n    font-weight: 600;\r\n    line-height: 1.3;\r\n    font-family: 'Noto Sans Korean';\r\n  }\r\n\r\n  &--description {\r\n    font-size: vw(30px);\r\n    color: $dpColor;\r\n    font-weight: 600;\r\n    line-height: 1.3;\r\n    font-family: 'Noto Sans Korean';\r\n    text-align: right;\r\n  }\r\n\r\n\r\n}\r\n</style>\r\n    "],"mappings":"AAqBA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAU,QAAU,KAAK;AAClD,SAASC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAG,QAAS,MAAM;AAEzD,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,CACP,CAAC;EAEDC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIX,GAAG,CAAE,EAAG,CAAC;IAC5B,MAAMY,SAAQ,GAAIZ,GAAG,CAAE,EAAG,CAAC;IAE3B,MAAMa,UAAS,GAAIA,CAAA,KAAM;MACvB,MAAMC,SAAQ,GAAKX,IAAI,CAACY,KAAK,CAACC,OAAO,CAAC,gBAAgB,CAAC;MACvDF,SAAS,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;QAC9BhB,IAAI,CAACiB,GAAG,CAAEN,SAAS,EAAE;UAAGO,OAAO,EAAC,CAAC;UAAEC,KAAK,EAAC;QAAK,CAAC,CAAC;QAChDnB,IAAI,CAACoB,EAAE,CAACL,IAAI,EAAE,IAAI,EAAE;UAChBG,OAAO,EAAC,CAAC;UAAEC,KAAK,EAAC,CAAC;UAAEE,eAAe,EAAC,SAAS;UAC7CC,IAAI,EAAElB,IAAI,CAACmB,OAAO;UAClBC,KAAK,EAAE,GAAE,GAAIR,KAAK;UAClBS,OAAO,EAAEA,CAAA,KAAM;YACXd,SAAS,CAACG,OAAO,CAAC,CAACY,SAAS,EAAEC,UAAU,KAAK;cACzC,IAAIA,UAAS,KAAMX,KAAK,EAAE;gBACtBU,SAAS,CAACE,KAAK,CAACV,OAAM,GAAI,CAAC;cAC/B;YACJ,CAAC,CAAC;UACN,CAAC;UACDW,UAAU,EAAEA,CAAA,KAAM;YAChB,IAAIb,KAAI,KAAML,SAAS,CAACmB,MAAK,GAAI,CAAC,EAAE;cAClC9B,IAAI,CAACoB,EAAE,CAAEL,IAAI,EAAE,IAAI,EAAE;gBAAGG,OAAO,EAAC,CAAC;gBAAEI,IAAI,EAACrB,MAAM,CAAC8B,SAAS;gBAAEP,KAAK,EAAC,IAAI;gBAAEK,UAAU,EAAEA,CAAA,KAAK;kBACrF,IAAIrB,UAAU,CAACwB,KAAI,IAAK,IAAG,EAAG;oBAC5BxB,UAAU,CAACwB,KAAK,CAACC,MAAM,CAAC,CAAC;oBACzBxB,SAAS,CAACuB,KAAK,CAACE,SAAS,CAACC,GAAG,CAAE,IAAK,CAAC;kBACvC;gBACF;cAAC,CAAC;YACJ;UACF;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACJ;IAEArC,SAAS,CAAC,MAAM;MACdY,UAAU,CAAC,CAAC;IACd,CAAC;IAEDX,WAAW,CAAE,MAAK;MAChBW,UAAU,CAAC,CAAC;IACd,CAAC,CAAC;IAEF,OAAO;MACLF,UAAU;MACVC,SAAS;MACTC;IACF,CAAC;EACH;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}