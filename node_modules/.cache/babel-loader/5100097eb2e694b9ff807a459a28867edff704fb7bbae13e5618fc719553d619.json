{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BlogList from '@/components/Layouts/List/BlogList.vue';\nimport { ref, reactive, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'Blog',\n  props: {\n    responseData: {\n      type: Array,\n      required: true\n    },\n    responseThumbnail: {\n      type: Array,\n      required: true\n    }\n  },\n  components: {\n    BlogList\n  },\n  setup() {\n    const responseItems = ref([]);\n    const responseBlogInfo = reactive([]);\n    const count = ref(null);\n    const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\n    const tstoryList = async () => {\n      try {\n        const response = await axios.get(\"https://www.tistory.com/apis/post/list\", {\n          params: {\n            access_token: ACCESS_TOKEN,\n            output: 'json',\n            blogName: 'rico86',\n            // profileThumbnailImageUrl:\n            page: '1'\n          }\n        });\n        responseItems.value = response.data.tistory.item.posts;\n        count.value = response.data.tistory.item.posts.length;\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    const tstoryInfo = async () => {\n      try {\n        const response = await axios.get(\"https://www.tistory.com/apis/blog/info?\", {\n          params: {\n            access_token: ACCESS_TOKEN,\n            output: 'json'\n          }\n        });\n        console.log(responseBlogInfo);\n        return;\n        const blogImg = response.data.tistory.item.blogs[0].profileThumbnailImageUrl;\n        const blogName = response.data.tistory.item.blogs[0].nickname;\n        responseBlogInfo.value.push(blogImg, blogName);\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    onMounted(() => {\n      tstoryList();\n      tstoryInfo();\n    });\n    return {\n      responseItems,\n      count,\n      tstoryList,\n      responseBlogInfo\n    };\n  }\n};","map":{"version":3,"names":["BlogList","ref","reactive","onMounted","axios","name","props","responseData","type","Array","required","responseThumbnail","components","setup","responseItems","responseBlogInfo","count","ACCESS_TOKEN","tstoryList","response","get","params","access_token","output","blogName","page","value","data","tistory","item","posts","length","error","console","tstoryInfo","log","blogImg","blogs","profileThumbnailImageUrl","nickname","push"],"sources":["C:\\Rico\\portfilo2023\\src\\views\\Blog.vue"],"sourcesContent":["<template>\r\n    <section id=\"blog\">\r\n        <div class=\"inner\">\r\n            <h2>BLOG</h2>\r\n            <p class=\"blog--word\">현재 등록된 글 <em>{{count}}</em>개입니다.</p>\r\n            <BlogList :responseData=\"responseItems\" :responseThumbnail=\"responseBlogInfo\" />\r\n        </div>\r\n    </section>\r\n</template>\r\n  \r\n<script>\r\nimport BlogList from '@/components/Layouts/List/BlogList.vue'\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    name: 'Blog',\r\n    props: {\r\n        responseData: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        responseThumbnail: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        BlogList\r\n    },\r\n    setup() {\r\n\r\n        const responseItems = ref([]);\r\n        const responseBlogInfo = reactive([]);\r\n        const count = ref(null);\r\n        const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\r\n\r\n        const tstoryList = async () => {\r\n            try {\r\n                const response = await axios.get(\"https://www.tistory.com/apis/post/list\", {\r\n                    params: {\r\n                    access_token: ACCESS_TOKEN,\r\n                    output: 'json',\r\n                    blogName: 'rico86',\r\n                    // profileThumbnailImageUrl:\r\n                    page: '1',\r\n                    },\r\n                })\r\n                responseItems.value = response.data.tistory.item.posts;\r\n                count.value =  response.data.tistory.item.posts.length;\r\n            } catch (error) {\r\n                console.error('An error occurred:', error);\r\n            }\r\n        };\r\n\r\n        const tstoryInfo = async () => {\r\n            try {\r\n                const response = await axios.get(\"https://www.tistory.com/apis/blog/info?\", {\r\n                    params: {\r\n                        access_token: ACCESS_TOKEN,\r\n                        output: 'json',\r\n                    },\r\n                });\r\n\r\n                console.log( responseBlogInfo );\r\n\r\n                return;\r\n                const blogImg =  response.data.tistory.item.blogs[0].profileThumbnailImageUrl;\r\n                const blogName =  response.data.tistory.item.blogs[0].nickname;\r\n                responseBlogInfo.value.push( blogImg, blogName );\r\n            } catch (error) {\r\n                console.error('An error occurred:', error);\r\n            }\r\n        };\r\n        \r\n\r\n\r\n        \r\n        onMounted(() => {\r\n            tstoryList();\r\n            tstoryInfo();\r\n        });\r\n        \r\n        return {\r\n            responseItems,\r\n            count,\r\n            tstoryList,\r\n            responseBlogInfo\r\n        };\r\n    }\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n#blog {\r\n    .inner {\r\n        display: block;\r\n\r\n        h2 {\r\n            padding-top: 150px;\r\n            text-align: center;\r\n            font-weight: bold;\r\n            font-size: 120px;\r\n            color: $dpColor;\r\n        }\r\n\r\n        .blog--word {\r\n            padding: 20px 0;\r\n            text-align: center;\r\n            font-size: 24px;\r\n            font-family: 'Noto Sans Korean';\r\n            font-weight: 600;\r\n            color: #181818;\r\n\r\n            >em {\r\n                font-size: 24px;\r\n                color: $dpColor;\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n  "],"mappings":";AAWA,OAAOA,QAAO,MAAO,wCAAuC;AAC5D,SAASC,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAC9C,OAAOC,KAAI,MAAO,OAAM;AAGxB,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE;IACHC,YAAY,EAAE;MACVC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACd,CAAC;IACDC,iBAAiB,EAAE;MACfH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACd;EACJ,CAAC;EAEDE,UAAU,EAAE;IACRZ;EACJ,CAAC;EACDa,KAAKA,CAAA,EAAG;IAEJ,MAAMC,aAAY,GAAIb,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMc,gBAAe,GAAIb,QAAQ,CAAC,EAAE,CAAC;IACrC,MAAMc,KAAI,GAAIf,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMgB,YAAW,GAAI,mEAAmE;IAExF,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,wCAAwC,EAAE;UACvEC,MAAM,EAAE;YACRC,YAAY,EAAEL,YAAY;YAC1BM,MAAM,EAAE,MAAM;YACdC,QAAQ,EAAE,QAAQ;YAClB;YACAC,IAAI,EAAE;UACN;QACJ,CAAC;QACDX,aAAa,CAACY,KAAI,GAAIP,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK;QACtDd,KAAK,CAACU,KAAI,GAAKP,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK,CAACC,MAAM;MAC1D,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC9C;IACJ,CAAC;IAED,MAAME,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMf,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,yCAAyC,EAAE;UACxEC,MAAM,EAAE;YACJC,YAAY,EAAEL,YAAY;YAC1BM,MAAM,EAAE;UACZ;QACJ,CAAC,CAAC;QAEFU,OAAO,CAACE,GAAG,CAAEpB,gBAAiB,CAAC;QAE/B;QACA,MAAMqB,OAAM,GAAKjB,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAACC,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACC,wBAAwB;QAC7E,MAAMd,QAAO,GAAKL,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAACC,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,CAACE,QAAQ;QAC9DxB,gBAAgB,CAACW,KAAK,CAACc,IAAI,CAAEJ,OAAO,EAAEZ,QAAS,CAAC;MACpD,EAAE,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC9C;IACJ,CAAC;IAKD7B,SAAS,CAAC,MAAM;MACZe,UAAU,CAAC,CAAC;MACZgB,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC;IAEF,OAAO;MACHpB,aAAa;MACbE,KAAK;MACLE,UAAU;MACVH;IACJ,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}