{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineProps } from 'vue';\nimport { ref, reactive, onMounted, onBeforeUnmount } from 'vue';\nimport { gsap, Expo, Power2, Linear } from 'gsap';\nimport BlogList from '@/components/Layouts/List/BlogList.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Blog',\n  defineProps: {\n    responseData: {\n      type: Array,\n      required: true\n    },\n    blogInfoData: {\n      type: Array,\n      required: true\n    }\n  },\n  components: {\n    BlogList\n  },\n  setup(props) {\n    const responseItems = ref([]);\n    const blogInfoItem = ref([]);\n    const count = ref(0);\n    const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\n    const game = {\n      score: 0\n    };\n    const tstoryList = async () => {\n      try {\n        const response = await axios.get(\"https://www.tistory.com/apis/post/list\", {\n          params: {\n            access_token: ACCESS_TOKEN,\n            output: 'json',\n            blogName: 'rico86',\n            page: '1'\n          }\n        });\n        responseItems.value = response.data.tistory.item.posts;\n        count.value = response.data.tistory.item.totalCount - 1;\n        countValue(count.value);\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    const countValue = count => {\n      gsap.to(game, 1, {\n        score: `+=${count}`,\n        roundProps: \"score\",\n        ease: Expo.easeInOut,\n        onUpdate: upDateHandler\n      });\n    };\n    const upDateHandler = () => {\n      if (count.value == null) return;\n      count.value = game.score;\n    };\n    const tstoryInfo = async () => {\n      try {\n        const response = await axios.get(\"https://www.tistory.com/apis/blog/info?\", {\n          params: {\n            access_token: ACCESS_TOKEN,\n            output: 'json'\n          }\n        });\n        const blogImg = response.data.tistory.item.blogs[0].profileImageUrl;\n        // const blogImg =  response.data.tistory.item.blogs[0].profileThumbnailImageUrl;\n        const blogName = response.data.tistory.item.blogs[0].nickname;\n        const blogDescription = response.data.tistory.item.blogs[0].description;\n        blogInfoItem.value.push(blogImg, blogName, blogDescription);\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    onMounted(() => {\n      tstoryList();\n      tstoryInfo();\n    });\n    onBeforeUnmount(() => {\n      tstoryList();\n      tstoryInfo();\n      countValue();\n      upDateHandler();\n    });\n    return {\n      responseItems,\n      count,\n      blogInfoItem,\n      tstoryList\n    };\n  }\n};","map":{"version":3,"names":["defineProps","ref","reactive","onMounted","onBeforeUnmount","gsap","Expo","Power2","Linear","BlogList","axios","name","responseData","type","Array","required","blogInfoData","components","setup","props","responseItems","blogInfoItem","count","ACCESS_TOKEN","game","score","tstoryList","response","get","params","access_token","output","blogName","page","value","data","tistory","item","posts","totalCount","countValue","error","console","to","roundProps","ease","easeInOut","onUpdate","upDateHandler","tstoryInfo","blogImg","blogs","profileImageUrl","nickname","blogDescription","description","push"],"sources":["C:\\Rico\\portfilo2023\\src\\views\\Blog\\Index.vue"],"sourcesContent":["<template>\r\n    <section id=\"blog\">\r\n        <div class=\"inner\">\r\n            <h2>BLOG</h2>\r\n            <p class=\"blog--word\">현재 등록된 글 <em>{{count}}</em>개입니다.</p>\r\n            <BlogList :responseData=\"responseItems\" :blogInfoData=\"blogInfoItem\" />\r\n        </div>\r\n    </section>\r\n</template>\r\n  \r\n<script>\r\nimport { defineProps } from 'vue';\r\nimport { ref, reactive, onMounted, onBeforeUnmount } from 'vue';\r\nimport { gsap, Expo, Power2, Linear } from 'gsap';\r\nimport BlogList from '@/components/Layouts/List/BlogList.vue'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n    name: 'Blog',\r\n    defineProps: {\r\n        responseData: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        blogInfoData: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        BlogList\r\n    },\r\n\r\n    setup(props) {\r\n        const responseItems = ref([]);\r\n        const blogInfoItem = ref([]);\r\n        const count = ref( 0 );\r\n        const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\r\n        const game = {score:0};\r\n\r\n        const tstoryList = async () => {\r\n            try {\r\n                const response = await axios.get(\"https://www.tistory.com/apis/post/list\", {\r\n                    params: {\r\n                    access_token: ACCESS_TOKEN,\r\n                    output: 'json',\r\n                    blogName: 'rico86',\r\n                    page: '1',\r\n                    },\r\n                })\r\n                \r\n                responseItems.value = response.data.tistory.item.posts;\r\n                count.value =  response.data.tistory.item.totalCount-1;\r\n                countValue( count.value );\r\n            } catch (error) {\r\n                console.error('An error occurred:', error);\r\n            }\r\n        };\r\n\r\n        const countValue = ( count ) => {\r\n              gsap.to( game, 1, {score: `+=${count}`, roundProps:\"score\", ease:Expo.easeInOut, onUpdate:upDateHandler});\r\n        }\r\n\r\n        const upDateHandler = () => {\r\n            if( count.value == null) return;\r\n            count.value = game.score;\r\n        }\r\n\r\n        const tstoryInfo = async () => {\r\n            try {\r\n                const response = await axios.get(\"https://www.tistory.com/apis/blog/info?\", {\r\n                    params: {\r\n                        access_token: ACCESS_TOKEN,\r\n                        output: 'json',\r\n                    },\r\n                });\r\n\r\n                const blogImg =  response.data.tistory.item.blogs[0].profileImageUrl;\r\n                // const blogImg =  response.data.tistory.item.blogs[0].profileThumbnailImageUrl;\r\n                const blogName =  response.data.tistory.item.blogs[0].nickname;\r\n                const blogDescription =  response.data.tistory.item.blogs[0].description;\r\n\r\n                blogInfoItem.value.push( blogImg, blogName, blogDescription );\r\n                \r\n            } catch (error) {\r\n                console.error('An error occurred:', error);\r\n            }\r\n        };\r\n        onMounted(() => {\r\n            tstoryList();\r\n            tstoryInfo();\r\n        });\r\n\r\n        onBeforeUnmount(() => {\r\n            tstoryList();\r\n            tstoryInfo();\r\n            countValue();\r\n            upDateHandler();\r\n        })\r\n\r\n\r\n\r\n        \r\n        return {\r\n            responseItems,\r\n            count,\r\n            blogInfoItem,\r\n            tstoryList,\r\n        };\r\n    }\r\n}\r\n</script>\r\n  \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n#blog {\r\n    .inner {\r\n        display: block;\r\n        @include breakDevicePoint( padding,  vw(200px 0), vw(400px 0), null ); \r\n        h2 {\r\n            text-align: center;\r\n            font-weight: bold;\r\n            color: $dpColor;\r\n            padding-bottom: vw(20px);\r\n            // @include breakDevicePoint( padding-top, vw(200px), vw(400px), null ); \r\n            @include breakDevicePoint( font-size, vw(120px), vw(180px), null ); \r\n        }\r\n\r\n        .blog--word {\r\n            text-align: center;\r\n            font-family: 'Noto Sans Korean';\r\n            font-weight: 600;\r\n            color: #181818;\r\n            @include breakDevicePoint(padding, vw(20px 0), null, null ); \r\n            @include breakDevicePoint(  font-size,  vw(80px),vw(120px), null ); \r\n            \r\n            >em {\r\n                @include breakDevicePoint(  font-size,  vw(80px),vw(120px), null ); \r\n                color: $dpColor;\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}