{"ast":null,"code":"import\"core-js/modules/es.error.cause.js\";import\"core-js/modules/es.array.push.js\";import firebase from'@firebase/app';import{Provider,ComponentContainer,Component}from'@firebase/component';import{stringify,jsonEval,contains,assert,base64,stringToByteArray,Sha1,isNodeSdk,deepCopy,base64Encode,isMobileCordova,stringLength,Deferred,safeGet,isAdmin,isValidFormat,isEmpty,isReactNative,assertionError,map,querystring,errorPrefix,validateArgCount,validateCallback,validateContextObject}from'@firebase/util';import{__spreadArray,__read,__values,__extends,__assign,__awaiter,__generator}from'tslib';import{Logger,LogLevel}from'@firebase/logger';var name=\"@firebase/database\";var version=\"0.9.7\";/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */var DOMStorageWrapper=/** @class */function(){/**\r\n     * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */function DOMStorageWrapper(domStorage_){this.domStorage_=domStorage_;// Use a prefix to avoid collisions with other stuff saved by the app.\nthis.prefix_='firebase:';}/**\r\n     * @param key The key to save the value under\r\n     * @param value The value being stored, or null to remove the key.\r\n     */DOMStorageWrapper.prototype.set=function(key,value){if(value==null){this.domStorage_.removeItem(this.prefixedName_(key));}else{this.domStorage_.setItem(this.prefixedName_(key),stringify(value));}};/**\r\n     * @return The value that was stored under this key, or null\r\n     */DOMStorageWrapper.prototype.get=function(key){var storedVal=this.domStorage_.getItem(this.prefixedName_(key));if(storedVal==null){return null;}else{return jsonEval(storedVal);}};DOMStorageWrapper.prototype.remove=function(key){this.domStorage_.removeItem(this.prefixedName_(key));};DOMStorageWrapper.prototype.prefixedName_=function(name){return this.prefix_+name;};DOMStorageWrapper.prototype.toString=function(){return this.domStorage_.toString();};return DOMStorageWrapper;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */var MemoryStorage=/** @class */function(){function MemoryStorage(){this.cache_={};this.isInMemoryStorage=true;}MemoryStorage.prototype.set=function(key,value){if(value==null){delete this.cache_[key];}else{this.cache_[key]=value;}};MemoryStorage.prototype.get=function(key){if(contains(this.cache_,key)){return this.cache_[key];}return null;};MemoryStorage.prototype.remove=function(key){delete this.cache_[key];};return MemoryStorage;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return Turning off type information until a common interface is defined.\r\n */var createStoragefor=function(domStorageName){try{// NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n// so it must be inside the try/catch.\nif(typeof window!=='undefined'&&typeof window[domStorageName]!=='undefined'){// Need to test cache. Just because it's here doesn't mean it works\nvar domStorage=window[domStorageName];domStorage.setItem('firebase:sentinel','cache');domStorage.removeItem('firebase:sentinel');return new DOMStorageWrapper(domStorage);}}catch(e){}// Failed to create wrapper.  Just return in-memory storage.\n// TODO: log?\nreturn new MemoryStorage();};/** A storage object that lasts across sessions */var PersistentStorage=createStoragefor('localStorage');/** A storage object that only lasts one session */var SessionStorage=createStoragefor('sessionStorage');/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var logClient=new Logger('@firebase/database');/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */var LUIDGenerator=function(){var id=1;return function(){return id++;};}();/**\r\n * Sha1 hash of the input string\r\n * @param str The string to hash\r\n * @return {!string} The resulting hash\r\n */var sha1=function(str){var utf8Bytes=stringToByteArray(str);var sha1=new Sha1();sha1.update(utf8Bytes);var sha1Bytes=sha1.digest();return base64.encodeByteArray(sha1Bytes);};var buildLogMessage_=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='';for(var i=0;i<varArgs.length;i++){var arg=varArgs[i];if(Array.isArray(arg)||arg&&typeof arg==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntypeof arg.length==='number'){message+=buildLogMessage_.apply(null,arg);}else if(typeof arg==='object'){message+=stringify(arg);}else{message+=arg;}message+=' ';}return message;};/**\r\n * Use this for all debug messages in Firebase.\r\n */var logger=null;/**\r\n * Flag to check for log availability on first log message\r\n */var firstLog_=true;/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ A flag to turn on logging, or a custom logger\r\n * @param persistent Whether or not to persist logging settings across refreshes\r\n */var enableLogging=function(logger_,persistent){assert(!persistent||logger_===true||logger_===false,\"Can't turn on custom loggers persistently.\");if(logger_===true){logClient.logLevel=LogLevel.VERBOSE;logger=logClient.log.bind(logClient);if(persistent){SessionStorage.set('logging_enabled',true);}}else if(typeof logger_==='function'){logger=logger_;}else{logger=null;SessionStorage.remove('logging_enabled');}};var log=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}if(firstLog_===true){firstLog_=false;if(logger===null&&SessionStorage.get('logging_enabled')===true){enableLogging(true);}}if(logger){var message=buildLogMessage_.apply(null,varArgs);logger(message);}};var logWrapper=function(prefix){return function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}log.apply(void 0,__spreadArray([prefix],__read(varArgs)));};};var error=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='FIREBASE INTERNAL ERROR: '+buildLogMessage_.apply(void 0,__spreadArray([],__read(varArgs)));logClient.error(message);};var fatal=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message=\"FIREBASE FATAL ERROR: \"+buildLogMessage_.apply(void 0,__spreadArray([],__read(varArgs)));logClient.error(message);throw new Error(message);};var warn=function(){var varArgs=[];for(var _i=0;_i<arguments.length;_i++){varArgs[_i]=arguments[_i];}var message='FIREBASE WARNING: '+buildLogMessage_.apply(void 0,__spreadArray([],__read(varArgs)));logClient.warn(message);};/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */var warnIfPageIsSecure=function(){// Be very careful accessing browser globals. Who knows what may or may not exist.\nif(typeof window!=='undefined'&&window.location&&window.location.protocol&&window.location.protocol.indexOf('https:')!==-1){warn('Insecure Firebase access from a secure page. '+'Please use https in calls to new Firebase().');}};/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */var isInvalidJSONNumber=function(data){return typeof data==='number'&&(data!==data||// NaN\ndata===Number.POSITIVE_INFINITY||data===Number.NEGATIVE_INFINITY);};var executeWhenDOMReady=function(fn){if(isNodeSdk()||document.readyState==='complete'){fn();}else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n// fire before onload), but fall back to onload.\nvar called_1=false;var wrappedFn_1=function(){if(!document.body){setTimeout(wrappedFn_1,Math.floor(10));return;}if(!called_1){called_1=true;fn();}};if(document.addEventListener){document.addEventListener('DOMContentLoaded',wrappedFn_1,false);// fallback to onload.\nwindow.addEventListener('load',wrappedFn_1,false);// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(document.attachEvent){// IE.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndocument.attachEvent('onreadystatechange',function(){if(document.readyState==='complete'){wrappedFn_1();}});// fallback to onload.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwindow.attachEvent('onload',wrappedFn_1);// jQuery has an extra hack for IE that we could employ (based on\n// http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n// I'm hoping we don't need it.\n}}};/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */var MIN_NAME='[MIN_NAME]';/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */var MAX_NAME='[MAX_NAME]';/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */var nameCompare=function(a,b){if(a===b){return 0;}else if(a===MIN_NAME||b===MAX_NAME){return-1;}else if(b===MIN_NAME||a===MAX_NAME){return 1;}else{var aAsInt=tryParseInt(a),bAsInt=tryParseInt(b);if(aAsInt!==null){if(bAsInt!==null){return aAsInt-bAsInt===0?a.length-b.length:aAsInt-bAsInt;}else{return-1;}}else if(bAsInt!==null){return 1;}else{return a<b?-1:1;}}};/**\r\n * @return {!number} comparison result.\r\n */var stringCompare=function(a,b){if(a===b){return 0;}else if(a<b){return-1;}else{return 1;}};var requireKey=function(key,obj){if(obj&&key in obj){return obj[key];}else{throw new Error('Missing required key ('+key+') in object: '+stringify(obj));}};var ObjectToUniqueKey=function(obj){if(typeof obj!=='object'||obj===null){return stringify(obj);}var keys=[];// eslint-disable-next-line guard-for-in\nfor(var k in obj){keys.push(k);}// Export as json, but with the keys sorted.\nkeys.sort();var key='{';for(var i=0;i<keys.length;i++){if(i!==0){key+=',';}key+=stringify(keys[i]);key+=':';key+=ObjectToUniqueKey(obj[keys[i]]);}key+='}';return key;};/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str The string\r\n * @param segsize The maximum number of chars in the string.\r\n * @return The string, split into appropriately-sized chunks\r\n */var splitStringBySize=function(str,segsize){var len=str.length;if(len<=segsize){return[str];}var dataSegs=[];for(var c=0;c<len;c+=segsize){if(c+segsize>len){dataSegs.push(str.substring(c,len));}else{dataSegs.push(str.substring(c,c+segsize));}}return dataSegs;};/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */function each(obj,fn){for(var key in obj){if(obj.hasOwnProperty(key)){fn(key,obj[key]);}}}/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v A double\r\n *\r\n */var doubleToIEEE754String=function(v){assert(!isInvalidJSONNumber(v),'Invalid JSON number');// MJL\nvar ebits=11,fbits=52;var bias=(1<<ebits-1)-1;var s,e,f,ln,i;// Compute sign, exponent, fraction\n// Skip NaN / Infinity handling --MJL.\nif(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=Math.abs(v);if(v>=Math.pow(2,1-bias)){// Normalized\nln=Math.min(Math.floor(Math.log(v)/Math.LN2),bias);e=ln+bias;f=Math.round(v*Math.pow(2,fbits-ln)-Math.pow(2,fbits));}else{// Denormalized\ne=0;f=Math.round(v/Math.pow(2,1-bias-fbits));}}// Pack sign, exponent, fraction\nvar bits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=Math.floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=Math.floor(e/2);}bits.push(s?1:0);bits.reverse();var str=bits.join('');// Return the data as a hex string. --MJL\nvar hexByteString='';for(i=0;i<64;i+=8){var hexByte=parseInt(str.substr(i,8),2).toString(16);if(hexByte.length===1){hexByte='0'+hexByte;}hexByteString=hexByteString+hexByte;}return hexByteString.toLowerCase();};/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */var isChromeExtensionContentScript=function(){return!!(typeof window==='object'&&window['chrome']&&window['chrome']['extension']&&!/^chrome/.test(window.location.href));};/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */var isWindowsStoreApp=function(){// Check for the presence of a couple WinRT globals\nreturn typeof Windows==='object'&&typeof Windows.UI==='object';};/**\r\n * Converts a server error code to a Javascript Error\r\n */var errorForServerCode=function(code,query){var reason='Unknown Error';if(code==='too_big'){reason='The data requested exceeds the maximum size '+'that can be accessed with a single request.';}else if(code==='permission_denied'){reason=\"Client doesn't have permission to access the desired data.\";}else if(code==='unavailable'){reason='The service is unavailable';}var error=new Error(code+' at '+query.path.toString()+': '+reason);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code.toUpperCase();return error;};/**\r\n * Used to test for integer-looking strings\r\n */var INTEGER_REGEXP_=new RegExp('^-?(0*)\\\\d{1,10}$');/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */var INTEGER_32_MIN=-2147483648;/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */var INTEGER_32_MAX=2147483647;/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */var tryParseInt=function(str){if(INTEGER_REGEXP_.test(str)){var intVal=Number(str);if(intVal>=INTEGER_32_MIN&&intVal<=INTEGER_32_MAX){return intVal;}}return null;};/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn The code to guard.\r\n */var exceptionGuard=function(fn){try{fn();}catch(e){// Re-throw exception when it's safe.\nsetTimeout(function(){// It used to be that \"throw e\" would result in a good console error with\n// relevant context, but as of Chrome 39, you just get the firebase.js\n// file/line number where we re-throw it, which is useless. So we log\n// e.stack explicitly.\nvar stack=e.stack||'';warn('Exception was thrown by user callback.',stack);throw e;},Math.floor(0));}};/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */var beingCrawled=function(){var userAgent=typeof window==='object'&&window['navigator']&&window['navigator']['userAgent']||'';// For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n// believe to support JavaScript/AJAX rendering.\n// NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n// would have seen the page\" is flaky if we don't treat it as a crawler.\nreturn userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0;};/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn Function to run.\r\n * @param time Milliseconds to wait before running.\r\n * @return The setTimeout() return value.\r\n */var setTimeoutNonBlocking=function(fn,time){var timeout=setTimeout(fn,time);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(typeof timeout==='object'&&timeout['unref']){// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntimeout['unref']();}return timeout;};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */var FirebaseAuthTokenProvider=/** @class */function(){function FirebaseAuthTokenProvider(app_,authProvider_){var _this=this;this.app_=app_;this.authProvider_=authProvider_;this.auth_=null;this.auth_=authProvider_.getImmediate({optional:true});if(!this.auth_){authProvider_.get().then(function(auth){return _this.auth_=auth;});}}FirebaseAuthTokenProvider.prototype.getToken=function(forceRefresh){if(!this.auth_){return Promise.resolve(null);}return this.auth_.getToken(forceRefresh).catch(function(error){// TODO: Need to figure out all the cases this is raised and whether\n// this makes sense.\nif(error&&error.code==='auth/token-not-initialized'){log('Got auth/token-not-initialized error.  Treating as null token.');return null;}else{return Promise.reject(error);}});};FirebaseAuthTokenProvider.prototype.addTokenChangeListener=function(listener){// TODO: We might want to wrap the listener and call it with no args to\n// avoid a leaky abstraction, but that makes removing the listener harder.\nif(this.auth_){this.auth_.addAuthTokenListener(listener);}else{setTimeout(function(){return listener(null);},0);this.authProvider_.get().then(function(auth){return auth.addAuthTokenListener(listener);});}};FirebaseAuthTokenProvider.prototype.removeTokenChangeListener=function(listener){this.authProvider_.get().then(function(auth){return auth.removeAuthTokenListener(listener);});};FirebaseAuthTokenProvider.prototype.notifyForInvalidToken=function(){var errorMessage='Provided authentication credentials for the app named \"'+this.app_.name+'\" are invalid. This usually indicates your app was not '+'initialized correctly. ';if('credential'in this.app_.options){errorMessage+='Make sure the \"credential\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else if('serviceAccount'in this.app_.options){errorMessage+='Make sure the \"serviceAccount\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else{errorMessage+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to '+'initializeApp() match the values provided for your app at '+'https://console.firebase.google.com/.';}warn(errorMessage);};return FirebaseAuthTokenProvider;}();/* Auth token provider that the Admin SDK uses to connect to the Emulator. */var EmulatorAdminTokenProvider=/** @class */function(){function EmulatorAdminTokenProvider(){}EmulatorAdminTokenProvider.prototype.getToken=function(forceRefresh){return Promise.resolve({accessToken:EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN});};EmulatorAdminTokenProvider.prototype.addTokenChangeListener=function(listener){// Invoke the listener immediately to match the behavior in Firebase Auth\n// (see packages/auth/src/auth.js#L1807)\nlistener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);};EmulatorAdminTokenProvider.prototype.removeTokenChangeListener=function(listener){};EmulatorAdminTokenProvider.prototype.notifyForInvalidToken=function(){};EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN='owner';return EmulatorAdminTokenProvider;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PROTOCOL_VERSION='5';var VERSION_PARAM='v';var TRANSPORT_SESSION_PARAM='s';var REFERER_PARAM='r';var FORGE_REF='f';// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nvar FORGE_DOMAIN_RE=/(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;var LAST_SESSION_PARAM='ls';var APPLICATION_ID_PARAM='p';var WEBSOCKET='websocket';var LONG_POLLING='long_polling';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A class that holds metadata about a Repo object\r\n */var RepoInfo=/** @class */function(){/**\r\n     * @param host Hostname portion of the url for the repo\r\n     * @param secure Whether or not this repo is accessed over ssl\r\n     * @param namespace The namespace represented by the repo\r\n     * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey Override the default session persistence storage key\r\n     */function RepoInfo(host,secure,namespace,webSocketOnly,nodeAdmin,persistenceKey,includeNamespaceInQueryParams){if(nodeAdmin===void 0){nodeAdmin=false;}if(persistenceKey===void 0){persistenceKey='';}if(includeNamespaceInQueryParams===void 0){includeNamespaceInQueryParams=false;}this.secure=secure;this.namespace=namespace;this.webSocketOnly=webSocketOnly;this.nodeAdmin=nodeAdmin;this.persistenceKey=persistenceKey;this.includeNamespaceInQueryParams=includeNamespaceInQueryParams;this._host=host.toLowerCase();this._domain=this._host.substr(this._host.indexOf('.')+1);this.internalHost=PersistentStorage.get('host:'+host)||this._host;}RepoInfo.prototype.isCacheableHost=function(){return this.internalHost.substr(0,2)==='s-';};RepoInfo.prototype.isCustomHost=function(){return this._domain!=='firebaseio.com'&&this._domain!=='firebaseio-demo.com';};Object.defineProperty(RepoInfo.prototype,\"host\",{get:function(){return this._host;},set:function(newHost){if(newHost!==this.internalHost){this.internalHost=newHost;if(this.isCacheableHost()){PersistentStorage.set('host:'+this._host,this.internalHost);}}},enumerable:false,configurable:true});RepoInfo.prototype.toString=function(){var str=this.toURLString();if(this.persistenceKey){str+='<'+this.persistenceKey+'>';}return str;};RepoInfo.prototype.toURLString=function(){var protocol=this.secure?'https://':'http://';var query=this.includeNamespaceInQueryParams?\"?ns=\"+this.namespace:'';return\"\"+protocol+this.host+\"/\"+query;};return RepoInfo;}();function repoInfoNeedsQueryParam(repoInfo){return repoInfo.host!==repoInfo.internalHost||repoInfo.isCustomHost()||repoInfo.includeNamespaceInQueryParams;}/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */function repoInfoConnectionURL(repoInfo,type,params){assert(typeof type==='string','typeof type must == string');assert(typeof params==='object','typeof params must == object');var connURL;if(type===WEBSOCKET){connURL=(repoInfo.secure?'wss://':'ws://')+repoInfo.internalHost+'/.ws?';}else if(type===LONG_POLLING){connURL=(repoInfo.secure?'https://':'http://')+repoInfo.internalHost+'/.lp?';}else{throw new Error('Unknown connection type: '+type);}if(repoInfoNeedsQueryParam(repoInfo)){params['ns']=repoInfo.namespace;}var pairs=[];each(params,function(key,value){pairs.push(key+'='+value);});return connURL+pairs.join('&');}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Tracks a collection of stats.\r\n */var StatsCollection=/** @class */function(){function StatsCollection(){this.counters_={};}StatsCollection.prototype.incrementCounter=function(name,amount){if(amount===void 0){amount=1;}if(!contains(this.counters_,name)){this.counters_[name]=0;}this.counters_[name]+=amount;};StatsCollection.prototype.get=function(){return deepCopy(this.counters_);};return StatsCollection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var collections={};var reporters={};function statsManagerGetCollection(repoInfo){var hashString=repoInfo.toString();if(!collections[hashString]){collections[hashString]=new StatsCollection();}return collections[hashString];}function statsManagerGetOrCreateReporter(repoInfo,creatorFunction){var hashString=repoInfo.toString();if(!reporters[hashString]){reporters[hashString]=creatorFunction();}return reporters[hashString];}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */var PacketReceiver=/** @class */function(){/**\r\n     * @param onMessage_\r\n     */function PacketReceiver(onMessage_){this.onMessage_=onMessage_;this.pendingResponses=[];this.currentResponseNum=0;this.closeAfterResponse=-1;this.onClose=null;}PacketReceiver.prototype.closeAfter=function(responseNum,callback){this.closeAfterResponse=responseNum;this.onClose=callback;if(this.closeAfterResponse<this.currentResponseNum){this.onClose();this.onClose=null;}};/**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */PacketReceiver.prototype.handleResponse=function(requestNum,data){var _this=this;this.pendingResponses[requestNum]=data;var _loop_1=function(){var toProcess=this_1.pendingResponses[this_1.currentResponseNum];delete this_1.pendingResponses[this_1.currentResponseNum];var _loop_2=function(i){if(toProcess[i]){exceptionGuard(function(){_this.onMessage_(toProcess[i]);});}};for(var i=0;i<toProcess.length;++i){_loop_2(i);}if(this_1.currentResponseNum===this_1.closeAfterResponse){if(this_1.onClose){this_1.onClose();this_1.onClose=null;}return\"break\";}this_1.currentResponseNum++;};var this_1=this;while(this.pendingResponses[this.currentResponseNum]){var state_1=_loop_1();if(state_1===\"break\")break;}};return PacketReceiver;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM='start';var FIREBASE_LONGPOLL_CLOSE_COMMAND='close';var FIREBASE_LONGPOLL_COMMAND_CB_NAME='pLPCommand';var FIREBASE_LONGPOLL_DATA_CB_NAME='pRTLPCB';var FIREBASE_LONGPOLL_ID_PARAM='id';var FIREBASE_LONGPOLL_PW_PARAM='pw';var FIREBASE_LONGPOLL_SERIAL_PARAM='ser';var FIREBASE_LONGPOLL_CALLBACK_ID_PARAM='cb';var FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM='seg';var FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET='ts';var FIREBASE_LONGPOLL_DATA_PARAM='d';var FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM='dframe';//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE=1870;var SEG_HEADER_SIZE=30;//ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE=MAX_URL_DATA_SIZE-SEG_HEADER_SIZE;/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */var KEEPALIVE_REQUEST_INTERVAL=25000;/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */var LP_CONNECT_TIMEOUT=30000;/**\r\n * This class manages a single long-polling connection.\r\n */var BrowserPollConnection=/** @class */function(){/**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */function BrowserPollConnection(connId,repoInfo,applicationId,transportSessionId,lastSessionId){this.connId=connId;this.repoInfo=repoInfo;this.applicationId=applicationId;this.transportSessionId=transportSessionId;this.lastSessionId=lastSessionId;this.bytesSent=0;this.bytesReceived=0;this.everConnected_=false;this.log_=logWrapper(connId);this.stats_=statsManagerGetCollection(repoInfo);this.urlFn=function(params){return repoInfoConnectionURL(repoInfo,LONG_POLLING,params);};}/**\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */BrowserPollConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.curSegmentNum=0;this.onDisconnect_=onDisconnect;this.myPacketOrderer=new PacketReceiver(onMessage);this.isClosed_=false;this.connectTimeoutTimer_=setTimeout(function(){_this.log_('Timed out trying to connect.');// Make sure we clear the host cache\n_this.onClosed_();_this.connectTimeoutTimer_=null;// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(LP_CONNECT_TIMEOUT));// Ensure we delay the creation of the iframe until the DOM is loaded.\nexecuteWhenDOMReady(function(){if(_this.isClosed_){return;}//Set up a callback that gets triggered once a connection is set up.\n_this.scriptTagHolder=new FirebaseIFrameScriptHolder(function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=__read(args,5),command=_a[0],arg1=_a[1],arg2=_a[2],arg3=_a[3],arg4=_a[4];_this.incrementIncomingBytes_(args);if(!_this.scriptTagHolder){return;// we closed the connection.\n}if(_this.connectTimeoutTimer_){clearTimeout(_this.connectTimeoutTimer_);_this.connectTimeoutTimer_=null;}_this.everConnected_=true;if(command===FIREBASE_LONGPOLL_START_PARAM){_this.id=arg1;_this.password=arg2;}else if(command===FIREBASE_LONGPOLL_CLOSE_COMMAND){// Don't clear the host cache. We got a response from the server, so we know it's reachable\nif(arg1){// We aren't expecting any more data (other than what the server's already in the process of sending us\n// through our already open polls), so don't send any more.\n_this.scriptTagHolder.sendNewPolls=false;// arg1 in this case is the last response number sent by the server. We should try to receive\n// all of the responses up to this one before closing\n_this.myPacketOrderer.closeAfter(arg1,function(){_this.onClosed_();});}else{_this.onClosed_();}}else{throw new Error('Unrecognized command received: '+command);}},function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}var _a=__read(args,2),pN=_a[0],data=_a[1];_this.incrementIncomingBytes_(args);_this.myPacketOrderer.handleResponse(pN,data);},function(){_this.onClosed_();},_this.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n//from cache.\nvar urlParams={};urlParams[FIREBASE_LONGPOLL_START_PARAM]='t';urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=Math.floor(Math.random()*100000000);if(_this.scriptTagHolder.uniqueCallbackIdentifier){urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM]=_this.scriptTagHolder.uniqueCallbackIdentifier;}urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(_this.transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=_this.transportSessionId;}if(_this.lastSessionId){urlParams[LAST_SESSION_PARAM]=_this.lastSessionId;}if(_this.applicationId){urlParams[APPLICATION_ID_PARAM]=_this.applicationId;}if(typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}var connectURL=_this.urlFn(urlParams);_this.log_('Connecting via long-poll to '+connectURL);_this.scriptTagHolder.addTag(connectURL,function(){/* do nothing */});});};/**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */BrowserPollConnection.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password);this.addDisconnectPingFrame(this.id,this.password);};/**\r\n     * Forces long polling to be considered as a potential transport\r\n     */BrowserPollConnection.forceAllow=function(){BrowserPollConnection.forceAllow_=true;};/**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */BrowserPollConnection.forceDisallow=function(){BrowserPollConnection.forceDisallow_=true;};// Static method, use string literal so it can be accessed in a generic way\nBrowserPollConnection.isAvailable=function(){if(isNodeSdk()){return false;}else if(BrowserPollConnection.forceAllow_){return true;}else{// NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n// the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\nreturn!BrowserPollConnection.forceDisallow_&&typeof document!=='undefined'&&document.createElement!=null&&!isChromeExtensionContentScript()&&!isWindowsStoreApp();}};/**\r\n     * No-op for polling\r\n     */BrowserPollConnection.prototype.markConnectionHealthy=function(){};/**\r\n     * Stops polling and cleans up the iframe\r\n     */BrowserPollConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.scriptTagHolder){this.scriptTagHolder.close();this.scriptTagHolder=null;}//remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\nif(this.myDisconnFrame){document.body.removeChild(this.myDisconnFrame);this.myDisconnFrame=null;}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}};/**\r\n     * Triggered when this transport is closed\r\n     */BrowserPollConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('Longpoll is closing itself');this.shutdown_();if(this.onDisconnect_){this.onDisconnect_(this.everConnected_);this.onDisconnect_=null;}}};/**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */BrowserPollConnection.prototype.close=function(){if(!this.isClosed_){this.log_('Longpoll is being closed.');this.shutdown_();}};/**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data The JSON data to transmit.\r\n     */BrowserPollConnection.prototype.send=function(data){var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//first, lets get the base64-encoded data\nvar base64data=base64Encode(dataStr);//We can only fit a certain amount in each URL, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(base64data,MAX_PAYLOAD_SIZE);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n//of segments so that we can reassemble the packet on the server.\nfor(var i=0;i<dataSegs.length;i++){this.scriptTagHolder.enqueueSegment(this.curSegmentNum,dataSegs.length,dataSegs[i]);this.curSegmentNum++;}};/**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */BrowserPollConnection.prototype.addDisconnectPingFrame=function(id,pw){if(isNodeSdk()){return;}this.myDisconnFrame=document.createElement('iframe');var urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=id;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=pw;this.myDisconnFrame.src=this.urlFn(urlParams);this.myDisconnFrame.style.display='none';document.body.appendChild(this.myDisconnFrame);};/**\r\n     * Used to track the bytes received by this client\r\n     */BrowserPollConnection.prototype.incrementIncomingBytes_=function(args){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\nvar bytesReceived=stringify(args).length;this.bytesReceived+=bytesReceived;this.stats_.incrementCounter('bytes_received',bytesReceived);};return BrowserPollConnection;}();/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/var FirebaseIFrameScriptHolder=/** @class */function(){/**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */function FirebaseIFrameScriptHolder(commandCB,onMessageCB,onDisconnect,urlFn){this.onDisconnect=onDisconnect;this.urlFn=urlFn;//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n//problems in some browsers.\nthis.outstandingRequests=new Set();//A queue of the pending segments waiting for transmission to the server.\nthis.pendingSegs=[];//A serial number. We use this for two things:\n// 1) A way to ensure the browser doesn't cache responses to polls\n// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n//    JSONP code in the order it was added to the iframe.\nthis.currentSerial=Math.floor(Math.random()*100000000);// This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n// incoming data from the server that we're waiting for).\nthis.sendNewPolls=true;if(!isNodeSdk()){//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n//iframes where we put the long-polling script tags. We have two callbacks:\n//   1) Command Callback - Triggered for control issues, like starting a connection.\n//   2) Message Callback - Triggered when new data arrives.\nthis.uniqueCallbackIdentifier=LUIDGenerator();window[FIREBASE_LONGPOLL_COMMAND_CB_NAME+this.uniqueCallbackIdentifier]=commandCB;window[FIREBASE_LONGPOLL_DATA_CB_NAME+this.uniqueCallbackIdentifier]=onMessageCB;//Create an iframe for us to add script tags to.\nthis.myIFrame=FirebaseIFrameScriptHolder.createIFrame_();// Set the iframe's contents.\nvar script='';// if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n// for ie9, but ie8 needs to do it again in the document itself.\nif(this.myIFrame.src&&this.myIFrame.src.substr(0,'javascript:'.length)==='javascript:'){var currentDomain=document.domain;script='<script>document.domain=\"'+currentDomain+'\";</script>';}var iframeContents='<html><body>'+script+'</body></html>';try{this.myIFrame.doc.open();this.myIFrame.doc.write(iframeContents);this.myIFrame.doc.close();}catch(e){log('frame writing exception');if(e.stack){log(e.stack);}log(e);}}else{this.commandCB=commandCB;this.onMessageCB=onMessageCB;}}/**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */FirebaseIFrameScriptHolder.createIFrame_=function(){var iframe=document.createElement('iframe');iframe.style.display='none';// This is necessary in order to initialize the document inside the iframe\nif(document.body){document.body.appendChild(iframe);try{// If document.domain has been modified in IE, this will throw an error, and we need to set the\n// domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n// Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\nvar a=iframe.contentWindow.document;if(!a){// Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\nlog('No IE domain setting required');}}catch(e){var domain=document.domain;iframe.src=\"javascript:void((function(){document.open();document.domain='\"+domain+\"';document.close();})())\";}}else{// LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n// never gets hit.\nthrow'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';}// Get the document of the iframe in a browser-specific way.\nif(iframe.contentDocument){iframe.doc=iframe.contentDocument;// Firefox, Opera, Safari\n}else if(iframe.contentWindow){iframe.doc=iframe.contentWindow.document;// Internet Explorer\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(iframe.document){// eslint-disable-next-line @typescript-eslint/no-explicit-any\niframe.doc=iframe.document;//others?\n}return iframe;};/**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */FirebaseIFrameScriptHolder.prototype.close=function(){var _this=this;//Mark this iframe as dead, so no new requests are sent.\nthis.alive=false;if(this.myIFrame){//We have to actually remove all of the html inside this iframe before removing it from the\n//window, or IE will continue loading and executing the script tags we've already added, which\n//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\nthis.myIFrame.doc.body.innerHTML='';setTimeout(function(){if(_this.myIFrame!==null){document.body.removeChild(_this.myIFrame);_this.myIFrame=null;}},Math.floor(0));}// Protect from being called recursively.\nvar onDisconnect=this.onDisconnect;if(onDisconnect){this.onDisconnect=null;onDisconnect();}};/**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */FirebaseIFrameScriptHolder.prototype.startLongPoll=function(id,pw){this.myID=id;this.myPW=pw;this.alive=true;//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\nwhile(this.newRequest_()){}};/**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */FirebaseIFrameScriptHolder.prototype.newRequest_=function(){// We keep one outstanding request open all the time to receive data, but if we need to send data\n// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n// close the old request.\nif(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)){//construct our url\nthis.currentSerial++;var urlParams={};urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=this.currentSerial;var theURL=this.urlFn(urlParams);//Now add as much data as we can.\nvar curDataString='';var i=0;while(this.pendingSegs.length>0){//first, lets see if the next segment will fit.\nvar nextSeg=this.pendingSegs[0];if(nextSeg.d.length+SEG_HEADER_SIZE+curDataString.length<=MAX_URL_DATA_SIZE){//great, the segment will fit. Lets append it.\nvar theSeg=this.pendingSegs.shift();curDataString=curDataString+'&'+FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM+i+'='+theSeg.seg+'&'+FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET+i+'='+theSeg.ts+'&'+FIREBASE_LONGPOLL_DATA_PARAM+i+'='+theSeg.d;i++;}else{break;}}theURL=theURL+curDataString;this.addLongPollTag_(theURL,this.currentSerial);return true;}else{return false;}};/**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */FirebaseIFrameScriptHolder.prototype.enqueueSegment=function(segnum,totalsegs,data){//add this to the queue of segments to send.\nthis.pendingSegs.push({seg:segnum,ts:totalsegs,d:data});//send the data immediately if there isn't already data being transmitted, unless\n//startLongPoll hasn't been called yet.\nif(this.alive){this.newRequest_();}};/**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */FirebaseIFrameScriptHolder.prototype.addLongPollTag_=function(url,serial){var _this=this;//remember that we sent this request.\nthis.outstandingRequests.add(serial);var doNewRequest=function(){_this.outstandingRequests.delete(serial);_this.newRequest_();};// If this request doesn't return on its own accord (by the server sending us some data), we'll\n// create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\nvar keepaliveTimeout=setTimeout(doNewRequest,Math.floor(KEEPALIVE_REQUEST_INTERVAL));var readyStateCB=function(){// Request completed.  Cancel the keepalive.\nclearTimeout(keepaliveTimeout);// Trigger a new request so we can continue receiving data.\ndoNewRequest();};this.addTag(url,readyStateCB);};/**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */FirebaseIFrameScriptHolder.prototype.addTag=function(url,loadCB){var _this=this;if(isNodeSdk()){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nthis.doNodeLongPoll(url,loadCB);}else{setTimeout(function(){try{// if we're already closed, don't add this poll\nif(!_this.sendNewPolls){return;}var newScript_1=_this.myIFrame.doc.createElement('script');newScript_1.type='text/javascript';newScript_1.async=true;newScript_1.src=url;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript_1.onload=newScript_1.onreadystatechange=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar rstate=newScript_1.readyState;if(!rstate||rstate==='loaded'||rstate==='complete'){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript_1.onload=newScript_1.onreadystatechange=null;if(newScript_1.parentNode){newScript_1.parentNode.removeChild(newScript_1);}loadCB();}};newScript_1.onerror=function(){log('Long-poll script failed to load: '+url);_this.sendNewPolls=false;_this.close();};_this.myIFrame.doc.body.appendChild(newScript_1);}catch(e){// TODO: we should make this error visible somehow\n}},Math.floor(1));}};return FirebaseIFrameScriptHolder;}();/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** The semver (www.semver.org) version of the SDK. */var SDK_VERSION='';// SDK_VERSION should be set before any database instance is created\nfunction setSDKVersion(version){SDK_VERSION=version;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var WEBSOCKET_MAX_FRAME_SIZE=16384;var WEBSOCKET_KEEPALIVE_INTERVAL=45000;var WebSocketImpl=null;if(typeof MozWebSocket!=='undefined'){WebSocketImpl=MozWebSocket;}else if(typeof WebSocket!=='undefined'){WebSocketImpl=WebSocket;}/**\r\n * Create a new websocket connection with the given callbacks.\r\n */var WebSocketConnection=/** @class */function(){/**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */function WebSocketConnection(connId,repoInfo,applicationId,transportSessionId,lastSessionId){this.connId=connId;this.applicationId=applicationId;this.keepaliveTimer=null;this.frames=null;this.totalFrames=0;this.bytesSent=0;this.bytesReceived=0;this.log_=logWrapper(this.connId);this.stats_=statsManagerGetCollection(repoInfo);this.connURL=WebSocketConnection.connectionURL_(repoInfo,transportSessionId,lastSessionId);this.nodeAdmin=repoInfo.nodeAdmin;}/**\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return connection url\r\n     */WebSocketConnection.connectionURL_=function(repoInfo,transportSessionId,lastSessionId){var urlParams={};urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(!isNodeSdk()&&typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}if(transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=transportSessionId;}if(lastSessionId){urlParams[LAST_SESSION_PARAM]=lastSessionId;}return repoInfoConnectionURL(repoInfo,WEBSOCKET,urlParams);};/**\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */WebSocketConnection.prototype.open=function(onMessage,onDisconnect){var _this=this;this.onDisconnect=onDisconnect;this.onMessage=onMessage;this.log_('Websocket connecting to '+this.connURL);this.everConnected_=false;// Assume failure until proven otherwise.\nPersistentStorage.set('previous_websocket_failure',true);try{if(isNodeSdk()){var device=this.nodeAdmin?'AdminNode':'Node';// UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\nvar options={headers:{'User-Agent':\"Firebase/\"+PROTOCOL_VERSION+\"/\"+SDK_VERSION+\"/\"+process.platform+\"/\"+device,'X-Firebase-GMPID':this.applicationId||''}};// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\nvar env=process['env'];var proxy=this.connURL.indexOf('wss://')===0?env['HTTPS_PROXY']||env['https_proxy']:env['HTTP_PROXY']||env['http_proxy'];if(proxy){options['proxy']={origin:proxy};}this.mySock=new WebSocketImpl(this.connURL,[],options);}else{var options={headers:{'X-Firebase-GMPID':this.applicationId||''}};this.mySock=new WebSocketImpl(this.connURL,[],options);}}catch(e){this.log_('Error instantiating WebSocket.');var error=e.message||e.data;if(error){this.log_(error);}this.onClosed_();return;}this.mySock.onopen=function(){_this.log_('Websocket connected.');_this.everConnected_=true;};this.mySock.onclose=function(){_this.log_('Websocket connection was disconnected.');_this.mySock=null;_this.onClosed_();};this.mySock.onmessage=function(m){_this.handleIncomingFrame(m);};this.mySock.onerror=function(e){_this.log_('WebSocket error.  Closing connection.');// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar error=e.message||e.data;if(error){_this.log_(error);}_this.onClosed_();};};/**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */WebSocketConnection.prototype.start=function(){};WebSocketConnection.forceDisallow=function(){WebSocketConnection.forceDisallow_=true;};WebSocketConnection.isAvailable=function(){var isOldAndroid=false;if(typeof navigator!=='undefined'&&navigator.userAgent){var oldAndroidRegex=/Android ([0-9]{0,}\\.[0-9]{0,})/;var oldAndroidMatch=navigator.userAgent.match(oldAndroidRegex);if(oldAndroidMatch&&oldAndroidMatch.length>1){if(parseFloat(oldAndroidMatch[1])<4.4){isOldAndroid=true;}}}return!isOldAndroid&&WebSocketImpl!==null&&!WebSocketConnection.forceDisallow_;};/**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */WebSocketConnection.previouslyFailed=function(){// If our persistent storage is actually only in-memory storage,\n// we default to assuming that it previously failed to be safe.\nreturn PersistentStorage.isInMemoryStorage||PersistentStorage.get('previous_websocket_failure')===true;};WebSocketConnection.prototype.markConnectionHealthy=function(){PersistentStorage.remove('previous_websocket_failure');};WebSocketConnection.prototype.appendFrame_=function(data){this.frames.push(data);if(this.frames.length===this.totalFrames){var fullMess=this.frames.join('');this.frames=null;var jsonMess=jsonEval(fullMess);//handle the message\nthis.onMessage(jsonMess);}};/**\r\n     * @param frameCount The number of frames we are expecting from the server\r\n     */WebSocketConnection.prototype.handleNewFrameCount_=function(frameCount){this.totalFrames=frameCount;this.frames=[];};/**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @return Any remaining data to be process, or null if there is none\r\n     */WebSocketConnection.prototype.extractFrameCount_=function(data){assert(this.frames===null,'We already have a frame buffer');// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\nif(data.length<=6){var frameCount=Number(data);if(!isNaN(frameCount)){this.handleNewFrameCount_(frameCount);return null;}}this.handleNewFrameCount_(1);return data;};/**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */WebSocketConnection.prototype.handleIncomingFrame=function(mess){if(this.mySock===null){return;// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n}var data=mess['data'];this.bytesReceived+=data.length;this.stats_.incrementCounter('bytes_received',data.length);this.resetKeepAlive();if(this.frames!==null){// we're buffering\nthis.appendFrame_(data);}else{// try to parse out a frame count, otherwise, assume 1 and process it\nvar remainingData=this.extractFrameCount_(data);if(remainingData!==null){this.appendFrame_(remainingData);}}};/**\r\n     * Send a message to the server\r\n     * @param data The JSON object to transmit\r\n     */WebSocketConnection.prototype.send=function(data){this.resetKeepAlive();var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//We can only fit a certain amount in each websocket frame, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(dataStr,WEBSOCKET_MAX_FRAME_SIZE);//Send the length header\nif(dataSegs.length>1){this.sendString_(String(dataSegs.length));}//Send the actual data in segments.\nfor(var i=0;i<dataSegs.length;i++){this.sendString_(dataSegs[i]);}};WebSocketConnection.prototype.shutdown_=function(){this.isClosed_=true;if(this.keepaliveTimer){clearInterval(this.keepaliveTimer);this.keepaliveTimer=null;}if(this.mySock){this.mySock.close();this.mySock=null;}};WebSocketConnection.prototype.onClosed_=function(){if(!this.isClosed_){this.log_('WebSocket is closing itself');this.shutdown_();// since this is an internal close, trigger the close listener\nif(this.onDisconnect){this.onDisconnect(this.everConnected_);this.onDisconnect=null;}}};/**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */WebSocketConnection.prototype.close=function(){if(!this.isClosed_){this.log_('WebSocket is being closed');this.shutdown_();}};/**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */WebSocketConnection.prototype.resetKeepAlive=function(){var _this=this;clearInterval(this.keepaliveTimer);this.keepaliveTimer=setInterval(function(){//If there has been no websocket activity for a while, send a no-op\nif(_this.mySock){_this.sendString_('0');}_this.resetKeepAlive();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));};/**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str String to send.\r\n     */WebSocketConnection.prototype.sendString_=function(str){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n// calls for some unknown reason.  We treat these as an error and disconnect.\n// See https://app.asana.com/0/58926111402292/68021340250410\ntry{this.mySock.send(str);}catch(e){this.log_('Exception thrown from WebSocket.send():',e.message||e.data,'Closing connection.');setTimeout(this.onClosed_.bind(this),0);}};/**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */WebSocketConnection.responsesRequiredToBeHealthy=2;/**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */WebSocketConnection.healthyTimeout=30000;return WebSocketConnection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */var TransportManager=/** @class */function(){/**\r\n     * @param repoInfo Metadata around the namespace we're connecting to\r\n     */function TransportManager(repoInfo){this.initTransports_(repoInfo);}Object.defineProperty(TransportManager,\"ALL_TRANSPORTS\",{get:function(){return[BrowserPollConnection,WebSocketConnection];},enumerable:false,configurable:true});TransportManager.prototype.initTransports_=function(repoInfo){var e_1,_a;var isWebSocketsAvailable=WebSocketConnection&&WebSocketConnection['isAvailable']();var isSkipPollConnection=isWebSocketsAvailable&&!WebSocketConnection.previouslyFailed();if(repoInfo.webSocketOnly){if(!isWebSocketsAvailable){warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");}isSkipPollConnection=true;}if(isSkipPollConnection){this.transports_=[WebSocketConnection];}else{var transports=this.transports_=[];try{for(var _b=__values(TransportManager.ALL_TRANSPORTS),_c=_b.next();!_c.done;_c=_b.next()){var transport=_c.value;if(transport&&transport['isAvailable']()){transports.push(transport);}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}}};/**\r\n     * @return The constructor for the initial transport to use\r\n     */TransportManager.prototype.initialTransport=function(){if(this.transports_.length>0){return this.transports_[0];}else{throw new Error('No transports available');}};/**\r\n     * @return The constructor for the next transport, or null\r\n     */TransportManager.prototype.upgradeTransport=function(){if(this.transports_.length>1){return this.transports_[1];}else{return null;}};return TransportManager;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT=60000;// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS=5000;// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE=10*1024;var BYTES_RECEIVED_HEALTHY_OVERRIDE=100*1024;var MESSAGE_TYPE='t';var MESSAGE_DATA='d';var CONTROL_SHUTDOWN='s';var CONTROL_RESET='r';var CONTROL_ERROR='e';var CONTROL_PONG='o';var SWITCH_ACK='a';var END_TRANSMISSION='n';var PING='p';var SERVER_HELLO='h';/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */var Connection=/** @class */function(){/**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */function Connection(id,repoInfo_,applicationId_,onMessage_,onReady_,onDisconnect_,onKill_,lastSessionId){this.id=id;this.repoInfo_=repoInfo_;this.applicationId_=applicationId_;this.onMessage_=onMessage_;this.onReady_=onReady_;this.onDisconnect_=onDisconnect_;this.onKill_=onKill_;this.lastSessionId=lastSessionId;this.connectionCount=0;this.pendingDataMessages=[];this.state_=0/* CONNECTING */;this.log_=logWrapper('c:'+this.id+':');this.transportManager_=new TransportManager(repoInfo_);this.log_('Connection created');this.start_();}/**\r\n     * Starts a connection attempt\r\n     */Connection.prototype.start_=function(){var _this=this;var conn=this.transportManager_.initialTransport();this.conn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,undefined,this.lastSessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.primaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessageReceived=this.connReceiver_(this.conn_);var onConnectionLost=this.disconnReceiver_(this.conn_);this.tx_=this.conn_;this.rx_=this.conn_;this.secondaryConn_=null;this.isHealthy_=false;/*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */setTimeout(function(){// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n_this.conn_&&_this.conn_.open(onMessageReceived,onConnectionLost);},Math.floor(0));var healthyTimeoutMS=conn['healthyTimeout']||0;if(healthyTimeoutMS>0){this.healthyTimeout_=setTimeoutNonBlocking(function(){_this.healthyTimeout_=null;if(!_this.isHealthy_){if(_this.conn_&&_this.conn_.bytesReceived>BYTES_RECEIVED_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has received '+_this.conn_.bytesReceived+' bytes.  Marking connection healthy.');_this.isHealthy_=true;_this.conn_.markConnectionHealthy();}else if(_this.conn_&&_this.conn_.bytesSent>BYTES_SENT_HEALTHY_OVERRIDE){_this.log_('Connection exceeded healthy timeout but has sent '+_this.conn_.bytesSent+' bytes.  Leaving connection alive.');// NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n// the server.\n}else{_this.log_('Closing unhealthy connection after timeout.');_this.close();}}// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(healthyTimeoutMS));}};Connection.prototype.nextTransportId_=function(){return'c:'+this.id+':'+this.connectionCount++;};Connection.prototype.disconnReceiver_=function(conn){var _this=this;return function(everConnected){if(conn===_this.conn_){_this.onConnectionLost_(everConnected);}else if(conn===_this.secondaryConn_){_this.log_('Secondary connection lost.');_this.onSecondaryConnectionLost_();}else{_this.log_('closing an old connection');}};};Connection.prototype.connReceiver_=function(conn){var _this=this;return function(message){if(_this.state_!==2/* DISCONNECTED */){if(conn===_this.rx_){_this.onPrimaryMessageReceived_(message);}else if(conn===_this.secondaryConn_){_this.onSecondaryMessageReceived_(message);}else{_this.log_('message on old connection');}}};};/**\r\n     * @param dataMsg An arbitrary data message to be sent to the server\r\n     */Connection.prototype.sendRequest=function(dataMsg){// wrap in a data message envelope and send it on\nvar msg={t:'d',d:dataMsg};this.sendData_(msg);};Connection.prototype.tryCleanupConnection=function(){if(this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_){this.log_('cleaning up and promoting a connection: '+this.secondaryConn_.connId);this.conn_=this.secondaryConn_;this.secondaryConn_=null;// the server will shutdown the old connection\n}};Connection.prototype.onSecondaryControl_=function(controlData){if(MESSAGE_TYPE in controlData){var cmd=controlData[MESSAGE_TYPE];if(cmd===SWITCH_ACK){this.upgradeIfSecondaryHealthy_();}else if(cmd===CONTROL_RESET){// Most likely the session wasn't valid. Abandon the switch attempt\nthis.log_('Got a reset on secondary, closing it');this.secondaryConn_.close();// If we were already using this connection for something, than we need to fully close\nif(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_){this.close();}}else if(cmd===CONTROL_PONG){this.log_('got pong on secondary.');this.secondaryResponsesRequired_--;this.upgradeIfSecondaryHealthy_();}}};Connection.prototype.onSecondaryMessageReceived_=function(parsedData){var layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onSecondaryControl_(data);}else if(layer==='d'){// got a data message, but we're still second connection. Need to buffer it up\nthis.pendingDataMessages.push(data);}else{throw new Error('Unknown protocol layer: '+layer);}};Connection.prototype.upgradeIfSecondaryHealthy_=function(){if(this.secondaryResponsesRequired_<=0){this.log_('Secondary connection is healthy.');this.isHealthy_=true;this.secondaryConn_.markConnectionHealthy();this.proceedWithUpgrade_();}else{// Send a ping to make sure the connection is healthy.\nthis.log_('sending ping on secondary.');this.secondaryConn_.send({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.proceedWithUpgrade_=function(){// tell this connection to consider itself open\nthis.secondaryConn_.start();// send ack\nthis.log_('sending client ack on secondary');this.secondaryConn_.send({t:'c',d:{t:SWITCH_ACK,d:{}}});// send end packet on primary transport, switch to sending on this one\n// can receive on this one, buffer responses until end received on primary transport\nthis.log_('Ending transmission on primary');this.conn_.send({t:'c',d:{t:END_TRANSMISSION,d:{}}});this.tx_=this.secondaryConn_;this.tryCleanupConnection();};Connection.prototype.onPrimaryMessageReceived_=function(parsedData){// Must refer to parsedData properties in quotes, so closure doesn't touch them.\nvar layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onControl_(data);}else if(layer==='d'){this.onDataMessage_(data);}};Connection.prototype.onDataMessage_=function(message){this.onPrimaryResponse_();// We don't do anything with data messages, just kick them up a level\nthis.onMessage_(message);};Connection.prototype.onPrimaryResponse_=function(){if(!this.isHealthy_){this.primaryResponsesRequired_--;if(this.primaryResponsesRequired_<=0){this.log_('Primary connection is healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}}};Connection.prototype.onControl_=function(controlData){var cmd=requireKey(MESSAGE_TYPE,controlData);if(MESSAGE_DATA in controlData){var payload=controlData[MESSAGE_DATA];if(cmd===SERVER_HELLO){this.onHandshake_(payload);}else if(cmd===END_TRANSMISSION){this.log_('recvd end transmission on primary');this.rx_=this.secondaryConn_;for(var i=0;i<this.pendingDataMessages.length;++i){this.onDataMessage_(this.pendingDataMessages[i]);}this.pendingDataMessages=[];this.tryCleanupConnection();}else if(cmd===CONTROL_SHUTDOWN){// This was previously the 'onKill' callback passed to the lower-level connection\n// payload in this case is the reason for the shutdown. Generally a human-readable error\nthis.onConnectionShutdown_(payload);}else if(cmd===CONTROL_RESET){// payload in this case is the host we should contact\nthis.onReset_(payload);}else if(cmd===CONTROL_ERROR){error('Server Error: '+payload);}else if(cmd===CONTROL_PONG){this.log_('got pong on primary.');this.onPrimaryResponse_();this.sendPingOnPrimaryIfNecessary_();}else{error('Unknown control packet command: '+cmd);}}};/**\r\n     * @param handshake The handshake data returned from the server\r\n     */Connection.prototype.onHandshake_=function(handshake){var timestamp=handshake.ts;var version=handshake.v;var host=handshake.h;this.sessionId=handshake.s;this.repoInfo_.host=host;// if we've already closed the connection, then don't bother trying to progress further\nif(this.state_===0/* CONNECTING */){this.conn_.start();this.onConnectionEstablished_(this.conn_,timestamp);if(PROTOCOL_VERSION!==version){warn('Protocol version mismatch detected');}// TODO: do we want to upgrade? when? maybe a delay?\nthis.tryStartUpgrade_();}};Connection.prototype.tryStartUpgrade_=function(){var conn=this.transportManager_.upgradeTransport();if(conn){this.startUpgrade_(conn);}};Connection.prototype.startUpgrade_=function(conn){var _this=this;this.secondaryConn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.sessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.secondaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessage=this.connReceiver_(this.secondaryConn_);var onDisconnect=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(onMessage,onDisconnect);// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\nsetTimeoutNonBlocking(function(){if(_this.secondaryConn_){_this.log_('Timed out trying to upgrade.');_this.secondaryConn_.close();}},Math.floor(UPGRADE_TIMEOUT));};Connection.prototype.onReset_=function(host){this.log_('Reset packet received.  New host: '+host);this.repoInfo_.host=host;// TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n// We don't currently support resets after the connection has already been established\nif(this.state_===1/* CONNECTED */){this.close();}else{// Close whatever connections we have open and start again.\nthis.closeConnections_();this.start_();}};Connection.prototype.onConnectionEstablished_=function(conn,timestamp){var _this=this;this.log_('Realtime connection established.');this.conn_=conn;this.state_=1/* CONNECTED */;if(this.onReady_){this.onReady_(timestamp,this.sessionId);this.onReady_=null;}// If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n// send some pings.\nif(this.primaryResponsesRequired_===0){this.log_('Primary connection is healthy.');this.isHealthy_=true;}else{setTimeoutNonBlocking(function(){_this.sendPingOnPrimaryIfNecessary_();},Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));}};Connection.prototype.sendPingOnPrimaryIfNecessary_=function(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.\nif(!this.isHealthy_&&this.state_===1/* CONNECTED */){this.log_('sending ping on primary.');this.sendData_({t:'c',d:{t:PING,d:{}}});}};Connection.prototype.onSecondaryConnectionLost_=function(){var conn=this.secondaryConn_;this.secondaryConn_=null;if(this.tx_===conn||this.rx_===conn){// we are relying on this connection already in some capacity. Therefore, a failure is real\nthis.close();}};/**\r\n     * @param everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */Connection.prototype.onConnectionLost_=function(everConnected){this.conn_=null;// NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n// called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\nif(!everConnected&&this.state_===0/* CONNECTING */){this.log_('Realtime connection failed.');// Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\nif(this.repoInfo_.isCacheableHost()){PersistentStorage.remove('host:'+this.repoInfo_.host);// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\nthis.repoInfo_.internalHost=this.repoInfo_.host;}}else if(this.state_===1/* CONNECTED */){this.log_('Realtime connection lost.');}this.close();};Connection.prototype.onConnectionShutdown_=function(reason){this.log_('Connection shutdown command received. Shutting down...');if(this.onKill_){this.onKill_(reason);this.onKill_=null;}// We intentionally don't want to fire onDisconnect (kill is a different case),\n// so clear the callback.\nthis.onDisconnect_=null;this.close();};Connection.prototype.sendData_=function(data){if(this.state_!==1/* CONNECTED */){throw'Connection is not connected';}else{this.tx_.send(data);}};/**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */Connection.prototype.close=function(){if(this.state_!==2/* DISCONNECTED */){this.log_('Closing realtime connection.');this.state_=2/* DISCONNECTED */;this.closeConnections_();if(this.onDisconnect_){this.onDisconnect_();this.onDisconnect_=null;}}};Connection.prototype.closeConnections_=function(){this.log_('Shutting down all connections');if(this.conn_){this.conn_.close();this.conn_=null;}if(this.secondaryConn_){this.secondaryConn_.close();this.secondaryConn_=null;}if(this.healthyTimeout_){clearTimeout(this.healthyTimeout_);this.healthyTimeout_=null;}};return Connection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */var ServerActions=/** @class */function(){function ServerActions(){}ServerActions.prototype.put=function(pathString,data,onComplete,hash){};ServerActions.prototype.merge=function(pathString,data,onComplete,hash){};/**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token The authentication token\r\n     */ServerActions.prototype.refreshAuthToken=function(token){};ServerActions.prototype.onDisconnectPut=function(pathString,data,onComplete){};ServerActions.prototype.onDisconnectMerge=function(pathString,data,onComplete){};ServerActions.prototype.onDisconnectCancel=function(pathString,onComplete){};ServerActions.prototype.reportStats=function(stats){};return ServerActions;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */var EventEmitter=/** @class */function(){function EventEmitter(allowedEvents_){this.allowedEvents_=allowedEvents_;this.listeners_={};assert(Array.isArray(allowedEvents_)&&allowedEvents_.length>0,'Requires a non-empty array');}/**\r\n     * To be called by derived classes to trigger events.\r\n     */EventEmitter.prototype.trigger=function(eventType){var varArgs=[];for(var _i=1;_i<arguments.length;_i++){varArgs[_i-1]=arguments[_i];}if(Array.isArray(this.listeners_[eventType])){// Clone the list, since callbacks could add/remove listeners.\nvar listeners=__spreadArray([],__read(this.listeners_[eventType]));for(var i=0;i<listeners.length;i++){listeners[i].callback.apply(listeners[i].context,varArgs);}}};EventEmitter.prototype.on=function(eventType,callback,context){this.validateEventType_(eventType);this.listeners_[eventType]=this.listeners_[eventType]||[];this.listeners_[eventType].push({callback:callback,context:context});var eventData=this.getInitialEvent(eventType);if(eventData){callback.apply(context,eventData);}};EventEmitter.prototype.off=function(eventType,callback,context){this.validateEventType_(eventType);var listeners=this.listeners_[eventType]||[];for(var i=0;i<listeners.length;i++){if(listeners[i].callback===callback&&(!context||context===listeners[i].context)){listeners.splice(i,1);return;}}};EventEmitter.prototype.validateEventType_=function(eventType){assert(this.allowedEvents_.find(function(et){return et===eventType;}),'Unknown event: '+eventType);};return EventEmitter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */var OnlineMonitor=/** @class */function(_super){__extends(OnlineMonitor,_super);function OnlineMonitor(){var _this=_super.call(this,['online'])||this;_this.online_=true;// We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n// https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n// It would seem that the 'online' event does not always fire consistently. So we disable it\n// for Cordova.\nif(typeof window!=='undefined'&&typeof window.addEventListener!=='undefined'&&!isMobileCordova()){window.addEventListener('online',function(){if(!_this.online_){_this.online_=true;_this.trigger('online',true);}},false);window.addEventListener('offline',function(){if(_this.online_){_this.online_=false;_this.trigger('online',false);}},false);}return _this;}OnlineMonitor.getInstance=function(){return new OnlineMonitor();};OnlineMonitor.prototype.getInitialEvent=function(eventType){assert(eventType==='online','Unknown event type: '+eventType);return[this.online_];};OnlineMonitor.prototype.currentlyOnline=function(){return this.online_;};return OnlineMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** Maximum key depth. */var MAX_PATH_DEPTH=32;/** Maximum number of (UTF8) bytes in a Firebase path. */var MAX_PATH_LENGTH_BYTES=768;/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */var Path=/** @class */function(){/**\r\n     * @param pathOrString Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */function Path(pathOrString,pieceNum){if(pieceNum===void 0){this.pieces_=pathOrString.split('/');// Remove empty pieces.\nvar copyTo=0;for(var i=0;i<this.pieces_.length;i++){if(this.pieces_[i].length>0){this.pieces_[copyTo]=this.pieces_[i];copyTo++;}}this.pieces_.length=copyTo;this.pieceNum_=0;}else{this.pieces_=pathOrString;this.pieceNum_=pieceNum;}}Path.prototype.toString=function(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!==''){pathString+='/'+this.pieces_[i];}}return pathString||'/';};return Path;}();function newEmptyPath(){return new Path('');}function pathGetFront(path){if(path.pieceNum_>=path.pieces_.length){return null;}return path.pieces_[path.pieceNum_];}/**\r\n * @return The number of segments in this path\r\n */function pathGetLength(path){return path.pieces_.length-path.pieceNum_;}function pathPopFront(path){var pieceNum=path.pieceNum_;if(pieceNum<path.pieces_.length){pieceNum++;}return new Path(path.pieces_,pieceNum);}function pathGetBack(path){if(path.pieceNum_<path.pieces_.length){return path.pieces_[path.pieces_.length-1];}return null;}function pathToUrlEncodedString(path){var pathString='';for(var i=path.pieceNum_;i<path.pieces_.length;i++){if(path.pieces_[i]!==''){pathString+='/'+encodeURIComponent(String(path.pieces_[i]));}}return pathString||'/';}/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */function pathSlice(path,begin){if(begin===void 0){begin=0;}return path.pieces_.slice(path.pieceNum_+begin);}function pathParent(path){if(path.pieceNum_>=path.pieces_.length){return null;}var pieces=[];for(var i=path.pieceNum_;i<path.pieces_.length-1;i++){pieces.push(path.pieces_[i]);}return new Path(pieces,0);}function pathChild(path,childPathObj){var pieces=[];for(var i=path.pieceNum_;i<path.pieces_.length;i++){pieces.push(path.pieces_[i]);}if(childPathObj instanceof Path){for(var i=childPathObj.pieceNum_;i<childPathObj.pieces_.length;i++){pieces.push(childPathObj.pieces_[i]);}}else{var childPieces=childPathObj.split('/');for(var i=0;i<childPieces.length;i++){if(childPieces[i].length>0){pieces.push(childPieces[i]);}}}return new Path(pieces,0);}/**\r\n * @return True if there are no segments in this path\r\n */function pathIsEmpty(path){return path.pieceNum_>=path.pieces_.length;}/**\r\n * @return The path from outerPath to innerPath\r\n */function newRelativePath(outerPath,innerPath){var outer=pathGetFront(outerPath),inner=pathGetFront(innerPath);if(outer===null){return innerPath;}else if(outer===inner){return newRelativePath(pathPopFront(outerPath),pathPopFront(innerPath));}else{throw new Error('INTERNAL ERROR: innerPath ('+innerPath+') is not within '+'outerPath ('+outerPath+')');}}/**\r\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\r\n */function pathCompare(left,right){var leftKeys=pathSlice(left,0);var rightKeys=pathSlice(right,0);for(var i=0;i<leftKeys.length&&i<rightKeys.length;i++){var cmp=nameCompare(leftKeys[i],rightKeys[i]);if(cmp!==0){return cmp;}}if(leftKeys.length===rightKeys.length){return 0;}return leftKeys.length<rightKeys.length?-1:1;}/**\r\n * @return true if paths are the same.\r\n */function pathEquals(path,other){if(pathGetLength(path)!==pathGetLength(other)){return false;}for(var i=path.pieceNum_,j=other.pieceNum_;i<=path.pieces_.length;i++,j++){if(path.pieces_[i]!==other.pieces_[j]){return false;}}return true;}/**\r\n * @return True if this path is a parent (or the same as) other\r\n */function pathContains(path,other){var i=path.pieceNum_;var j=other.pieceNum_;if(pathGetLength(path)>pathGetLength(other)){return false;}while(i<path.pieces_.length){if(path.pieces_[i]!==other.pieces_[j]){return false;}++i;++j;}return true;}/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */var ValidationPath=/** @class */function(){/**\r\n     * @param path Initial Path.\r\n     * @param errorPrefix_ Prefix for any error messages.\r\n     */function ValidationPath(path,errorPrefix_){this.errorPrefix_=errorPrefix_;this.parts_=pathSlice(path,0);/** Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(var i=0;i<this.parts_.length;i++){this.byteLength_+=stringLength(this.parts_[i]);}validationPathCheckValid(this);}return ValidationPath;}();function validationPathPush(validationPath,child){// Count the needed '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_+=1;}validationPath.parts_.push(child);validationPath.byteLength_+=stringLength(child);validationPathCheckValid(validationPath);}function validationPathPop(validationPath){var last=validationPath.parts_.pop();validationPath.byteLength_-=stringLength(last);// Un-count the previous '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_-=1;}}function validationPathCheckValid(validationPath){if(validationPath.byteLength_>MAX_PATH_LENGTH_BYTES){throw new Error(validationPath.errorPrefix_+'has a key path longer than '+MAX_PATH_LENGTH_BYTES+' bytes ('+validationPath.byteLength_+').');}if(validationPath.parts_.length>MAX_PATH_DEPTH){throw new Error(validationPath.errorPrefix_+'path specified exceeds the maximum depth that can be written ('+MAX_PATH_DEPTH+') or object contains a cycle '+validationPathToErrorString(validationPath));}}/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */function validationPathToErrorString(validationPath){if(validationPath.parts_.length===0){return'';}return\"in property '\"+validationPath.parts_.join('.')+\"'\";}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var VisibilityMonitor=/** @class */function(_super){__extends(VisibilityMonitor,_super);function VisibilityMonitor(){var _this=_super.call(this,['visible'])||this;var hidden;var visibilityChange;if(typeof document!=='undefined'&&typeof document.addEventListener!=='undefined'){if(typeof document['hidden']!=='undefined'){// Opera 12.10 and Firefox 18 and later support\nvisibilityChange='visibilitychange';hidden='hidden';}else if(typeof document['mozHidden']!=='undefined'){visibilityChange='mozvisibilitychange';hidden='mozHidden';}else if(typeof document['msHidden']!=='undefined'){visibilityChange='msvisibilitychange';hidden='msHidden';}else if(typeof document['webkitHidden']!=='undefined'){visibilityChange='webkitvisibilitychange';hidden='webkitHidden';}}// Initially, we always assume we are visible. This ensures that in browsers\n// without page visibility support or in cases where we are never visible\n// (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n// reconnects\n_this.visible_=true;if(visibilityChange){document.addEventListener(visibilityChange,function(){var visible=!document[hidden];if(visible!==_this.visible_){_this.visible_=visible;_this.trigger('visible',visible);}},false);}return _this;}VisibilityMonitor.getInstance=function(){return new VisibilityMonitor();};VisibilityMonitor.prototype.getInitialEvent=function(eventType){assert(eventType==='visible','Unknown event type: '+eventType);return[this.visible_];};return VisibilityMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var RECONNECT_MIN_DELAY=1000;var RECONNECT_MAX_DELAY_DEFAULT=60*5*1000;// 5 minutes in milliseconds (Case: 1858)\nvar GET_CONNECT_TIMEOUT=3*1000;var RECONNECT_MAX_DELAY_FOR_ADMINS=30*1000;// 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER=1.3;var RECONNECT_DELAY_RESET_TIMEOUT=30000;// Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON='server_kill';// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD=3;/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */var PersistentConnection=/** @class */function(_super){__extends(PersistentConnection,_super);/**\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */function PersistentConnection(repoInfo_,applicationId_,onDataUpdate_,onConnectStatus_,onServerInfoUpdate_,authTokenProvider_,authOverride_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.applicationId_=applicationId_;_this.onDataUpdate_=onDataUpdate_;_this.onConnectStatus_=onConnectStatus_;_this.onServerInfoUpdate_=onServerInfoUpdate_;_this.authTokenProvider_=authTokenProvider_;_this.authOverride_=authOverride_;// Used for diagnostic logging.\n_this.id=PersistentConnection.nextPersistentConnectionId_++;_this.log_=logWrapper('p:'+_this.id+':');_this.interruptReasons_={};/** Map<path, Map<queryId, ListenSpec>> */_this.listens=new Map();_this.outstandingPuts_=[];_this.outstandingGets_=[];_this.outstandingPutCount_=0;_this.outstandingGetCount_=0;_this.onDisconnectRequestQueue_=[];_this.connected_=false;_this.reconnectDelay_=RECONNECT_MIN_DELAY;_this.maxReconnectDelay_=RECONNECT_MAX_DELAY_DEFAULT;_this.securityDebugCallback_=null;_this.lastSessionId=null;_this.establishConnectionTimer_=null;_this.visible_=false;// Before we get connected, we keep a queue of pending messages to send.\n_this.requestCBHash_={};_this.requestNumber_=0;_this.realtime_=null;_this.authToken_=null;_this.forceTokenRefresh_=false;_this.invalidAuthTokenCount_=0;_this.firstConnection_=true;_this.lastConnectionAttemptTime_=null;_this.lastConnectionEstablishedTime_=null;if(authOverride_&&!isNodeSdk()){throw new Error('Auth override specified in options, but not supported on non Node.js platforms');}_this.scheduleConnect_(0);VisibilityMonitor.getInstance().on('visible',_this.onVisible_,_this);if(repoInfo_.host.indexOf('fblocal')===-1){OnlineMonitor.getInstance().on('online',_this.onOnline_,_this);}return _this;}PersistentConnection.prototype.sendRequest=function(action,body,onResponse){var curReqNum=++this.requestNumber_;var msg={r:curReqNum,a:action,b:body};this.log_(stringify(msg));assert(this.connected_,\"sendRequest call when we're not connected not allowed.\");this.realtime_.sendRequest(msg);if(onResponse){this.requestCBHash_[curReqNum]=onResponse;}};PersistentConnection.prototype.get=function(query){var _this=this;var deferred=new Deferred();var request={p:query.path.toString(),q:query.queryObject()};var outstandingGet={action:'g',request:request,onComplete:function(message){var payload=message['d'];if(message['s']==='ok'){_this.onDataUpdate_(request['p'],payload,/*isMerge*/false,/*tag*/null);deferred.resolve(payload);}else{deferred.reject(payload);}}};this.outstandingGets_.push(outstandingGet);this.outstandingGetCount_++;var index=this.outstandingGets_.length-1;if(!this.connected_){setTimeout(function(){var get=_this.outstandingGets_[index];if(get===undefined||outstandingGet!==get){return;}delete _this.outstandingGets_[index];_this.outstandingGetCount_--;if(_this.outstandingGetCount_===0){_this.outstandingGets_=[];}_this.log_('get '+index+' timed out on connection');deferred.reject(new Error('Client is offline.'));},GET_CONNECT_TIMEOUT);}if(this.connected_){this.sendGet_(index);}return deferred.promise;};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.listen=function(query,currentHashFn,tag,onComplete){var queryId=query.queryIdentifier();var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+queryId);if(!this.listens.has(pathString)){this.listens.set(pathString,new Map());}assert(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'listen() called for non-default but complete query');assert(!this.listens.get(pathString).has(queryId),'listen() called twice for same path/queryId.');var listenSpec={onComplete:onComplete,hashFn:currentHashFn,query:query,tag:tag};this.listens.get(pathString).set(queryId,listenSpec);if(this.connected_){this.sendListen_(listenSpec);}};PersistentConnection.prototype.sendGet_=function(index){var _this=this;var get=this.outstandingGets_[index];this.sendRequest('g',get.request,function(message){delete _this.outstandingGets_[index];_this.outstandingGetCount_--;if(_this.outstandingGetCount_===0){_this.outstandingGets_=[];}if(get.onComplete){get.onComplete(message);}});};PersistentConnection.prototype.sendListen_=function(listenSpec){var _this=this;var query=listenSpec.query;var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Listen on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='q';// Only bother to send query if it's non-default.\nif(listenSpec.tag){req['q']=query.queryObject();req['t']=listenSpec.tag;}req[/*hash*/'h']=listenSpec.hashFn();this.sendRequest(action,req,function(message){var payload=message[/*data*/'d'];var status=message[/*status*/'s'];// print warnings in any case...\nPersistentConnection.warnOnListenWarnings_(payload,query);var currentListenSpec=_this.listens.get(pathString)&&_this.listens.get(pathString).get(queryId);// only trigger actions if the listen hasn't been removed and readded\nif(currentListenSpec===listenSpec){_this.log_('listen response',message);if(status!=='ok'){_this.removeListen_(pathString,queryId);}if(listenSpec.onComplete){listenSpec.onComplete(status,payload);}}});};PersistentConnection.warnOnListenWarnings_=function(payload,query){if(payload&&typeof payload==='object'&&contains(payload,'w')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar warnings=safeGet(payload,'w');if(Array.isArray(warnings)&&~warnings.indexOf('no_index')){var indexSpec='\".indexOn\": \"'+query.getQueryParams().getIndex().toString()+'\"';var indexPath=query.path.toString();warn(\"Using an unspecified index. Your data will be downloaded and \"+(\"filtered on the client. Consider adding \"+indexSpec+\" at \")+(indexPath+\" to your security rules for better performance.\"));}}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.refreshAuthToken=function(token){this.authToken_=token;this.log_('Auth token refreshed');if(this.authToken_){this.tryAuth();}else{//If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n//the credential so we dont become authenticated next time we connect.\nif(this.connected_){this.sendRequest('unauth',{},function(){});}}this.reduceReconnectDelayIfAdminCredential_(token);};PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_=function(credential){// NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n// Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\nvar isFirebaseSecret=credential&&credential.length===40;if(isFirebaseSecret||isAdmin(credential)){this.log_('Admin auth credential detected.  Reducing max reconnect time.');this.maxReconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;}};/**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */PersistentConnection.prototype.tryAuth=function(){var _this=this;if(this.connected_&&this.authToken_){var token_1=this.authToken_;var authMethod=isValidFormat(token_1)?'auth':'gauth';var requestData={cred:token_1};if(this.authOverride_===null){requestData['noauth']=true;}else if(typeof this.authOverride_==='object'){requestData['authvar']=this.authOverride_;}this.sendRequest(authMethod,requestData,function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(_this.authToken_===token_1){if(status==='ok'){_this.invalidAuthTokenCount_=0;}else{// Triggers reconnect and force refresh for auth token\n_this.onAuthRevoked_(status,data);}}});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.unlisten=function(query,tag){var pathString=query.path.toString();var queryId=query.queryIdentifier();this.log_('Unlisten called for '+pathString+' '+queryId);assert(query.getQueryParams().isDefault()||!query.getQueryParams().loadsAllData(),'unlisten() called for non-default but complete query');var listen=this.removeListen_(pathString,queryId);if(listen&&this.connected_){this.sendUnlisten_(pathString,queryId,query.queryObject(),tag);}};PersistentConnection.prototype.sendUnlisten_=function(pathString,queryId,queryObj,tag){this.log_('Unlisten on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='n';// Only bother sending queryId if it's non-default.\nif(tag){req['q']=queryObj;req['t']=tag;}this.sendRequest(action,req);};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectPut=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('o',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'o',data:data,onComplete:onComplete});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectMerge=function(pathString,data,onComplete){if(this.connected_){this.sendOnDisconnect_('om',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'om',data:data,onComplete:onComplete});}};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.onDisconnectCancel=function(pathString,onComplete){if(this.connected_){this.sendOnDisconnect_('oc',pathString,null,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'oc',data:null,onComplete:onComplete});}};PersistentConnection.prototype.sendOnDisconnect_=function(action,pathString,data,onComplete){var request={/*path*/p:pathString,/*data*/d:data};this.log_('onDisconnect '+action,request);this.sendRequest(action,request,function(response){if(onComplete){setTimeout(function(){onComplete(response[/*status*/'s'],response[/* data */'d']);},Math.floor(0));}});};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){this.putInternal('p',pathString,data,onComplete,hash);};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.merge=function(pathString,data,onComplete,hash){this.putInternal('m',pathString,data,onComplete,hash);};PersistentConnection.prototype.putInternal=function(action,pathString,data,onComplete,hash){var request={/*path*/p:pathString,/*data*/d:data};if(hash!==undefined){request[/*hash*/'h']=hash;}// TODO: Only keep track of the most recent put for a given path?\nthis.outstandingPuts_.push({action:action,request:request,onComplete:onComplete});this.outstandingPutCount_++;var index=this.outstandingPuts_.length-1;if(this.connected_){this.sendPut_(index);}else{this.log_('Buffering put: '+pathString);}};PersistentConnection.prototype.sendPut_=function(index){var _this=this;var action=this.outstandingPuts_[index].action;var request=this.outstandingPuts_[index].request;var onComplete=this.outstandingPuts_[index].onComplete;this.outstandingPuts_[index].queued=this.connected_;this.sendRequest(action,request,function(message){_this.log_(action+' response',message);delete _this.outstandingPuts_[index];_this.outstandingPutCount_--;// Clean up array occasionally.\nif(_this.outstandingPutCount_===0){_this.outstandingPuts_=[];}if(onComplete){onComplete(message[/*status*/'s'],message[/* data */'d']);}});};/**\r\n     * @inheritDoc\r\n     */PersistentConnection.prototype.reportStats=function(stats){var _this=this;// If we're not connected, we just drop the stats.\nif(this.connected_){var request={/*counters*/c:stats};this.log_('reportStats',request);this.sendRequest(/*stats*/'s',request,function(result){var status=result[/*status*/'s'];if(status!=='ok'){var errorReason=result[/* data */'d'];_this.log_('reportStats','Error sending stats: '+errorReason);}});}};PersistentConnection.prototype.onDataMessage_=function(message){if('r'in message){// this is a response\nthis.log_('from server: '+stringify(message));var reqNum=message['r'];var onResponse=this.requestCBHash_[reqNum];if(onResponse){delete this.requestCBHash_[reqNum];onResponse(message[/*body*/'b']);}}else if('error'in message){throw'A server-side error has occurred: '+message['error'];}else if('a'in message){// a and b are action and body, respectively\nthis.onDataPush_(message['a'],message['b']);}};PersistentConnection.prototype.onDataPush_=function(action,body){this.log_('handleServerMessage',action,body);if(action==='d'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge*/false,body['t']);}else if(action==='m'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge=*/true,body['t']);}else if(action==='c'){this.onListenRevoked_(body[/*path*/'p'],body[/*query*/'q']);}else if(action==='ac'){this.onAuthRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='sd'){this.onSecurityDebugPacket_(body);}else{error('Unrecognized action received from server: '+stringify(action)+'\\nAre you using the latest client?');}};PersistentConnection.prototype.onReady_=function(timestamp,sessionId){this.log_('connection ready');this.connected_=true;this.lastConnectionEstablishedTime_=new Date().getTime();this.handleTimestamp_(timestamp);this.lastSessionId=sessionId;if(this.firstConnection_){this.sendConnectStats_();}this.restoreState_();this.firstConnection_=false;this.onConnectStatus_(true);};PersistentConnection.prototype.scheduleConnect_=function(timeout){var _this=this;assert(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\");if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);}// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\nthis.establishConnectionTimer_=setTimeout(function(){_this.establishConnectionTimer_=null;_this.establishConnection_();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(timeout));};PersistentConnection.prototype.onVisible_=function(visible){// NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\nif(visible&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_){this.log_('Window became visible.  Reducing delay.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}this.visible_=visible;};PersistentConnection.prototype.onOnline_=function(online){if(online){this.log_('Browser went online.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}else{this.log_('Browser went offline.  Killing connection.');if(this.realtime_){this.realtime_.close();}}};PersistentConnection.prototype.onRealtimeDisconnect_=function(){this.log_('data client disconnected');this.connected_=false;this.realtime_=null;// Since we don't know if our sent transactions succeeded or not, we need to cancel them.\nthis.cancelSentTransactions_();// Clear out the pending requests.\nthis.requestCBHash_={};if(this.shouldReconnect_()){if(!this.visible_){this.log_(\"Window isn't visible.  Delaying reconnect.\");this.reconnectDelay_=this.maxReconnectDelay_;this.lastConnectionAttemptTime_=new Date().getTime();}else if(this.lastConnectionEstablishedTime_){// If we've been connected long enough, reset reconnect delay to minimum.\nvar timeSinceLastConnectSucceeded=new Date().getTime()-this.lastConnectionEstablishedTime_;if(timeSinceLastConnectSucceeded>RECONNECT_DELAY_RESET_TIMEOUT){this.reconnectDelay_=RECONNECT_MIN_DELAY;}this.lastConnectionEstablishedTime_=null;}var timeSinceLastConnectAttempt=new Date().getTime()-this.lastConnectionAttemptTime_;var reconnectDelay=Math.max(0,this.reconnectDelay_-timeSinceLastConnectAttempt);reconnectDelay=Math.random()*reconnectDelay;this.log_('Trying to reconnect in '+reconnectDelay+'ms');this.scheduleConnect_(reconnectDelay);// Adjust reconnect delay for next time.\nthis.reconnectDelay_=Math.min(this.maxReconnectDelay_,this.reconnectDelay_*RECONNECT_DELAY_MULTIPLIER);}this.onConnectStatus_(false);};PersistentConnection.prototype.establishConnection_=function(){var _this=this;if(this.shouldReconnect_()){this.log_('Making a connection attempt');this.lastConnectionAttemptTime_=new Date().getTime();this.lastConnectionEstablishedTime_=null;var onDataMessage_1=this.onDataMessage_.bind(this);var onReady_1=this.onReady_.bind(this);var onDisconnect_1=this.onRealtimeDisconnect_.bind(this);var connId_1=this.id+':'+PersistentConnection.nextConnectionId_++;var self_1=this;var lastSessionId_1=this.lastSessionId;var canceled_1=false;var connection_1=null;var closeFn_1=function(){if(connection_1){connection_1.close();}else{canceled_1=true;onDisconnect_1();}};var sendRequestFn=function(msg){assert(connection_1,\"sendRequest call when we're not connected not allowed.\");connection_1.sendRequest(msg);};this.realtime_={close:closeFn_1,sendRequest:sendRequestFn};var forceRefresh=this.forceTokenRefresh_;this.forceTokenRefresh_=false;// First fetch auth token, and establish connection after fetching the token was successful\nthis.authTokenProvider_.getToken(forceRefresh).then(function(result){if(!canceled_1){log('getToken() completed. Creating connection.');self_1.authToken_=result&&result.accessToken;connection_1=new Connection(connId_1,self_1.repoInfo_,self_1.applicationId_,onDataMessage_1,onReady_1,onDisconnect_1,/* onKill= */function(reason){warn(reason+' ('+self_1.repoInfo_.toString()+')');self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);},lastSessionId_1);}else{log('getToken() completed but was canceled');}}).then(null,function(error){self_1.log_('Failed to get token: '+error);if(!canceled_1){if(_this.repoInfo_.nodeAdmin){// This may be a critical error for the Admin Node.js SDK, so log a warning.\n// But getToken() may also just have temporarily failed, so we still want to\n// continue retrying.\nwarn(error);}closeFn_1();}});}};PersistentConnection.prototype.interrupt=function(reason){log('Interrupting connection for reason: '+reason);this.interruptReasons_[reason]=true;if(this.realtime_){this.realtime_.close();}else{if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);this.establishConnectionTimer_=null;}if(this.connected_){this.onRealtimeDisconnect_();}}};PersistentConnection.prototype.resume=function(reason){log('Resuming connection for reason: '+reason);delete this.interruptReasons_[reason];if(isEmpty(this.interruptReasons_)){this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}};PersistentConnection.prototype.handleTimestamp_=function(timestamp){var delta=timestamp-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:delta});};PersistentConnection.prototype.cancelSentTransactions_=function(){for(var i=0;i<this.outstandingPuts_.length;i++){var put=this.outstandingPuts_[i];if(put&&/*hash*/'h'in put.request&&put.queued){if(put.onComplete){put.onComplete('disconnect');}delete this.outstandingPuts_[i];this.outstandingPutCount_--;}}// Clean up array occasionally.\nif(this.outstandingPutCount_===0){this.outstandingPuts_=[];}};PersistentConnection.prototype.onListenRevoked_=function(pathString,query){// Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\nvar queryId;if(!query){queryId='default';}else{queryId=query.map(function(q){return ObjectToUniqueKey(q);}).join('$');}var listen=this.removeListen_(pathString,queryId);if(listen&&listen.onComplete){listen.onComplete('permission_denied');}};PersistentConnection.prototype.removeListen_=function(pathString,queryId){var normalizedPathString=new Path(pathString).toString();// normalize path.\nvar listen;if(this.listens.has(normalizedPathString)){var map=this.listens.get(normalizedPathString);listen=map.get(queryId);map.delete(queryId);if(map.size===0){this.listens.delete(normalizedPathString);}}else{// all listens for this path has already been removed\nlisten=undefined;}return listen;};PersistentConnection.prototype.onAuthRevoked_=function(statusCode,explanation){log('Auth token revoked: '+statusCode+'/'+explanation);this.authToken_=null;this.forceTokenRefresh_=true;this.realtime_.close();if(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAuthTokenCount_++;if(this.invalidAuthTokenCount_>=INVALID_AUTH_TOKEN_THRESHOLD){// Set a long reconnect delay because recovery is unlikely\nthis.reconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;// Notify the auth token provider that the token is invalid, which will log\n// a warning\nthis.authTokenProvider_.notifyForInvalidToken();}}};PersistentConnection.prototype.onSecurityDebugPacket_=function(body){if(this.securityDebugCallback_){this.securityDebugCallback_(body);}else{if('msg'in body){console.log('FIREBASE: '+body['msg'].replace('\\n','\\nFIREBASE: '));}}};PersistentConnection.prototype.restoreState_=function(){var e_1,_a,e_2,_b;//Re-authenticate ourselves if we have a credential stored.\nthis.tryAuth();try{// Puts depend on having received the corresponding data update from the server before they complete, so we must\n// make sure to send listens before puts.\nfor(var _c=__values(this.listens.values()),_d=_c.next();!_d.done;_d=_c.next()){var queries=_d.value;try{for(var _e=(e_2=void 0,__values(queries.values())),_f=_e.next();!_f.done;_f=_e.next()){var listenSpec=_f.value;this.sendListen_(listenSpec);}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_f&&!_f.done&&(_b=_e.return))_b.call(_e);}finally{if(e_2)throw e_2.error;}}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_d&&!_d.done&&(_a=_c.return))_a.call(_c);}finally{if(e_1)throw e_1.error;}}for(var i=0;i<this.outstandingPuts_.length;i++){if(this.outstandingPuts_[i]){this.sendPut_(i);}}while(this.onDisconnectRequestQueue_.length){var request=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(request.action,request.pathString,request.data,request.onComplete);}for(var i=0;i<this.outstandingGets_.length;i++){if(this.outstandingGets_[i]){this.sendGet_(i);}}};/**\r\n     * Sends client stats for first connection\r\n     */PersistentConnection.prototype.sendConnectStats_=function(){var stats={};var clientName='js';if(isNodeSdk()){if(this.repoInfo_.nodeAdmin){clientName='admin_node';}else{clientName='node';}}stats['sdk.'+clientName+'.'+SDK_VERSION.replace(/\\./g,'-')]=1;if(isMobileCordova()){stats['framework.cordova']=1;}else if(isReactNative()){stats['framework.reactnative']=1;}this.reportStats(stats);};PersistentConnection.prototype.shouldReconnect_=function(){var online=OnlineMonitor.getInstance().currentlyOnline();return isEmpty(this.interruptReasons_)&&online;};PersistentConnection.nextPersistentConnectionId_=0;/**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */PersistentConnection.nextConnectionId_=0;return PersistentConnection;}(ServerActions);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var NamedNode=/** @class */function(){function NamedNode(name,node){this.name=name;this.node=node;}NamedNode.Wrap=function(name,node){return new NamedNode(name,node);};return NamedNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Index=/** @class */function(){function Index(){}/**\r\n     * @return A standalone comparison function for\r\n     * this index\r\n     */Index.prototype.getCompare=function(){return this.compare.bind(this);};/**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */Index.prototype.indexedValueChanged=function(oldNode,newNode){var oldWrapped=new NamedNode(MIN_NAME,oldNode);var newWrapped=new NamedNode(MIN_NAME,newNode);return this.compare(oldWrapped,newWrapped)!==0;};/**\r\n     * @return a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */Index.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};return Index;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __EMPTY_NODE;var KeyIndex=/** @class */function(_super){__extends(KeyIndex,_super);function KeyIndex(){return _super!==null&&_super.apply(this,arguments)||this;}Object.defineProperty(KeyIndex,\"__EMPTY_NODE\",{get:function(){return __EMPTY_NODE;},set:function(val){__EMPTY_NODE=val;},enumerable:false,configurable:true});/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.compare=function(a,b){return nameCompare(a.name,b.name);};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.isDefinedOn=function(node){// We could probably return true here (since every node has a key), but it's never called\n// so just leaving unimplemented for now.\nthrow assertionError('KeyIndex.isDefinedOn not expected to be called.');};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.indexedValueChanged=function(oldNode,newNode){return false;// The key for a node never changes.\n};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */KeyIndex.prototype.maxPost=function(){// TODO: This should really be created once and cached in a static property, but\n// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\nreturn new NamedNode(MAX_NAME,__EMPTY_NODE);};KeyIndex.prototype.makePost=function(indexValue,name){assert(typeof indexValue==='string','KeyIndex indexValue must always be a string.');// We just use empty node, but it'll never be compared, since our comparator only looks at name.\nreturn new NamedNode(indexValue,__EMPTY_NODE);};/**\r\n     * @return String representation for inclusion in a query spec\r\n     */KeyIndex.prototype.toString=function(){return'.key';};return KeyIndex;}(Index);var KEY_INDEX=new KeyIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An iterator over an LLRBNode.\r\n */var SortedMapIterator=/** @class */function(){/**\r\n     * @param node Node to iterate.\r\n     * @param isReverse_ Whether or not to iterate in reverse\r\n     * @param resultGenerator_\r\n     */function SortedMapIterator(node,startKey,comparator,isReverse_,resultGenerator_){if(resultGenerator_===void 0){resultGenerator_=null;}this.isReverse_=isReverse_;this.resultGenerator_=resultGenerator_;this.nodeStack_=[];var cmp=1;while(!node.isEmpty()){node=node;cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse\nif(isReverse_){cmp*=-1;}if(cmp<0){// This node is less than our start key. ignore it\nif(this.isReverse_){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;\nthis.nodeStack_.push(node);break;}else{// This node is greater than our start key, add it to the stack and move to the next one\nthis.nodeStack_.push(node);if(this.isReverse_){node=node.right;}else{node=node.left;}}}}SortedMapIterator.prototype.getNext=function(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_.pop();var result;if(this.resultGenerator_){result=this.resultGenerator_(node.key,node.value);}else{result={key:node.key,value:node.value};}if(this.isReverse_){node=node.left;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.left;}}return result;};SortedMapIterator.prototype.hasNext=function(){return this.nodeStack_.length>0;};SortedMapIterator.prototype.peek=function(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_[this.nodeStack_.length-1];if(this.resultGenerator_){return this.resultGenerator_(node.key,node.value);}else{return{key:node.key,value:node.value};}};return SortedMapIterator;}();/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */var LLRBNode=/** @class */function(){/**\r\n     * @param key Key associated with this node.\r\n     * @param value Value associated with this node.\r\n     * @param color Whether this node is red.\r\n     * @param left Left child.\r\n     * @param right Right child.\r\n     */function LLRBNode(key,value,color,left,right){this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:SortedMap.EMPTY_NODE;this.right=right!=null?right:SortedMap.EMPTY_NODE;}/**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key New key for the node, or null.\r\n     * @param value New value for the node, or null.\r\n     * @param color New color for the node, or null.\r\n     * @param left New left child for the node, or null.\r\n     * @param right New right child for the node, or null.\r\n     * @return The node copy.\r\n     */LLRBNode.prototype.copy=function(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);};/**\r\n     * @return The total number of nodes in the tree.\r\n     */LLRBNode.prototype.count=function(){return this.left.count()+1+this.right.count();};/**\r\n     * @return True if the tree is empty.\r\n     */LLRBNode.prototype.isEmpty=function(){return false;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */LLRBNode.prototype.inorderTraversal=function(action){return this.left.inorderTraversal(action)||!!action(this.key,this.value)||this.right.inorderTraversal(action);};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */LLRBNode.prototype.reverseTraversal=function(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);};/**\r\n     * @return The minimum node in the tree.\r\n     */LLRBNode.prototype.min_=function(){if(this.left.isEmpty()){return this;}else{return this.left.min_();}};/**\r\n     * @return The maximum key in the tree.\r\n     */LLRBNode.prototype.minKey=function(){return this.min_().key;};/**\r\n     * @return The maximum key in the tree.\r\n     */LLRBNode.prototype.maxKey=function(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}};/**\r\n     * @param key Key to insert.\r\n     * @param value Value to insert.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with the key/value added.\r\n     */LLRBNode.prototype.insert=function(key,value,comparator){var n=this;var cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp_();};/**\r\n     * @return New tree, with the minimum key removed.\r\n     */LLRBNode.prototype.removeMin_=function(){if(this.left.isEmpty()){return SortedMap.EMPTY_NODE;}var n=this;if(!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.removeMin_(),null);return n.fixUp_();};/**\r\n     * @param key The key of the item to remove.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with the specified item removed.\r\n     */LLRBNode.prototype.remove=function(key,comparator){var n,smallest;n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed_()){n=n.rotateRight_();}if(!n.right.isEmpty()&&!n.right.isRed_()&&!n.right.left.isRed_()){n=n.moveRedRight_();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return SortedMap.EMPTY_NODE;}else{smallest=n.right.min_();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin_());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp_();};/**\r\n     * @return Whether this is a RED node.\r\n     */LLRBNode.prototype.isRed_=function(){return this.color;};/**\r\n     * @return New tree after performing any needed rotations.\r\n     */LLRBNode.prototype.fixUp_=function(){var n=this;if(n.right.isRed_()&&!n.left.isRed_()){n=n.rotateLeft_();}if(n.left.isRed_()&&n.left.left.isRed_()){n=n.rotateRight_();}if(n.left.isRed_()&&n.right.isRed_()){n=n.colorFlip_();}return n;};/**\r\n     * @return New tree, after moveRedLeft.\r\n     */LLRBNode.prototype.moveRedLeft_=function(){var n=this.colorFlip_();if(n.right.left.isRed_()){n=n.copy(null,null,null,null,n.right.rotateRight_());n=n.rotateLeft_();n=n.colorFlip_();}return n;};/**\r\n     * @return New tree, after moveRedRight.\r\n     */LLRBNode.prototype.moveRedRight_=function(){var n=this.colorFlip_();if(n.left.left.isRed_()){n=n.rotateRight_();n=n.colorFlip_();}return n;};/**\r\n     * @return New tree, after rotateLeft.\r\n     */LLRBNode.prototype.rotateLeft_=function(){var nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);};/**\r\n     * @return New tree, after rotateRight.\r\n     */LLRBNode.prototype.rotateRight_=function(){var nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);};/**\r\n     * @return Newt ree, after colorFlip.\r\n     */LLRBNode.prototype.colorFlip_=function(){var left=this.left.copy(null,null,!this.left.color,null,null);var right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);};/**\r\n     * For testing.\r\n     *\r\n     * @return True if all is well.\r\n     */LLRBNode.prototype.checkMaxDepth_=function(){var blackDepth=this.check_();return Math.pow(2.0,blackDepth)<=this.count()+1;};LLRBNode.prototype.check_=function(){if(this.isRed_()&&this.left.isRed_()){throw new Error('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed_()){throw new Error('Right child of ('+this.key+','+this.value+') is red');}var blackDepth=this.left.check_();if(blackDepth!==this.right.check_()){throw new Error('Black depths differ');}else{return blackDepth+(this.isRed_()?0:1);}};LLRBNode.RED=true;LLRBNode.BLACK=false;return LLRBNode;}();/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */var LLRBEmptyNode=/** @class */function(){function LLRBEmptyNode(){}/**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return The node copy.\r\n     */LLRBEmptyNode.prototype.copy=function(key,value,color,left,right){return this;};/**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key Key to be added.\r\n     * @param value Value to be added.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with item added.\r\n     */LLRBEmptyNode.prototype.insert=function(key,value,comparator){return new LLRBNode(key,value,null);};/**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key The key to remove.\r\n     * @param comparator Comparator.\r\n     * @return New tree, with item removed.\r\n     */LLRBEmptyNode.prototype.remove=function(key,comparator){return this;};/**\r\n     * @return The total number of nodes in the tree.\r\n     */LLRBEmptyNode.prototype.count=function(){return 0;};/**\r\n     * @return True if the tree is empty.\r\n     */LLRBEmptyNode.prototype.isEmpty=function(){return true;};/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.inorderTraversal=function(action){return false;};/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return True if traversal was aborted.\r\n     */LLRBEmptyNode.prototype.reverseTraversal=function(action){return false;};LLRBEmptyNode.prototype.minKey=function(){return null;};LLRBEmptyNode.prototype.maxKey=function(){return null;};LLRBEmptyNode.prototype.check_=function(){return 0;};/**\r\n     * @return Whether this node is red.\r\n     */LLRBEmptyNode.prototype.isRed_=function(){return false;};return LLRBEmptyNode;}();/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */var SortedMap=/** @class */function(){/**\r\n     * @param comparator_ Key comparator.\r\n     * @param root_ (Optional) Root node for the map.\r\n     */function SortedMap(comparator_,root_){if(root_===void 0){root_=SortedMap.EMPTY_NODE;}this.comparator_=comparator_;this.root_=root_;}/**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key Key to be added.\r\n     * @param value Value to be added.\r\n     * @return New map, with item added.\r\n     */SortedMap.prototype.insert=function(key,value){return new SortedMap(this.comparator_,this.root_.insert(key,value,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key The key to remove.\r\n     * @return New map, with item removed.\r\n     */SortedMap.prototype.remove=function(key){return new SortedMap(this.comparator_,this.root_.remove(key,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));};/**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key The key to look up.\r\n     * @return The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */SortedMap.prototype.get=function(key){var cmp;var node=this.root_;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;};/**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key The key to find the predecessor of\r\n     * @return The predecessor key.\r\n     */SortedMap.prototype.getPredecessorKey=function(key){var cmp,node=this.root_,rightParent=null;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){if(!node.left.isEmpty()){node=node.left;while(!node.right.isEmpty()){node=node.right;}return node.key;}else if(rightParent){return rightParent.key;}else{return null;// first item.\n}}else if(cmp<0){node=node.left;}else if(cmp>0){rightParent=node;node=node.right;}}throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');};/**\r\n     * @return True if the map is empty.\r\n     */SortedMap.prototype.isEmpty=function(){return this.root_.isEmpty();};/**\r\n     * @return The total number of nodes in the map.\r\n     */SortedMap.prototype.count=function(){return this.root_.count();};/**\r\n     * @return The minimum key in the map.\r\n     */SortedMap.prototype.minKey=function(){return this.root_.minKey();};/**\r\n     * @return The maximum key in the map.\r\n     */SortedMap.prototype.maxKey=function(){return this.root_.maxKey();};/**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */SortedMap.prototype.inorderTraversal=function(action){return this.root_.inorderTraversal(action);};/**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return True if the traversal was aborted.\r\n     */SortedMap.prototype.reverseTraversal=function(action){return this.root_.reverseTraversal(action);};/**\r\n     * Returns an iterator over the SortedMap.\r\n     * @return The iterator.\r\n     */SortedMap.prototype.getIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,false,resultGenerator);};SortedMap.prototype.getIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,false,resultGenerator);};SortedMap.prototype.getReverseIteratorFrom=function(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,true,resultGenerator);};SortedMap.prototype.getReverseIterator=function(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,true,resultGenerator);};/**\r\n     * Always use the same empty node, to reduce memory.\r\n     */SortedMap.EMPTY_NODE=new LLRBEmptyNode();return SortedMap;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function NAME_ONLY_COMPARATOR(left,right){return nameCompare(left.name,right.name);}function NAME_COMPARATOR(left,right){return nameCompare(left,right);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var MAX_NODE;function setMaxNode(val){MAX_NODE=val;}var priorityHashText=function(priority){if(typeof priority==='number'){return'number:'+doubleToIEEE754String(priority);}else{return'string:'+priority;}};/**\r\n * Validates that a priority snapshot Node is valid.\r\n */var validatePriorityNode=function(priorityNode){if(priorityNode.isLeafNode()){var val=priorityNode.val();assert(typeof val==='string'||typeof val==='number'||typeof val==='object'&&contains(val,'.sv'),'Priority must be a string or number.');}else{assert(priorityNode===MAX_NODE||priorityNode.isEmpty(),'priority of unexpected type.');}// Don't call getPriority() on MAX_NODE to avoid hitting assertion.\nassert(priorityNode===MAX_NODE||priorityNode.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\");};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __childrenNodeConstructor;/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */var LeafNode=/** @class */function(){/**\r\n     * @param value_ The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ The priority of this node.\r\n     */function LeafNode(value_,priorityNode_){if(priorityNode_===void 0){priorityNode_=LeafNode.__childrenNodeConstructor.EMPTY_NODE;}this.value_=value_;this.priorityNode_=priorityNode_;this.lazyHash_=null;assert(this.value_!==undefined&&this.value_!==null,\"LeafNode shouldn't be created with null/undefined value.\");validatePriorityNode(this.priorityNode_);}Object.defineProperty(LeafNode,\"__childrenNodeConstructor\",{get:function(){return __childrenNodeConstructor;},set:function(val){__childrenNodeConstructor=val;},enumerable:false,configurable:true});/** @inheritDoc */LeafNode.prototype.isLeafNode=function(){return true;};/** @inheritDoc */LeafNode.prototype.getPriority=function(){return this.priorityNode_;};/** @inheritDoc */LeafNode.prototype.updatePriority=function(newPriorityNode){return new LeafNode(this.value_,newPriorityNode);};/** @inheritDoc */LeafNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/** @inheritDoc */LeafNode.prototype.getChild=function(path){if(pathIsEmpty(path)){return this;}else if(pathGetFront(path)==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.hasChild=function(){return false;};/** @inheritDoc */LeafNode.prototype.getPredecessorChildName=function(childName,childNode){return null;};/** @inheritDoc */LeafNode.prototype.updateImmediateChild=function(childName,newChildNode){if(childName==='.priority'){return this.updatePriority(newChildNode);}else if(newChildNode.isEmpty()&&childName!=='.priority'){return this;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName,newChildNode).updatePriority(this.priorityNode_);}};/** @inheritDoc */LeafNode.prototype.updateChild=function(path,newChildNode){var front=pathGetFront(path);if(front===null){return newChildNode;}else if(newChildNode.isEmpty()&&front!=='.priority'){return this;}else{assert(front!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');return this.updateImmediateChild(front,LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path),newChildNode));}};/** @inheritDoc */LeafNode.prototype.isEmpty=function(){return false;};/** @inheritDoc */LeafNode.prototype.numChildren=function(){return 0;};/** @inheritDoc */LeafNode.prototype.forEachChild=function(index,action){return false;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.val=function(exportFormat){if(exportFormat&&!this.getPriority().isEmpty()){return{'.value':this.getValue(),'.priority':this.getPriority().val()};}else{return this.getValue();}};/** @inheritDoc */LeafNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash='';if(!this.priorityNode_.isEmpty()){toHash+='priority:'+priorityHashText(this.priorityNode_.val())+':';}var type=typeof this.value_;toHash+=type+':';if(type==='number'){toHash+=doubleToIEEE754String(this.value_);}else{toHash+=this.value_;}this.lazyHash_=sha1(toHash);}return this.lazyHash_;};/**\r\n     * Returns the value of the leaf node.\r\n     * @return The value of the node.\r\n     */LeafNode.prototype.getValue=function(){return this.value_;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.compareTo=function(other){if(other===LeafNode.__childrenNodeConstructor.EMPTY_NODE){return 1;}else if(other instanceof LeafNode.__childrenNodeConstructor){return-1;}else{assert(other.isLeafNode(),'Unknown node type');return this.compareToLeafNode_(other);}};/**\r\n     * Comparison specifically for two leaf nodes\r\n     */LeafNode.prototype.compareToLeafNode_=function(otherLeaf){var otherLeafType=typeof otherLeaf.value_;var thisLeafType=typeof this.value_;var otherIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);var thisIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);assert(otherIndex>=0,'Unknown leaf type: '+otherLeafType);assert(thisIndex>=0,'Unknown leaf type: '+thisLeafType);if(otherIndex===thisIndex){// Same type, compare values\nif(thisLeafType==='object'){// Deferred value nodes are all equal, but we should also never get to this point...\nreturn 0;}else{// Note that this works because true > false, all others are number or string comparisons\nif(this.value_<otherLeaf.value_){return-1;}else if(this.value_===otherLeaf.value_){return 0;}else{return 1;}}}else{return thisIndex-otherIndex;}};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.withIndex=function(){return this;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.isIndexed=function(){return true;};/**\r\n     * @inheritDoc\r\n     */LeafNode.prototype.equals=function(other){/**\r\n         * @inheritDoc\r\n         */if(other===this){return true;}else if(other.isLeafNode()){var otherLeaf=other;return this.value_===otherLeaf.value_&&this.priorityNode_.equals(otherLeaf.priorityNode_);}else{return false;}};/**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */LeafNode.VALUE_TYPE_ORDER=['object','boolean','number','string'];return LeafNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var nodeFromJSON;var MAX_NODE$1;function setNodeFromJSON(val){nodeFromJSON=val;}function setMaxNode$1(val){MAX_NODE$1=val;}var PriorityIndex=/** @class */function(_super){__extends(PriorityIndex,_super);function PriorityIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.compare=function(a,b){var aPriority=a.node.getPriority();var bPriority=b.node.getPriority();var indexCmp=aPriority.compareTo(bPriority);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.isDefinedOn=function(node){return!node.getPriority().isEmpty();};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.getPriority().equals(newNode.getPriority());};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */PriorityIndex.prototype.maxPost=function(){return new NamedNode(MAX_NAME,new LeafNode('[PRIORITY-POST]',MAX_NODE$1));};PriorityIndex.prototype.makePost=function(indexValue,name){var priorityNode=nodeFromJSON(indexValue);return new NamedNode(name,new LeafNode('[PRIORITY-POST]',priorityNode));};/**\r\n     * @return String representation for inclusion in a query spec\r\n     */PriorityIndex.prototype.toString=function(){return'.priority';};return PriorityIndex;}(Index);var PRIORITY_INDEX=new PriorityIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var LOG_2=Math.log(2);var Base12Num=/** @class */function(){function Base12Num(length){var logBase2=function(num){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn parseInt(Math.log(num)/LOG_2,10);};var bitMask=function(bits){return parseInt(Array(bits+1).join('1'),2);};this.count=logBase2(length+1);this.current_=this.count-1;var mask=bitMask(this.count);this.bits_=length+1&mask;}Base12Num.prototype.nextBitIsOne=function(){//noinspection JSBitwiseOperatorUsage\nvar result=!(this.bits_&0x1<<this.current_);this.current_--;return result;};return Base12Num;}();/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList Unsorted list of children\r\n * @param cmp The comparison method to be used\r\n * @param keyFn An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn An optional override for comparator used by the generated sorted map\r\n */var buildChildSet=function(childList,cmp,keyFn,mapSortFn){childList.sort(cmp);var buildBalancedTree=function(low,high){var length=high-low;var namedNode;var key;if(length===0){return null;}else if(length===1){namedNode=childList[low];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,null,null);}else{// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar middle=parseInt(length/2,10)+low;var left=buildBalancedTree(low,middle);var right=buildBalancedTree(middle+1,high);namedNode=childList[middle];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,left,right);}};var buildFrom12Array=function(base12){var node=null;var root=null;var index=childList.length;var buildPennant=function(chunkSize,color){var low=index-chunkSize;var high=index;index-=chunkSize;var childTree=buildBalancedTree(low+1,high);var namedNode=childList[low];var key=keyFn?keyFn(namedNode):namedNode;attachPennant(new LLRBNode(key,namedNode.node,color,null,childTree));};var attachPennant=function(pennant){if(node){node.left=pennant;node=pennant;}else{root=pennant;node=pennant;}};for(var i=0;i<base12.count;++i){var isOne=base12.nextBitIsOne();// The number of nodes taken in each slice is 2^(arr.length - (i + 1))\nvar chunkSize=Math.pow(2,base12.count-(i+1));if(isOne){buildPennant(chunkSize,LLRBNode.BLACK);}else{// current == 2\nbuildPennant(chunkSize,LLRBNode.BLACK);buildPennant(chunkSize,LLRBNode.RED);}}return root;};var base12=new Base12Num(childList.length);var root=buildFrom12Array(base12);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn new SortedMap(mapSortFn||cmp,root);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var _defaultIndexMap;var fallbackObject={};var IndexMap=/** @class */function(){function IndexMap(indexes_,indexSet_){this.indexes_=indexes_;this.indexSet_=indexSet_;}Object.defineProperty(IndexMap,\"Default\",{/**\r\n         * The default IndexMap for nodes without a priority\r\n         */get:function(){assert(fallbackObject&&PRIORITY_INDEX,'ChildrenNode.ts has not been loaded');_defaultIndexMap=_defaultIndexMap||new IndexMap({'.priority':fallbackObject},{'.priority':PRIORITY_INDEX});return _defaultIndexMap;},enumerable:false,configurable:true});IndexMap.prototype.get=function(indexKey){var sortedMap=safeGet(this.indexes_,indexKey);if(!sortedMap){throw new Error('No index defined for '+indexKey);}if(sortedMap instanceof SortedMap){return sortedMap;}else{// The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n// regular child map\nreturn null;}};IndexMap.prototype.hasIndex=function(indexDefinition){return contains(this.indexSet_,indexDefinition.toString());};IndexMap.prototype.addIndex=function(indexDefinition,existingChildren){assert(indexDefinition!==KEY_INDEX,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");var childList=[];var sawIndexedValue=false;var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){sawIndexedValue=sawIndexedValue||indexDefinition.isDefinedOn(next.node);childList.push(next);next=iter.getNext();}var newIndex;if(sawIndexedValue){newIndex=buildChildSet(childList,indexDefinition.getCompare());}else{newIndex=fallbackObject;}var indexName=indexDefinition.toString();var newIndexSet=__assign({},this.indexSet_);newIndexSet[indexName]=indexDefinition;var newIndexes=__assign({},this.indexes_);newIndexes[indexName]=newIndex;return new IndexMap(newIndexes,newIndexSet);};/**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */IndexMap.prototype.addToIndexes=function(namedNode,existingChildren){var _this=this;var newIndexes=map(this.indexes_,function(indexedChildren,indexName){var index=safeGet(_this.indexSet_,indexName);assert(index,'Missing index implementation for '+indexName);if(indexedChildren===fallbackObject){// Check to see if we need to index everything\nif(index.isDefinedOn(namedNode.node)){// We need to build this index\nvar childList=[];var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){if(next.name!==namedNode.name){childList.push(next);}next=iter.getNext();}childList.push(namedNode);return buildChildSet(childList,index.getCompare());}else{// No change, this remains a fallback\nreturn fallbackObject;}}else{var existingSnap=existingChildren.get(namedNode.name);var newChildren=indexedChildren;if(existingSnap){newChildren=newChildren.remove(new NamedNode(namedNode.name,existingSnap));}return newChildren.insert(namedNode,namedNode.node);}});return new IndexMap(newIndexes,this.indexSet_);};/**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */IndexMap.prototype.removeFromIndexes=function(namedNode,existingChildren){var newIndexes=map(this.indexes_,function(indexedChildren){if(indexedChildren===fallbackObject){// This is the fallback. Just return it, nothing to do in this case\nreturn indexedChildren;}else{var existingSnap=existingChildren.get(namedNode.name);if(existingSnap){return indexedChildren.remove(new NamedNode(namedNode.name,existingSnap));}else{// No record of this child\nreturn indexedChildren;}}});return new IndexMap(newIndexes,this.indexSet_);};return IndexMap;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */var ChildrenNode=/** @class */function(){/**\r\n     * @param children_ List of children of this node..\r\n     * @param priorityNode_ The priority of this node (as a snapshot node).\r\n     */function ChildrenNode(children_,priorityNode_,indexMap_){this.children_=children_;this.priorityNode_=priorityNode_;this.indexMap_=indexMap_;this.lazyHash_=null;/**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */if(this.priorityNode_){validatePriorityNode(this.priorityNode_);}if(this.children_.isEmpty()){assert(!this.priorityNode_||this.priorityNode_.isEmpty(),'An empty node cannot have a priority');}}Object.defineProperty(ChildrenNode,\"EMPTY_NODE\",{get:function(){return EMPTY_NODE||(EMPTY_NODE=new ChildrenNode(new SortedMap(NAME_COMPARATOR),null,IndexMap.Default));},enumerable:false,configurable:true});/** @inheritDoc */ChildrenNode.prototype.isLeafNode=function(){return false;};/** @inheritDoc */ChildrenNode.prototype.getPriority=function(){return this.priorityNode_||EMPTY_NODE;};/** @inheritDoc */ChildrenNode.prototype.updatePriority=function(newPriorityNode){if(this.children_.isEmpty()){// Don't allow priorities on empty nodes\nreturn this;}else{return new ChildrenNode(this.children_,newPriorityNode,this.indexMap_);}};/** @inheritDoc */ChildrenNode.prototype.getImmediateChild=function(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.getPriority();}else{var child=this.children_.get(childName);return child===null?EMPTY_NODE:child;}};/** @inheritDoc */ChildrenNode.prototype.getChild=function(path){var front=pathGetFront(path);if(front===null){return this;}return this.getImmediateChild(front).getChild(pathPopFront(path));};/** @inheritDoc */ChildrenNode.prototype.hasChild=function(childName){return this.children_.get(childName)!==null;};/** @inheritDoc */ChildrenNode.prototype.updateImmediateChild=function(childName,newChildNode){assert(newChildNode,'We should always be passing snapshot nodes');if(childName==='.priority'){return this.updatePriority(newChildNode);}else{var namedNode=new NamedNode(childName,newChildNode);var newChildren=void 0,newIndexMap=void 0;if(newChildNode.isEmpty()){newChildren=this.children_.remove(childName);newIndexMap=this.indexMap_.removeFromIndexes(namedNode,this.children_);}else{newChildren=this.children_.insert(childName,newChildNode);newIndexMap=this.indexMap_.addToIndexes(namedNode,this.children_);}var newPriority=newChildren.isEmpty()?EMPTY_NODE:this.priorityNode_;return new ChildrenNode(newChildren,newPriority,newIndexMap);}};/** @inheritDoc */ChildrenNode.prototype.updateChild=function(path,newChildNode){var front=pathGetFront(path);if(front===null){return newChildNode;}else{assert(pathGetFront(path)!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');var newImmediateChild=this.getImmediateChild(front).updateChild(pathPopFront(path),newChildNode);return this.updateImmediateChild(front,newImmediateChild);}};/** @inheritDoc */ChildrenNode.prototype.isEmpty=function(){return this.children_.isEmpty();};/** @inheritDoc */ChildrenNode.prototype.numChildren=function(){return this.children_.count();};/** @inheritDoc */ChildrenNode.prototype.val=function(exportFormat){if(this.isEmpty()){return null;}var obj={};var numKeys=0,maxKey=0,allIntegerKeys=true;this.forEachChild(PRIORITY_INDEX,function(key,childNode){obj[key]=childNode.val(exportFormat);numKeys++;if(allIntegerKeys&&ChildrenNode.INTEGER_REGEXP_.test(key)){maxKey=Math.max(maxKey,Number(key));}else{allIntegerKeys=false;}});if(!exportFormat&&allIntegerKeys&&maxKey<2*numKeys){// convert to array.\nvar array=[];// eslint-disable-next-line guard-for-in\nfor(var key in obj){array[key]=obj[key];}return array;}else{if(exportFormat&&!this.getPriority().isEmpty()){obj['.priority']=this.getPriority().val();}return obj;}};/** @inheritDoc */ChildrenNode.prototype.hash=function(){if(this.lazyHash_===null){var toHash_1='';if(!this.getPriority().isEmpty()){toHash_1+='priority:'+priorityHashText(this.getPriority().val())+':';}this.forEachChild(PRIORITY_INDEX,function(key,childNode){var childHash=childNode.hash();if(childHash!==''){toHash_1+=':'+key+':'+childHash;}});this.lazyHash_=toHash_1===''?'':sha1(toHash_1);}return this.lazyHash_;};/** @inheritDoc */ChildrenNode.prototype.getPredecessorChildName=function(childName,childNode,index){var idx=this.resolveIndex_(index);if(idx){var predecessor=idx.getPredecessorKey(new NamedNode(childName,childNode));return predecessor?predecessor.name:null;}else{return this.children_.getPredecessorKey(childName);}};ChildrenNode.prototype.getFirstChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var minKey=idx.minKey();return minKey&&minKey.name;}else{return this.children_.minKey();}};ChildrenNode.prototype.getFirstChild=function(indexDefinition){var minKey=this.getFirstChildName(indexDefinition);if(minKey){return new NamedNode(minKey,this.children_.get(minKey));}else{return null;}};/**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */ChildrenNode.prototype.getLastChildName=function(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var maxKey=idx.maxKey();return maxKey&&maxKey.name;}else{return this.children_.maxKey();}};ChildrenNode.prototype.getLastChild=function(indexDefinition){var maxKey=this.getLastChildName(indexDefinition);if(maxKey){return new NamedNode(maxKey,this.children_.get(maxKey));}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.forEachChild=function(index,action){var idx=this.resolveIndex_(index);if(idx){return idx.inorderTraversal(function(wrappedNode){return action(wrappedNode.name,wrappedNode.node);});}else{return this.children_.inorderTraversal(action);}};ChildrenNode.prototype.getIterator=function(indexDefinition){return this.getIteratorFrom(indexDefinition.minPost(),indexDefinition);};ChildrenNode.prototype.getIteratorFrom=function(startPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getIteratorFrom(startPost,function(key){return key;});}else{var iterator=this.children_.getIteratorFrom(startPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,startPost)<0){iterator.getNext();next=iterator.peek();}return iterator;}};ChildrenNode.prototype.getReverseIterator=function(indexDefinition){return this.getReverseIteratorFrom(indexDefinition.maxPost(),indexDefinition);};ChildrenNode.prototype.getReverseIteratorFrom=function(endPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getReverseIteratorFrom(endPost,function(key){return key;});}else{var iterator=this.children_.getReverseIteratorFrom(endPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,endPost)>0){iterator.getNext();next=iterator.peek();}return iterator;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.compareTo=function(other){if(this.isEmpty()){if(other.isEmpty()){return 0;}else{return-1;}}else if(other.isLeafNode()||other.isEmpty()){return 1;}else if(other===MAX_NODE$2){return-1;}else{// Must be another node with children.\nreturn 0;}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.withIndex=function(indexDefinition){if(indexDefinition===KEY_INDEX||this.indexMap_.hasIndex(indexDefinition)){return this;}else{var newIndexMap=this.indexMap_.addIndex(indexDefinition,this.children_);return new ChildrenNode(this.children_,this.priorityNode_,newIndexMap);}};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.isIndexed=function(index){return index===KEY_INDEX||this.indexMap_.hasIndex(index);};/**\r\n     * @inheritDoc\r\n     */ChildrenNode.prototype.equals=function(other){if(other===this){return true;}else if(other.isLeafNode()){return false;}else{var otherChildrenNode=other;if(!this.getPriority().equals(otherChildrenNode.getPriority())){return false;}else if(this.children_.count()===otherChildrenNode.children_.count()){var thisIter=this.getIterator(PRIORITY_INDEX);var otherIter=otherChildrenNode.getIterator(PRIORITY_INDEX);var thisCurrent=thisIter.getNext();var otherCurrent=otherIter.getNext();while(thisCurrent&&otherCurrent){if(thisCurrent.name!==otherCurrent.name||!thisCurrent.node.equals(otherCurrent.node)){return false;}thisCurrent=thisIter.getNext();otherCurrent=otherIter.getNext();}return thisCurrent===null&&otherCurrent===null;}else{return false;}}};/**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */ChildrenNode.prototype.resolveIndex_=function(indexDefinition){if(indexDefinition===KEY_INDEX){return null;}else{return this.indexMap_.get(indexDefinition.toString());}};ChildrenNode.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/;return ChildrenNode;}();var MaxNode=/** @class */function(_super){__extends(MaxNode,_super);function MaxNode(){return _super.call(this,new SortedMap(NAME_COMPARATOR),ChildrenNode.EMPTY_NODE,IndexMap.Default)||this;}MaxNode.prototype.compareTo=function(other){if(other===this){return 0;}else{return 1;}};MaxNode.prototype.equals=function(other){// Not that we every compare it, but MAX_NODE is only ever equal to itself\nreturn other===this;};MaxNode.prototype.getPriority=function(){return this;};MaxNode.prototype.getImmediateChild=function(childName){return ChildrenNode.EMPTY_NODE;};MaxNode.prototype.isEmpty=function(){return false;};return MaxNode;}(ChildrenNode);/**\r\n * Marker that will sort higher than any other snapshot.\r\n */var MAX_NODE$2=new MaxNode();Object.defineProperties(NamedNode,{MIN:{value:new NamedNode(MIN_NAME,ChildrenNode.EMPTY_NODE)},MAX:{value:new NamedNode(MAX_NAME,MAX_NODE$2)}});/**\r\n * Reference Extensions\r\n */KeyIndex.__EMPTY_NODE=ChildrenNode.EMPTY_NODE;LeafNode.__childrenNodeConstructor=ChildrenNode;setMaxNode(MAX_NODE$2);setMaxNode$1(MAX_NODE$2);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var USE_HINZE=true;/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json JSON to create a node for.\r\n * @param priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */function nodeFromJSON$1(json,priority){if(priority===void 0){priority=null;}if(json===null){return ChildrenNode.EMPTY_NODE;}if(typeof json==='object'&&'.priority'in json){priority=json['.priority'];}assert(priority===null||typeof priority==='string'||typeof priority==='number'||typeof priority==='object'&&'.sv'in priority,'Invalid priority type found: '+typeof priority);if(typeof json==='object'&&'.value'in json&&json['.value']!==null){json=json['.value'];}// Valid leaf nodes include non-objects or server-value wrapper objects\nif(typeof json!=='object'||'.sv'in json){var jsonLeaf=json;return new LeafNode(jsonLeaf,nodeFromJSON$1(priority));}if(!(json instanceof Array)&&USE_HINZE){var children_1=[];var childrenHavePriority_1=false;var hinzeJsonObj=json;each(hinzeJsonObj,function(key,child){if(key.substring(0,1)!=='.'){// Ignore metadata nodes\nvar childNode=nodeFromJSON$1(child);if(!childNode.isEmpty()){childrenHavePriority_1=childrenHavePriority_1||!childNode.getPriority().isEmpty();children_1.push(new NamedNode(key,childNode));}}});if(children_1.length===0){return ChildrenNode.EMPTY_NODE;}var childSet=buildChildSet(children_1,NAME_ONLY_COMPARATOR,function(namedNode){return namedNode.name;},NAME_COMPARATOR);if(childrenHavePriority_1){var sortedChildSet=buildChildSet(children_1,PRIORITY_INDEX.getCompare());return new ChildrenNode(childSet,nodeFromJSON$1(priority),new IndexMap({'.priority':sortedChildSet},{'.priority':PRIORITY_INDEX}));}else{return new ChildrenNode(childSet,nodeFromJSON$1(priority),IndexMap.Default);}}else{var node_1=ChildrenNode.EMPTY_NODE;each(json,function(key,childData){if(contains(json,key)){if(key.substring(0,1)!=='.'){// ignore metadata nodes.\nvar childNode=nodeFromJSON$1(childData);if(childNode.isLeafNode()||!childNode.isEmpty()){node_1=node_1.updateImmediateChild(key,childNode);}}}});return node_1.updatePriority(nodeFromJSON$1(priority));}}setNodeFromJSON(nodeFromJSON$1);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PathIndex=/** @class */function(_super){__extends(PathIndex,_super);function PathIndex(indexPath_){var _this=_super.call(this)||this;_this.indexPath_=indexPath_;assert(!pathIsEmpty(indexPath_)&&pathGetFront(indexPath_)!=='.priority',\"Can't create PathIndex with empty path or .priority key\");return _this;}PathIndex.prototype.extractChild=function(snap){return snap.getChild(this.indexPath_);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.isDefinedOn=function(node){return!node.getChild(this.indexPath_).isEmpty();};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.compare=function(a,b){var aChild=this.extractChild(a.node);var bChild=this.extractChild(b.node);var indexCmp=aChild.compareTo(bChild);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,valueNode);return new NamedNode(name,node);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.maxPost=function(){var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,MAX_NODE$2);return new NamedNode(MAX_NAME,node);};/**\r\n     * @inheritDoc\r\n     */PathIndex.prototype.toString=function(){return pathSlice(this.indexPath_,0).join('/');};return PathIndex;}(Index);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ValueIndex=/** @class */function(_super){__extends(ValueIndex,_super);function ValueIndex(){return _super!==null&&_super.apply(this,arguments)||this;}/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.compare=function(a,b){var indexCmp=a.node.compareTo(b.node);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.isDefinedOn=function(node){return true;};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.indexedValueChanged=function(oldNode,newNode){return!oldNode.equals(newNode);};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;};/**\r\n     * @inheritDoc\r\n     */ValueIndex.prototype.maxPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MAX;};ValueIndex.prototype.makePost=function(indexValue,name){var valueNode=nodeFromJSON$1(indexValue);return new NamedNode(name,valueNode);};/**\r\n     * @return String representation for inclusion in a query spec\r\n     */ValueIndex.prototype.toString=function(){return'.value';};return ValueIndex;}(Index);var VALUE_INDEX=new ValueIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Modeled after base64 web-safe chars, but ordered by ASCII.\nvar PUSH_CHARS='-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';var MIN_PUSH_CHAR='-';var MAX_PUSH_CHAR='z';var MAX_KEY_LEN=786;/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */var nextPushId=function(){// Timestamp of last push, used to prevent local collisions if you push twice\n// in one ms.\nvar lastPushTime=0;// We generate 72-bits of randomness which get turned into 12 characters and\n// appended to the timestamp to prevent collisions with other clients. We\n// store the last characters we generated because in the event of a collision,\n// we'll use those same characters except \"incremented\" by one.\nvar lastRandChars=[];return function(now){var duplicateTime=now===lastPushTime;lastPushTime=now;var i;var timeStampChars=new Array(8);for(i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);// NOTE: Can't use << here because javascript will convert to int and lose\n// the upper bits.\nnow=Math.floor(now/64);}assert(now===0,'Cannot push at time == 0');var id=timeStampChars.join('');if(!duplicateTime){for(i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64);}}else{// If the timestamp hasn't changed since last push, use the same random\n// number, except incremented by 1.\nfor(i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0;}lastRandChars[i]++;}for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}assert(id.length===20,'nextPushId: Length should be 20.');return id;};}();var successor=function(key){if(key===''+INTEGER_32_MAX){// See https://firebase.google.com/docs/database/web/lists-of-data#data-order\nreturn MIN_PUSH_CHAR;}var keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt+1);}var next=new Array(key.length);for(var i_1=0;i_1<next.length;i_1++){next[i_1]=key.charAt(i_1);}if(next.length<MAX_KEY_LEN){next.push(MIN_PUSH_CHAR);return next.join('');}var i=next.length-1;while(i>=0&&next[i]===MAX_PUSH_CHAR){i--;}// `successor` was called on the largest possible key, so return the\n// MAX_NAME, which sorts larger than all keys.\nif(i===-1){return MAX_NAME;}var source=next[i];var sourcePlusOne=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source)+1);next[i]=sourcePlusOne;return next.slice(0,i+1).join('');};// `key` is assumed to be non-empty.\nvar predecessor=function(key){if(key===''+INTEGER_32_MIN){return MIN_NAME;}var keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt-1);}var next=new Array(key.length);for(var i=0;i<next.length;i++){next[i]=key.charAt(i);}// If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n// smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n// than that, `predecessor(predecessor(key))`, is\n//\n// `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n//   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n//\n// analogous to increment/decrement for base-10 integers.\n//\n// This works because lexigographic comparison works character-by-character,\n// using length as a tie-breaker if one key is a prefix of the other.\nif(next[next.length-1]===MIN_PUSH_CHAR){if(next.length===1){// See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\nreturn''+INTEGER_32_MAX;}delete next[next.length-1];return next.join('');}// Replace the last character with it's immediate predecessor, and\n// fill the suffix of the key with MAX_PUSH_CHAR. This is the\n// lexicographically largest possible key smaller than `key`.\nnext[next.length-1]=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length-1])-1);return next.join('')+MAX_PUSH_CHAR.repeat(MAX_KEY_LEN-next.length);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function changeValue(snapshotNode){return{type:\"value\"/* VALUE */,snapshotNode:snapshotNode};}function changeChildAdded(childName,snapshotNode){return{type:\"child_added\"/* CHILD_ADDED */,snapshotNode:snapshotNode,childName:childName};}function changeChildRemoved(childName,snapshotNode){return{type:\"child_removed\"/* CHILD_REMOVED */,snapshotNode:snapshotNode,childName:childName};}function changeChildChanged(childName,snapshotNode,oldSnap){return{type:\"child_changed\"/* CHILD_CHANGED */,snapshotNode:snapshotNode,childName:childName,oldSnap:oldSnap};}function changeChildMoved(childName,snapshotNode){return{type:\"child_moved\"/* CHILD_MOVED */,snapshotNode:snapshotNode,childName:childName};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */var IndexedFilter=/** @class */function(){function IndexedFilter(index_){this.index_=index_;}IndexedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){assert(snap.isIndexed(this.index_),'A node must be indexed if only a child is updated');var oldChild=snap.getImmediateChild(key);// Check if anything actually changed.\nif(oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))){// There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n// In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n// to avoid treating these cases as \"nothing changed.\"\nif(oldChild.isEmpty()===newChild.isEmpty()){// Nothing changed.\n// This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n//assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\nreturn snap;}}if(optChangeAccumulator!=null){if(newChild.isEmpty()){if(snap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,oldChild));}else{assert(snap.isLeafNode(),'A child remove without an old child only makes sense on a leaf node');}}else if(oldChild.isEmpty()){optChangeAccumulator.trackChildChange(changeChildAdded(key,newChild));}else{optChangeAccumulator.trackChildChange(changeChildChanged(key,newChild,oldChild));}}if(snap.isLeafNode()&&newChild.isEmpty()){return snap;}else{// Make sure the node is indexed\nreturn snap.updateImmediateChild(key,newChild).withIndex(this.index_);}};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(optChangeAccumulator!=null){if(!oldSnap.isLeafNode()){oldSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!newSnap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,childNode));}});}if(!newSnap.isLeafNode()){newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(oldSnap.hasChild(key)){var oldChild=oldSnap.getImmediateChild(key);if(!oldChild.equals(childNode)){optChangeAccumulator.trackChildChange(changeChildChanged(key,childNode,oldChild));}}else{optChangeAccumulator.trackChildChange(changeChildAdded(key,childNode));}});}}return newSnap.withIndex(this.index_);};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.updatePriority=function(oldSnap,newPriority){if(oldSnap.isEmpty()){return ChildrenNode.EMPTY_NODE;}else{return oldSnap.updatePriority(newPriority);}};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.filtersNodes=function(){return false;};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.getIndexedFilter=function(){return this;};/**\r\n     * @inheritDoc\r\n     */IndexedFilter.prototype.getIndex=function(){return this.index_;};return IndexedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */var RangedFilter=/** @class */function(){function RangedFilter(params){this.indexedFilter_=new IndexedFilter(params.getIndex());this.index_=params.getIndex();this.startPost_=RangedFilter.getStartPost_(params);this.endPost_=RangedFilter.getEndPost_(params);}RangedFilter.prototype.getStartPost=function(){return this.startPost_;};RangedFilter.prototype.getEndPost=function(){return this.endPost_;};RangedFilter.prototype.matches=function(node){return this.index_.compare(this.getStartPost(),node)<=0&&this.index_.compare(node,this.getEndPost())<=0;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}return this.indexedFilter_.updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){if(newSnap.isLeafNode()){// Make sure we have a children node with the correct index, not a leaf node;\nnewSnap=ChildrenNode.EMPTY_NODE;}var filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var self=this;newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!self.matches(new NamedNode(key,childNode))){filtered=filtered.updateImmediateChild(key,ChildrenNode.EMPTY_NODE);}});return this.indexedFilter_.updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.filtersNodes=function(){return true;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.getIndexedFilter=function(){return this.indexedFilter_;};/**\r\n     * @inheritDoc\r\n     */RangedFilter.prototype.getIndex=function(){return this.index_;};RangedFilter.getStartPost_=function(params){if(params.hasStart()){var startName=params.getIndexStartName();return params.getIndex().makePost(params.getIndexStartValue(),startName);}else{return params.getIndex().minPost();}};RangedFilter.getEndPost_=function(params){if(params.hasEnd()){var endName=params.getIndexEndName();return params.getIndex().makePost(params.getIndexEndValue(),endName);}else{return params.getIndex().maxPost();}};return RangedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */var LimitedFilter=/** @class */function(){function LimitedFilter(params){this.rangedFilter_=new RangedFilter(params);this.index_=params.getIndex();this.limit_=params.getLimit();this.reverse_=!params.isViewFromLeft();}/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updateChild=function(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.rangedFilter_.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}if(snap.getImmediateChild(key).equals(newChild)){// No change\nreturn snap;}else if(snap.numChildren()<this.limit_){return this.rangedFilter_.getIndexedFilter().updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}else{return this.fullLimitUpdateChild_(snap,key,newChild,source,optChangeAccumulator);}};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updateFullNode=function(oldSnap,newSnap,optChangeAccumulator){var filtered;if(newSnap.isLeafNode()||newSnap.isEmpty()){// Make sure we have a children node with the correct index, not a leaf node;\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);}else{if(this.limit_*2<newSnap.numChildren()&&newSnap.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate\nvar iterator=void 0;if(this.reverse_){iterator=newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_);}else{iterator=newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);}var count=0;while(iterator.hasNext()&&count<this.limit_){var next=iterator.getNext();var inRange=void 0;if(this.reverse_){inRange=this.index_.compare(this.rangedFilter_.getStartPost(),next)<=0;}else{inRange=this.index_.compare(next,this.rangedFilter_.getEndPost())<=0;}if(inRange){filtered=filtered.updateImmediateChild(next.name,next.node);count++;}else{// if we have reached the end post, we cannot keep adding elemments\nbreak;}}}else{// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\nfiltered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var startPost=void 0;var endPost=void 0;var cmp=void 0;var iterator=void 0;if(this.reverse_){iterator=filtered.getReverseIterator(this.index_);startPost=this.rangedFilter_.getEndPost();endPost=this.rangedFilter_.getStartPost();var indexCompare_1=this.index_.getCompare();cmp=function(a,b){return indexCompare_1(b,a);};}else{iterator=filtered.getIterator(this.index_);startPost=this.rangedFilter_.getStartPost();endPost=this.rangedFilter_.getEndPost();cmp=this.index_.getCompare();}var count=0;var foundStartPost=false;while(iterator.hasNext()){var next=iterator.getNext();if(!foundStartPost&&cmp(startPost,next)<=0){// start adding\nfoundStartPost=true;}var inRange=foundStartPost&&count<this.limit_&&cmp(next,endPost)<=0;if(inRange){count++;}else{filtered=filtered.updateImmediateChild(next.name,ChildrenNode.EMPTY_NODE);}}}}return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap,filtered,optChangeAccumulator);};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.updatePriority=function(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.filtersNodes=function(){return true;};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter();};/**\r\n     * @inheritDoc\r\n     */LimitedFilter.prototype.getIndex=function(){return this.index_;};LimitedFilter.prototype.fullLimitUpdateChild_=function(snap,childKey,childSnap,source,changeAccumulator){// TODO: rename all cache stuff etc to general snap terminology\nvar cmp;if(this.reverse_){var indexCmp_1=this.index_.getCompare();cmp=function(a,b){return indexCmp_1(b,a);};}else{cmp=this.index_.getCompare();}var oldEventCache=snap;assert(oldEventCache.numChildren()===this.limit_,'');var newChildNamedNode=new NamedNode(childKey,childSnap);var windowBoundary=this.reverse_?oldEventCache.getFirstChild(this.index_):oldEventCache.getLastChild(this.index_);var inRange=this.rangedFilter_.matches(newChildNamedNode);if(oldEventCache.hasChild(childKey)){var oldChildSnap=oldEventCache.getImmediateChild(childKey);var nextChild=source.getChildAfterChild(this.index_,windowBoundary,this.reverse_);while(nextChild!=null&&(nextChild.name===childKey||oldEventCache.hasChild(nextChild.name))){// There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n// been applied to the limited filter yet. Ignore this next child which will be updated later in\n// the limited filter...\nnextChild=source.getChildAfterChild(this.index_,nextChild,this.reverse_);}var compareNext=nextChild==null?1:cmp(nextChild,newChildNamedNode);var remainsInWindow=inRange&&!childSnap.isEmpty()&&compareNext>=0;if(remainsInWindow){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildChanged(childKey,childSnap,oldChildSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap);}else{if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(childKey,oldChildSnap));}var newEventCache=oldEventCache.updateImmediateChild(childKey,ChildrenNode.EMPTY_NODE);var nextChildInRange=nextChild!=null&&this.rangedFilter_.matches(nextChild);if(nextChildInRange){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildAdded(nextChild.name,nextChild.node));}return newEventCache.updateImmediateChild(nextChild.name,nextChild.node);}else{return newEventCache;}}}else if(childSnap.isEmpty()){// we're deleting a node, but it was not in the window, so ignore it\nreturn snap;}else if(inRange){if(cmp(windowBoundary,newChildNamedNode)>=0){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name,windowBoundary.node));changeAccumulator.trackChildChange(changeChildAdded(childKey,childSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap).updateImmediateChild(windowBoundary.name,ChildrenNode.EMPTY_NODE);}else{return snap;}}else{return snap;}};return LimitedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */var QueryParams=/** @class */function(){function QueryParams(){this.limitSet_=false;this.startSet_=false;this.startNameSet_=false;this.startAfterSet_=false;this.endSet_=false;this.endNameSet_=false;this.endBeforeSet_=false;this.limit_=0;this.viewFrom_='';this.indexStartValue_=null;this.indexStartName_='';this.indexEndValue_=null;this.indexEndName_='';this.index_=PRIORITY_INDEX;}QueryParams.prototype.hasStart=function(){return this.startSet_;};QueryParams.prototype.hasStartAfter=function(){return this.startAfterSet_;};QueryParams.prototype.hasEndBefore=function(){return this.endBeforeSet_;};/**\r\n     * @return True if it would return from left.\r\n     */QueryParams.prototype.isViewFromLeft=function(){if(this.viewFrom_===''){// limit(), rather than limitToFirst or limitToLast was called.\n// This means that only one of startSet_ and endSet_ is true. Use them\n// to calculate which side of the view to anchor to. If neither is set,\n// anchor to the end.\nreturn this.startSet_;}else{return this.viewFrom_===\"l\"/* VIEW_FROM_LEFT */;}};/**\r\n     * Only valid to call if hasStart() returns true\r\n     */QueryParams.prototype.getIndexStartValue=function(){assert(this.startSet_,'Only valid if start has been set');return this.indexStartValue_;};/**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */QueryParams.prototype.getIndexStartName=function(){assert(this.startSet_,'Only valid if start has been set');if(this.startNameSet_){return this.indexStartName_;}else{return MIN_NAME;}};QueryParams.prototype.hasEnd=function(){return this.endSet_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */QueryParams.prototype.getIndexEndValue=function(){assert(this.endSet_,'Only valid if end has been set');return this.indexEndValue_;};/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */QueryParams.prototype.getIndexEndName=function(){assert(this.endSet_,'Only valid if end has been set');if(this.endNameSet_){return this.indexEndName_;}else{return MAX_NAME;}};QueryParams.prototype.hasLimit=function(){return this.limitSet_;};/**\r\n     * @return True if a limit has been set and it has been explicitly anchored\r\n     */QueryParams.prototype.hasAnchoredLimit=function(){return this.limitSet_&&this.viewFrom_!=='';};/**\r\n     * Only valid to call if hasLimit() returns true\r\n     */QueryParams.prototype.getLimit=function(){assert(this.limitSet_,'Only valid if limit has been set');return this.limit_;};QueryParams.prototype.getIndex=function(){return this.index_;};QueryParams.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_);};QueryParams.prototype.isDefault=function(){return this.loadsAllData()&&this.index_===PRIORITY_INDEX;};QueryParams.prototype.copy=function(){var copy=new QueryParams();copy.limitSet_=this.limitSet_;copy.limit_=this.limit_;copy.startSet_=this.startSet_;copy.indexStartValue_=this.indexStartValue_;copy.startNameSet_=this.startNameSet_;copy.indexStartName_=this.indexStartName_;copy.endSet_=this.endSet_;copy.indexEndValue_=this.indexEndValue_;copy.endNameSet_=this.endNameSet_;copy.indexEndName_=this.indexEndName_;copy.index_=this.index_;copy.viewFrom_=this.viewFrom_;return copy;};return QueryParams;}();function queryParamsGetNodeFilter(queryParams){if(queryParams.loadsAllData()){return new IndexedFilter(queryParams.getIndex());}else if(queryParams.hasLimit()){return new LimitedFilter(queryParams);}else{return new RangedFilter(queryParams);}}function queryParamsLimitToFirst(queryParams,newLimit){var newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"l\"/* VIEW_FROM_LEFT */;return newParams;}function queryParamsLimitToLast(queryParams,newLimit){var newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"r\"/* VIEW_FROM_RIGHT */;return newParams;}function queryParamsStartAt(queryParams,indexValue,key){var newParams=queryParams.copy();newParams.startSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexStartValue_=indexValue;if(key!=null){newParams.startNameSet_=true;newParams.indexStartName_=key;}else{newParams.startNameSet_=false;newParams.indexStartName_='';}return newParams;}function queryParamsStartAfter(queryParams,indexValue,key){var params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=successor(indexValue);}params=queryParamsStartAt(queryParams,indexValue,key);}else{var childKey=void 0;if(key==null){childKey=MAX_NAME;}else{childKey=successor(key);}params=queryParamsStartAt(queryParams,indexValue,childKey);}params.startAfterSet_=true;return params;}function queryParamsEndAt(queryParams,indexValue,key){var newParams=queryParams.copy();newParams.endSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexEndValue_=indexValue;if(key!==undefined){newParams.endNameSet_=true;newParams.indexEndName_=key;}else{newParams.endNameSet_=false;newParams.indexEndName_='';}return newParams;}function queryParamsEndBefore(queryParams,indexValue,key){var childKey;var params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=predecessor(indexValue);}params=queryParamsEndAt(queryParams,indexValue,key);}else{if(key==null){childKey=MIN_NAME;}else{childKey=predecessor(key);}params=queryParamsEndAt(queryParams,indexValue,childKey);}params.endBeforeSet_=true;return params;}function queryParamsOrderBy(queryParams,index){var newParams=queryParams.copy();newParams.index_=index;return newParams;}/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @return query string parameters\r\n */function queryParamsToRestQueryStringParameters(queryParams){var qs={};if(queryParams.isDefault()){return qs;}var orderBy;if(queryParams.index_===PRIORITY_INDEX){orderBy=\"$priority\"/* PRIORITY_INDEX */;}else if(queryParams.index_===VALUE_INDEX){orderBy=\"$value\"/* VALUE_INDEX */;}else if(queryParams.index_===KEY_INDEX){orderBy=\"$key\"/* KEY_INDEX */;}else{assert(queryParams.index_ instanceof PathIndex,'Unrecognized index type!');orderBy=queryParams.index_.toString();}qs[\"orderBy\"/* ORDER_BY */]=stringify(orderBy);if(queryParams.startSet_){qs[\"startAt\"/* START_AT */]=stringify(queryParams.indexStartValue_);if(queryParams.startNameSet_){qs[\"startAt\"/* START_AT */]+=','+stringify(queryParams.indexStartName_);}}if(queryParams.endSet_){qs[\"endAt\"/* END_AT */]=stringify(queryParams.indexEndValue_);if(queryParams.endNameSet_){qs[\"endAt\"/* END_AT */]+=','+stringify(queryParams.indexEndName_);}}if(queryParams.limitSet_){if(queryParams.isViewFromLeft()){qs[\"limitToFirst\"/* LIMIT_TO_FIRST */]=queryParams.limit_;}else{qs[\"limitToLast\"/* LIMIT_TO_LAST */]=queryParams.limit_;}}return qs;}function queryParamsGetQueryObject(queryParams){var obj={};if(queryParams.startSet_){obj[\"sp\"/* INDEX_START_VALUE */]=queryParams.indexStartValue_;if(queryParams.startNameSet_){obj[\"sn\"/* INDEX_START_NAME */]=queryParams.indexStartName_;}}if(queryParams.endSet_){obj[\"ep\"/* INDEX_END_VALUE */]=queryParams.indexEndValue_;if(queryParams.endNameSet_){obj[\"en\"/* INDEX_END_NAME */]=queryParams.indexEndName_;}}if(queryParams.limitSet_){obj[\"l\"/* LIMIT */]=queryParams.limit_;var viewFrom=queryParams.viewFrom_;if(viewFrom===''){if(queryParams.isViewFromLeft()){viewFrom=\"l\"/* VIEW_FROM_LEFT */;}else{viewFrom=\"r\"/* VIEW_FROM_RIGHT */;}}obj[\"vf\"/* VIEW_FROM */]=viewFrom;}// For now, priority index is the default, so we only specify if it's some other index\nif(queryParams.index_!==PRIORITY_INDEX){obj[\"i\"/* INDEX */]=queryParams.index_.toString();}return obj;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */var ReadonlyRestClient=/** @class */function(_super){__extends(ReadonlyRestClient,_super);/**\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */function ReadonlyRestClient(repoInfo_,onDataUpdate_,authTokenProvider_){var _this=_super.call(this)||this;_this.repoInfo_=repoInfo_;_this.onDataUpdate_=onDataUpdate_;_this.authTokenProvider_=authTokenProvider_;/** @private {function(...[*])} */_this.log_=logWrapper('p:rest:');/**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */_this.listens_={};return _this;}ReadonlyRestClient.prototype.reportStats=function(stats){throw new Error('Method not implemented.');};ReadonlyRestClient.getListenId_=function(query,tag){if(tag!==undefined){return'tag$'+tag;}else{assert(query.getQueryParams().isDefault(),\"should have a tag if it's not a default query.\");return query.path.toString();}};/** @inheritDoc */ReadonlyRestClient.prototype.listen=function(query,currentHashFn,tag,onComplete){var _this=this;var pathString=query.path.toString();this.log_('Listen called for '+pathString+' '+query.queryIdentifier());// Mark this listener so we can tell if it's removed.\nvar listenId=ReadonlyRestClient.getListenId_(query,tag);var thisListen={};this.listens_[listenId]=thisListen;var queryStringParameters=queryParamsToRestQueryStringParameters(query.getQueryParams());this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,tag);}if(safeGet(_this.listens_,listenId)===thisListen){var status_1;if(!error){status_1='ok';}else if(error===401){status_1='permission_denied';}else{status_1='rest_error:'+error;}onComplete(status_1,null);}});};/** @inheritDoc */ReadonlyRestClient.prototype.unlisten=function(query,tag){var listenId=ReadonlyRestClient.getListenId_(query,tag);delete this.listens_[listenId];};ReadonlyRestClient.prototype.get=function(query){var _this=this;var queryStringParameters=queryParamsToRestQueryStringParameters(query.getQueryParams());var pathString=query.path.toString();var deferred=new Deferred();this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this.onDataUpdate_(pathString,data,/*isMerge=*/false,/*tag=*/null);deferred.resolve(data);}else{deferred.reject(new Error(data));}});return deferred.promise;};/** @inheritDoc */ReadonlyRestClient.prototype.refreshAuthToken=function(token){// no-op since we just always call getToken.\n};/**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */ReadonlyRestClient.prototype.restRequest_=function(pathString,queryStringParameters,callback){var _this=this;if(queryStringParameters===void 0){queryStringParameters={};}queryStringParameters['format']='export';this.authTokenProvider_.getToken(/*forceRefresh=*/false).then(function(authTokenData){var authToken=authTokenData&&authTokenData.accessToken;if(authToken){queryStringParameters['auth']=authToken;}var url=(_this.repoInfo_.secure?'https://':'http://')+_this.repoInfo_.host+pathString+'?'+'ns='+_this.repoInfo_.namespace+querystring(queryStringParameters);_this.log_('Sending REST request for '+url);var xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(callback&&xhr.readyState===4){_this.log_('REST Response for '+url+' received. status:',xhr.status,'response:',xhr.responseText);var res=null;if(xhr.status>=200&&xhr.status<300){try{res=jsonEval(xhr.responseText);}catch(e){warn('Failed to parse JSON response for '+url+': '+xhr.responseText);}callback(null,res);}else{// 401 and 404 are expected.\nif(xhr.status!==401&&xhr.status!==404){warn('Got unsuccessful REST response for '+url+' Status: '+xhr.status);}callback(xhr.status);}callback=null;}};xhr.open('GET',url,/*asynchronous=*/true);xhr.send();});};return ReadonlyRestClient;}(ServerActions);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */var SnapshotHolder=/** @class */function(){function SnapshotHolder(){this.rootNode_=ChildrenNode.EMPTY_NODE;}SnapshotHolder.prototype.getNode=function(path){return this.rootNode_.getChild(path);};SnapshotHolder.prototype.updateSnapshot=function(path,newSnapshotNode){this.rootNode_=this.rootNode_.updateChild(path,newSnapshotNode);};return SnapshotHolder;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newSparseSnapshotTree(){return{value:null,children:new Map()};}/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path Path to look up snapshot for.\r\n * @param data The new data, or null.\r\n */function sparseSnapshotTreeRemember(sparseSnapshotTree,path,data){if(pathIsEmpty(path)){sparseSnapshotTree.value=data;sparseSnapshotTree.children.clear();}else if(sparseSnapshotTree.value!==null){sparseSnapshotTree.value=sparseSnapshotTree.value.updateChild(path,data);}else{var childKey=pathGetFront(path);if(!sparseSnapshotTree.children.has(childKey)){sparseSnapshotTree.children.set(childKey,newSparseSnapshotTree());}var child=sparseSnapshotTree.children.get(childKey);path=pathPopFront(path);sparseSnapshotTreeRemember(child,path,data);}}/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path Path to look up snapshot for.\r\n * @return True if this node should now be removed.\r\n */function sparseSnapshotTreeForget(sparseSnapshotTree,path){if(pathIsEmpty(path)){sparseSnapshotTree.value=null;sparseSnapshotTree.children.clear();return true;}else{if(sparseSnapshotTree.value!==null){if(sparseSnapshotTree.value.isLeafNode()){// We're trying to forget a node that doesn't exist\nreturn false;}else{var value=sparseSnapshotTree.value;sparseSnapshotTree.value=null;value.forEachChild(PRIORITY_INDEX,function(key,tree){sparseSnapshotTreeRemember(sparseSnapshotTree,new Path(key),tree);});return sparseSnapshotTreeForget(sparseSnapshotTree,path);}}else if(sparseSnapshotTree.children.size>0){var childKey=pathGetFront(path);path=pathPopFront(path);if(sparseSnapshotTree.children.has(childKey)){var safeToRemove=sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey),path);if(safeToRemove){sparseSnapshotTree.children.delete(childKey);}}return sparseSnapshotTree.children.size===0;}else{return true;}}}/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath Path to look up node for.\r\n * @param func The function to invoke for each tree.\r\n */function sparseSnapshotTreeForEachTree(sparseSnapshotTree,prefixPath,func){if(sparseSnapshotTree.value!==null){func(prefixPath,sparseSnapshotTree.value);}else{sparseSnapshotTreeForEachChild(sparseSnapshotTree,function(key,tree){var path=new Path(prefixPath.toString()+'/'+key);sparseSnapshotTreeForEachTree(tree,path,func);});}}/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func The function to invoke for each child.\r\n */function sparseSnapshotTreeForEachChild(sparseSnapshotTree,func){sparseSnapshotTree.children.forEach(function(tree,key){func(key,tree);});}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n */var StatsListener=/** @class */function(){function StatsListener(collection_){this.collection_=collection_;this.last_=null;}StatsListener.prototype.get=function(){var newStats=this.collection_.get();var delta=__assign({},newStats);if(this.last_){each(this.last_,function(stat,value){delta[stat]=delta[stat]-value;});}this.last_=newStats;return delta;};return StatsListener;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME=10*1000;var FIRST_STATS_MAX_TIME=30*1000;// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL=5*60*1000;var StatsReporter=/** @class */function(){/**\r\n     * @param collection\r\n     * @param server_\r\n     */function StatsReporter(collection,server_){this.server_=server_;this.statsToReport_={};this.statsListener_=new StatsListener(collection);var timeout=FIRST_STATS_MIN_TIME+(FIRST_STATS_MAX_TIME-FIRST_STATS_MIN_TIME)*Math.random();setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(timeout));}StatsReporter.prototype.reportStats_=function(){var _this=this;var stats=this.statsListener_.get();var reportedStats={};var haveStatsToReport=false;each(stats,function(stat,value){if(value>0&&contains(_this.statsToReport_,stat)){reportedStats[stat]=value;haveStatsToReport=true;}});if(haveStatsToReport){this.server_.reportStats(reportedStats);}// queue our next run.\nsetTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(Math.random()*2*REPORT_STATS_INTERVAL));};return StatsReporter;}();function statsReporterIncludeStat(reporter,stat){reporter.statsToReport_[stat]=true;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n *\r\n * @enum\r\n */var OperationType;(function(OperationType){OperationType[OperationType[\"OVERWRITE\"]=0]=\"OVERWRITE\";OperationType[OperationType[\"MERGE\"]=1]=\"MERGE\";OperationType[OperationType[\"ACK_USER_WRITE\"]=2]=\"ACK_USER_WRITE\";OperationType[OperationType[\"LISTEN_COMPLETE\"]=3]=\"LISTEN_COMPLETE\";})(OperationType||(OperationType={}));function newOperationSourceUser(){return{fromUser:true,fromServer:false,queryId:null,tagged:false};}function newOperationSourceServer(){return{fromUser:false,fromServer:true,queryId:null,tagged:false};}function newOperationSourceServerTaggedQuery(queryId){return{fromUser:false,fromServer:true,queryId:queryId,tagged:true};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var AckUserWrite=/** @class */function(){/**\r\n     * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     */function AckUserWrite(/** @inheritDoc */path,/** @inheritDoc */affectedTree,/** @inheritDoc */revert){this.path=path;this.affectedTree=affectedTree;this.revert=revert;/** @inheritDoc */this.type=OperationType.ACK_USER_WRITE;/** @inheritDoc */this.source=newOperationSourceUser();}/**\r\n     * @inheritDoc\r\n     */AckUserWrite.prototype.operationForChild=function(childName){if(!pathIsEmpty(this.path)){assert(pathGetFront(this.path)===childName,'operationForChild called for unrelated child.');return new AckUserWrite(pathPopFront(this.path),this.affectedTree,this.revert);}else if(this.affectedTree.value!=null){assert(this.affectedTree.children.isEmpty(),'affectedTree should not have overlapping affected paths.');// All child locations are affected as well; just return same operation.\nreturn this;}else{var childTree=this.affectedTree.subtree(new Path(childName));return new AckUserWrite(newEmptyPath(),childTree,this.revert);}};return AckUserWrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ListenComplete=/** @class */function(){function ListenComplete(source,path){this.source=source;this.path=path;/** @inheritDoc */this.type=OperationType.LISTEN_COMPLETE;}ListenComplete.prototype.operationForChild=function(childName){if(pathIsEmpty(this.path)){return new ListenComplete(this.source,newEmptyPath());}else{return new ListenComplete(this.source,pathPopFront(this.path));}};return ListenComplete;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Overwrite=/** @class */function(){function Overwrite(source,path,snap){this.source=source;this.path=path;this.snap=snap;/** @inheritDoc */this.type=OperationType.OVERWRITE;}Overwrite.prototype.operationForChild=function(childName){if(pathIsEmpty(this.path)){return new Overwrite(this.source,newEmptyPath(),this.snap.getImmediateChild(childName));}else{return new Overwrite(this.source,pathPopFront(this.path),this.snap);}};return Overwrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Merge=/** @class */function(){function Merge(/** @inheritDoc */source,/** @inheritDoc */path,/** @inheritDoc */children){this.source=source;this.path=path;this.children=children;/** @inheritDoc */this.type=OperationType.MERGE;}/**\r\n     * @inheritDoc\r\n     */Merge.prototype.operationForChild=function(childName){if(pathIsEmpty(this.path)){var childTree=this.children.subtree(new Path(childName));if(childTree.isEmpty()){// This child is unaffected\nreturn null;}else if(childTree.value){// We have a snapshot for the child in question.  This becomes an overwrite of the child.\nreturn new Overwrite(this.source,newEmptyPath(),childTree.value);}else{// This is a merge at a deeper level\nreturn new Merge(this.source,newEmptyPath(),childTree);}}else{assert(pathGetFront(this.path)===childName,\"Can't get a merge for a child not on the path of the operation\");return new Merge(this.source,pathPopFront(this.path),this.children);}};/**\r\n     * @inheritDoc\r\n     */Merge.prototype.toString=function(){return'Operation('+this.path+': '+this.source.toString()+' merge: '+this.children.toString()+')';};return Merge;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */var CacheNode=/** @class */function(){function CacheNode(node_,fullyInitialized_,filtered_){this.node_=node_;this.fullyInitialized_=fullyInitialized_;this.filtered_=filtered_;}/**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */CacheNode.prototype.isFullyInitialized=function(){return this.fullyInitialized_;};/**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */CacheNode.prototype.isFiltered=function(){return this.filtered_;};CacheNode.prototype.isCompleteForPath=function(path){if(pathIsEmpty(path)){return this.isFullyInitialized()&&!this.filtered_;}var childKey=pathGetFront(path);return this.isCompleteForChild(childKey);};CacheNode.prototype.isCompleteForChild=function(key){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(key);};CacheNode.prototype.getNode=function(){return this.node_;};return CacheNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */var EventGenerator=/** @class */function(){function EventGenerator(query_){this.query_=query_;this.index_=this.query_.getQueryParams().getIndex();}return EventGenerator;}();/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */function eventGeneratorGenerateEventsForChanges(eventGenerator,changes,eventCache,eventRegistrations){var events=[];var moves=[];changes.forEach(function(change){if(change.type===\"child_changed\"/* CHILD_CHANGED */&&eventGenerator.index_.indexedValueChanged(change.oldSnap,change.snapshotNode)){moves.push(changeChildMoved(change.childName,change.snapshotNode));}});eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_removed\"/* CHILD_REMOVED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_added\"/* CHILD_ADDED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_moved\"/* CHILD_MOVED */,moves,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_changed\"/* CHILD_CHANGED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"value\"/* VALUE */,changes,eventRegistrations,eventCache);return events;}/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */function eventGeneratorGenerateEventsForType(eventGenerator,events,eventType,changes,registrations,eventCache){var filteredChanges=changes.filter(function(change){return change.type===eventType;});filteredChanges.sort(function(a,b){return eventGeneratorCompareChanges(eventGenerator,a,b);});filteredChanges.forEach(function(change){var materializedChange=eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache);registrations.forEach(function(registration){if(registration.respondsTo(change.type)){events.push(registration.createEvent(materializedChange,eventGenerator.query_));}});});}function eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache){if(change.type==='value'||change.type==='child_removed'){return change;}else{change.prevName=eventCache.getPredecessorChildName(change.childName,change.snapshotNode,eventGenerator.index_);return change;}}function eventGeneratorCompareChanges(eventGenerator,a,b){if(a.childName==null||b.childName==null){throw assertionError('Should only compare child_ events.');}var aWrapped=new NamedNode(a.childName,a.snapshotNode);var bWrapped=new NamedNode(b.childName,b.snapshotNode);return eventGenerator.index_.compare(aWrapped,bWrapped);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewCache(eventCache,serverCache){return{eventCache:eventCache,serverCache:serverCache};}function viewCacheUpdateEventSnap(viewCache,eventSnap,complete,filtered){return newViewCache(new CacheNode(eventSnap,complete,filtered),viewCache.serverCache);}function viewCacheUpdateServerSnap(viewCache,serverSnap,complete,filtered){return newViewCache(viewCache.eventCache,new CacheNode(serverSnap,complete,filtered));}function viewCacheGetCompleteEventSnap(viewCache){return viewCache.eventCache.isFullyInitialized()?viewCache.eventCache.getNode():null;}function viewCacheGetCompleteServerSnap(viewCache){return viewCache.serverCache.isFullyInitialized()?viewCache.serverCache.getNode():null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var emptyChildrenSingleton;/**\r\n * Singleton empty children collection.\r\n *\r\n */var EmptyChildren=function(){if(!emptyChildrenSingleton){emptyChildrenSingleton=new SortedMap(stringCompare);}return emptyChildrenSingleton;};/**\r\n * A tree with immutable elements.\r\n */var ImmutableTree=/** @class */function(){function ImmutableTree(value,children){if(children===void 0){children=EmptyChildren();}this.value=value;this.children=children;}ImmutableTree.fromObject=function(obj){var tree=new ImmutableTree(null);each(obj,function(childPath,childSnap){tree=tree.set(new Path(childPath),childSnap);});return tree;};/**\r\n     * True if the value is empty and there are no children\r\n     */ImmutableTree.prototype.isEmpty=function(){return this.value===null&&this.children.isEmpty();};/**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath The remainder of the path\r\n     * @param predicate The predicate to satisfy to return a node\r\n     */ImmutableTree.prototype.findRootMostMatchingPathAndValue=function(relativePath,predicate){if(this.value!=null&&predicate(this.value)){return{path:newEmptyPath(),value:this.value};}else{if(pathIsEmpty(relativePath)){return null;}else{var front=pathGetFront(relativePath);var child=this.children.get(front);if(child!==null){var childExistingPathAndValue=child.findRootMostMatchingPathAndValue(pathPopFront(relativePath),predicate);if(childExistingPathAndValue!=null){var fullPath=pathChild(new Path(front),childExistingPathAndValue.path);return{path:fullPath,value:childExistingPathAndValue.value};}else{return null;}}else{return null;}}}};/**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */ImmutableTree.prototype.findRootMostValueAndPath=function(relativePath){return this.findRootMostMatchingPathAndValue(relativePath,function(){return true;});};/**\r\n     * @return The subtree at the given path\r\n     */ImmutableTree.prototype.subtree=function(relativePath){if(pathIsEmpty(relativePath)){return this;}else{var front=pathGetFront(relativePath);var childTree=this.children.get(front);if(childTree!==null){return childTree.subtree(pathPopFront(relativePath));}else{return new ImmutableTree(null);}}};/**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath Path to set value at.\r\n     * @param toSet Value to set.\r\n     * @return Resulting tree.\r\n     */ImmutableTree.prototype.set=function(relativePath,toSet){if(pathIsEmpty(relativePath)){return new ImmutableTree(toSet,this.children);}else{var front=pathGetFront(relativePath);var child=this.children.get(front)||new ImmutableTree(null);var newChild=child.set(pathPopFront(relativePath),toSet);var newChildren=this.children.insert(front,newChild);return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath Path to value to remove.\r\n     * @return Resulting tree.\r\n     */ImmutableTree.prototype.remove=function(relativePath){if(pathIsEmpty(relativePath)){if(this.children.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(null,this.children);}}else{var front=pathGetFront(relativePath);var child=this.children.get(front);if(child){var newChild=child.remove(pathPopFront(relativePath));var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}if(this.value===null&&newChildren.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(this.value,newChildren);}}else{return this;}}};/**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath Path to get value for.\r\n     * @return Value at path, or null.\r\n     */ImmutableTree.prototype.get=function(relativePath){if(pathIsEmpty(relativePath)){return this.value;}else{var front=pathGetFront(relativePath);var child=this.children.get(front);if(child){return child.get(pathPopFront(relativePath));}else{return null;}}};/**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath Path to replace subtree for.\r\n     * @param newTree New tree.\r\n     * @return Resulting tree.\r\n     */ImmutableTree.prototype.setTree=function(relativePath,newTree){if(pathIsEmpty(relativePath)){return newTree;}else{var front=pathGetFront(relativePath);var child=this.children.get(front)||new ImmutableTree(null);var newChild=child.setTree(pathPopFront(relativePath),newTree);var newChildren=void 0;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}return new ImmutableTree(this.value,newChildren);}};/**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */ImmutableTree.prototype.fold=function(fn){return this.fold_(newEmptyPath(),fn);};/**\r\n     * Recursive helper for public-facing fold() method\r\n     */ImmutableTree.prototype.fold_=function(pathSoFar,fn){var accum={};this.children.inorderTraversal(function(childKey,childTree){accum[childKey]=childTree.fold_(pathChild(pathSoFar,childKey),fn);});return fn(pathSoFar,this.value,accum);};/**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */ImmutableTree.prototype.findOnPath=function(path,f){return this.findOnPath_(path,newEmptyPath(),f);};ImmutableTree.prototype.findOnPath_=function(pathToFollow,pathSoFar,f){var result=this.value?f(pathSoFar,this.value):false;if(result){return result;}else{if(pathIsEmpty(pathToFollow)){return null;}else{var front=pathGetFront(pathToFollow);var nextChild=this.children.get(front);if(nextChild){return nextChild.findOnPath_(pathPopFront(pathToFollow),pathChild(pathSoFar,front),f);}else{return null;}}}};ImmutableTree.prototype.foreachOnPath=function(path,f){return this.foreachOnPath_(path,newEmptyPath(),f);};ImmutableTree.prototype.foreachOnPath_=function(pathToFollow,currentRelativePath,f){if(pathIsEmpty(pathToFollow)){return this;}else{if(this.value){f(currentRelativePath,this.value);}var front=pathGetFront(pathToFollow);var nextChild=this.children.get(front);if(nextChild){return nextChild.foreachOnPath_(pathPopFront(pathToFollow),pathChild(currentRelativePath,front),f);}else{return new ImmutableTree(null);}}};/**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */ImmutableTree.prototype.foreach=function(f){this.foreach_(newEmptyPath(),f);};ImmutableTree.prototype.foreach_=function(currentRelativePath,f){this.children.inorderTraversal(function(childName,childTree){childTree.foreach_(pathChild(currentRelativePath,childName),f);});if(this.value){f(currentRelativePath,this.value);}};ImmutableTree.prototype.foreachChild=function(f){this.children.inorderTraversal(function(childName,childTree){if(childTree.value){f(childName,childTree.value);}});};return ImmutableTree;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */var CompoundWrite=/** @class */function(){function CompoundWrite(writeTree_){this.writeTree_=writeTree_;}CompoundWrite.empty=function(){return new CompoundWrite(new ImmutableTree(null));};return CompoundWrite;}();function compoundWriteAddWrite(compoundWrite,path,node){if(pathIsEmpty(path)){return new CompoundWrite(new ImmutableTree(node));}else{var rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){var rootMostPath=rootmost.path;var value=rootmost.value;var relativePath=newRelativePath(rootMostPath,path);value=value.updateChild(relativePath,node);return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath,value));}else{var subtree=new ImmutableTree(node);var newWriteTree=compoundWrite.writeTree_.setTree(path,subtree);return new CompoundWrite(newWriteTree);}}}function compoundWriteAddWrites(compoundWrite,path,updates){var newWrite=compoundWrite;each(updates,function(childKey,node){newWrite=compoundWriteAddWrite(newWrite,pathChild(path,childKey),node);});return newWrite;}/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite The CompoundWrite to remove.\r\n * @param path The path at which a write and all deeper writes should be removed\r\n * @return The new CompoundWrite with the removed path\r\n */function compoundWriteRemoveWrite(compoundWrite,path){if(pathIsEmpty(path)){return CompoundWrite.empty();}else{var newWriteTree=compoundWrite.writeTree_.setTree(path,new ImmutableTree(null));return new CompoundWrite(newWriteTree);}}/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite The CompoundWrite to check.\r\n * @param path The path to check for\r\n * @return Whether there is a complete write at that path\r\n */function compoundWriteHasCompleteWrite(compoundWrite,path){return compoundWriteGetCompleteNode(compoundWrite,path)!=null;}/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite The CompoundWrite to get the node from.\r\n * @param path The path to get a complete write\r\n * @return The node if complete at that path, or null otherwise.\r\n */function compoundWriteGetCompleteNode(compoundWrite,path){var rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path,path));}else{return null;}}/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite The CompoundWrite to get children from.\r\n * @return A list of all complete children.\r\n */function compoundWriteGetCompleteChildren(compoundWrite){var children=[];var node=compoundWrite.writeTree_.value;if(node!=null){// If it's a leaf node, it has no children; so nothing to do.\nif(!node.isLeafNode()){node.forEachChild(PRIORITY_INDEX,function(childName,childNode){children.push(new NamedNode(childName,childNode));});}}else{compoundWrite.writeTree_.children.inorderTraversal(function(childName,childTree){if(childTree.value!=null){children.push(new NamedNode(childName,childTree.value));}});}return children;}function compoundWriteChildCompoundWrite(compoundWrite,path){if(pathIsEmpty(path)){return compoundWrite;}else{var shadowingNode=compoundWriteGetCompleteNode(compoundWrite,path);if(shadowingNode!=null){return new CompoundWrite(new ImmutableTree(shadowingNode));}else{return new CompoundWrite(compoundWrite.writeTree_.subtree(path));}}}/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @return Whether this CompoundWrite is empty\r\n */function compoundWriteIsEmpty(compoundWrite){return compoundWrite.writeTree_.isEmpty();}/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node The node to apply this CompoundWrite to\r\n * @return The node with all writes applied\r\n */function compoundWriteApply(compoundWrite,node){return applySubtreeWrite(newEmptyPath(),compoundWrite.writeTree_,node);}function applySubtreeWrite(relativePath,writeTree,node){if(writeTree.value!=null){// Since there a write is always a leaf, we're done here\nreturn node.updateChild(relativePath,writeTree.value);}else{var priorityWrite_1=null;writeTree.children.inorderTraversal(function(childKey,childTree){if(childKey==='.priority'){// Apply priorities at the end so we don't update priorities for either empty nodes or forget\n// to apply priorities to empty nodes that are later filled\nassert(childTree.value!==null,'Priority writes must always be leaf nodes');priorityWrite_1=childTree.value;}else{node=applySubtreeWrite(pathChild(relativePath,childKey),childTree,node);}});// If there was a priority write, we only apply it if the node is not empty\nif(!node.getChild(relativePath).isEmpty()&&priorityWrite_1!==null){node=node.updateChild(pathChild(relativePath,'.priority'),priorityWrite_1);}return node;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */function writeTreeChildWrites(writeTree,path){return newWriteTreeRef(path,writeTree);}/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible This is set to false by some transactions. It should be excluded from event caches\r\n */function writeTreeAddOverwrite(writeTree,path,snap,writeId,visible){assert(writeId>writeTree.lastWriteId,'Stacking an older write on top of newer ones');if(visible===undefined){visible=true;}writeTree.allWrites.push({path:path,snap:snap,writeId:writeId,visible:visible});if(visible){writeTree.visibleWrites=compoundWriteAddWrite(writeTree.visibleWrites,path,snap);}writeTree.lastWriteId=writeId;}/**\r\n * Record a new merge from user code.\r\n */function writeTreeAddMerge(writeTree,path,changedChildren,writeId){assert(writeId>writeTree.lastWriteId,'Stacking an older merge on top of newer ones');writeTree.allWrites.push({path:path,children:changedChildren,writeId:writeId,visible:true});writeTree.visibleWrites=compoundWriteAddWrites(writeTree.visibleWrites,path,changedChildren);writeTree.lastWriteId=writeId;}function writeTreeGetWrite(writeTree,writeId){for(var i=0;i<writeTree.allWrites.length;i++){var record=writeTree.allWrites[i];if(record.writeId===writeId){return record;}}return null;}/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */function writeTreeRemoveWrite(writeTree,writeId){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n// out of order.\n//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n//assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\nvar idx=writeTree.allWrites.findIndex(function(s){return s.writeId===writeId;});assert(idx>=0,'removeWrite called with nonexistent writeId.');var writeToRemove=writeTree.allWrites[idx];writeTree.allWrites.splice(idx,1);var removedWriteWasVisible=writeToRemove.visible;var removedWriteOverlapsWithOtherWrites=false;var i=writeTree.allWrites.length-1;while(removedWriteWasVisible&&i>=0){var currentWrite=writeTree.allWrites[i];if(currentWrite.visible){if(i>=idx&&writeTreeRecordContainsPath_(currentWrite,writeToRemove.path)){// The removed write was completely shadowed by a subsequent write.\nremovedWriteWasVisible=false;}else if(pathContains(writeToRemove.path,currentWrite.path)){// Either we're covering some writes or they're covering part of us (depending on which came first).\nremovedWriteOverlapsWithOtherWrites=true;}}i--;}if(!removedWriteWasVisible){return false;}else if(removedWriteOverlapsWithOtherWrites){// There's some shadowing going on. Just rebuild the visible writes from scratch.\nwriteTreeResetTree_(writeTree);return true;}else{// There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\nif(writeToRemove.snap){writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,writeToRemove.path);}else{var children=writeToRemove.children;each(children,function(childName){writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,pathChild(writeToRemove.path,childName));});}return true;}}function writeTreeRecordContainsPath_(writeRecord,path){if(writeRecord.snap){return pathContains(writeRecord.path,path);}else{for(var childName in writeRecord.children){if(writeRecord.children.hasOwnProperty(childName)&&pathContains(pathChild(writeRecord.path,childName),path)){return true;}}return false;}}/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */function writeTreeResetTree_(writeTree){writeTree.visibleWrites=writeTreeLayerTree_(writeTree.allWrites,writeTreeDefaultFilter_,newEmptyPath());if(writeTree.allWrites.length>0){writeTree.lastWriteId=writeTree.allWrites[writeTree.allWrites.length-1].writeId;}else{writeTree.lastWriteId=-1;}}/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */function writeTreeDefaultFilter_(write){return write.visible;}/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */function writeTreeLayerTree_(writes,filter,treeRoot){var compoundWrite=CompoundWrite.empty();for(var i=0;i<writes.length;++i){var write=writes[i];// Theory, a later set will either:\n// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\nif(filter(write)){var writePath=write.path;var relativePath=void 0;if(write.snap){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrite(compoundWrite,relativePath,write.snap);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),write.snap.getChild(relativePath));}else;}else if(write.children){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrites(compoundWrite,relativePath,write.children);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);if(pathIsEmpty(relativePath)){compoundWrite=compoundWriteAddWrites(compoundWrite,newEmptyPath(),write.children);}else{var child=safeGet(write.children,pathGetFront(relativePath));if(child){// There exists a child in this node that matches the root path\nvar deepNode=child.getChild(pathPopFront(relativePath));compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),deepNode);}}}else;}else{throw assertionError('WriteRecord should have .snap or .children');}}}return compoundWrite;}/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude An optional set to be excluded\r\n * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeCalcCompleteEventCache(writeTree,treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites){if(!writeIdsToExclude&&!includeHiddenWrites){var shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(shadowingNode!=null){return shadowingNode;}else{var subMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(compoundWriteIsEmpty(subMerge)){return completeServerCache;}else if(completeServerCache==null&&!compoundWriteHasCompleteWrite(subMerge,newEmptyPath())){// We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\nreturn null;}else{var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(subMerge,layeredCache);}}}else{var merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(!includeHiddenWrites&&compoundWriteIsEmpty(merge)){return completeServerCache;}else{// If the server cache is null, and we don't have a complete cache, we need to return null\nif(!includeHiddenWrites&&completeServerCache==null&&!compoundWriteHasCompleteWrite(merge,newEmptyPath())){return null;}else{var filter=function(write){return(write.visible||includeHiddenWrites)&&(!writeIdsToExclude||!~writeIdsToExclude.indexOf(write.writeId))&&(pathContains(write.path,treePath)||pathContains(treePath,write.path));};var mergeAtPath=writeTreeLayerTree_(writeTree.allWrites,filter,treePath);var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(mergeAtPath,layeredCache);}}}}/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */function writeTreeCalcCompleteEventChildren(writeTree,treePath,completeServerChildren){var completeChildren=ChildrenNode.EMPTY_NODE;var topLevelSet=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(topLevelSet){if(!topLevelSet.isLeafNode()){// we're shadowing everything. Return the children.\ntopLevelSet.forEachChild(PRIORITY_INDEX,function(childName,childSnap){completeChildren=completeChildren.updateImmediateChild(childName,childSnap);});}return completeChildren;}else if(completeServerChildren){// Layer any children we have on top of this\n// We know we don't have a top-level set, so just enumerate existing children\nvar merge_1=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);completeServerChildren.forEachChild(PRIORITY_INDEX,function(childName,childNode){var node=compoundWriteApply(compoundWriteChildCompoundWrite(merge_1,new Path(childName)),childNode);completeChildren=completeChildren.updateImmediateChild(childName,node);});// Add any complete children we have from the set\ncompoundWriteGetCompleteChildren(merge_1).forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}else{// We don't have anything to layer on top of. Layer on any children we have\n// Note that we can return an empty snap if we have a defined delete\nvar merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);compoundWriteGetCompleteChildren(merge).forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}}/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */function writeTreeCalcEventCacheAfterServerOverwrite(writeTree,treePath,childPath,existingEventSnap,existingServerSnap){assert(existingEventSnap||existingServerSnap,'Either existingEventSnap or existingServerSnap must exist');var path=pathChild(treePath,childPath);if(compoundWriteHasCompleteWrite(writeTree.visibleWrites,path)){// At this point we can probably guarantee that we're in case 2, meaning no events\n// May need to check visibility while doing the findRootMostValueAndPath call\nreturn null;}else{// No complete shadowing. We're either partially shadowing or not shadowing at all.\nvar childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);if(compoundWriteIsEmpty(childMerge)){// We're not shadowing at all. Case 1\nreturn existingServerSnap.getChild(childPath);}else{// This could be more efficient if the serverNode + updates doesn't change the eventSnap\n// However this is tricky to find out, since user updates don't necessary change the server\n// snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n// adds nodes, but doesn't change any existing writes. It is therefore not enough to\n// only check if the updates change the serverNode.\n// Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\nreturn compoundWriteApply(childMerge,existingServerSnap.getChild(childPath));}}}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeCalcCompleteChild(writeTree,treePath,childKey,existingServerSnap){var path=pathChild(treePath,childKey);var shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,path);if(shadowingNode!=null){return shadowingNode;}else{if(existingServerSnap.isCompleteForChild(childKey)){var childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);return compoundWriteApply(childMerge,existingServerSnap.getNode().getImmediateChild(childKey));}else{return null;}}}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */function writeTreeShadowingWrite(writeTree,path){return compoundWriteGetCompleteNode(writeTree.visibleWrites,path);}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */function writeTreeCalcIndexedSlice(writeTree,treePath,completeServerData,startPost,count,reverse,index){var toIterate;var merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);var shadowingNode=compoundWriteGetCompleteNode(merge,newEmptyPath());if(shadowingNode!=null){toIterate=shadowingNode;}else if(completeServerData!=null){toIterate=compoundWriteApply(merge,completeServerData);}else{// no children to iterate on\nreturn[];}toIterate=toIterate.withIndex(index);if(!toIterate.isEmpty()&&!toIterate.isLeafNode()){var nodes=[];var cmp=index.getCompare();var iter=reverse?toIterate.getReverseIteratorFrom(startPost,index):toIterate.getIteratorFrom(startPost,index);var next=iter.getNext();while(next&&nodes.length<count){if(cmp(next,startPost)!==0){nodes.push(next);}next=iter.getNext();}return nodes;}else{return[];}}function newWriteTree(){return{visibleWrites:CompoundWrite.empty(),allWrites:[],lastWriteId:-1};}/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude Optional writes to exclude.\r\n * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeRefCalcCompleteEventCache(writeTreeRef,completeServerCache,writeIdsToExclude,includeHiddenWrites){return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites);}/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */function writeTreeRefCalcCompleteEventChildren(writeTreeRef,completeServerChildren){return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerChildren);}/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */function writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef,path,existingEventSnap,existingServerSnap){return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree,writeTreeRef.treePath,path,existingEventSnap,existingServerSnap);}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */function writeTreeRefShadowingWrite(writeTreeRef,path){return writeTreeShadowingWrite(writeTreeRef.writeTree,pathChild(writeTreeRef.treePath,path));}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */function writeTreeRefCalcIndexedSlice(writeTreeRef,completeServerData,startPost,count,reverse,index){return writeTreeCalcIndexedSlice(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerData,startPost,count,reverse,index);}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeRefCalcCompleteChild(writeTreeRef,childKey,existingServerCache){return writeTreeCalcCompleteChild(writeTreeRef.writeTree,writeTreeRef.treePath,childKey,existingServerCache);}/**\r\n * Return a WriteTreeRef for a child.\r\n */function writeTreeRefChild(writeTreeRef,childName){return newWriteTreeRef(pathChild(writeTreeRef.treePath,childName),writeTreeRef.writeTree);}function newWriteTreeRef(path,writeTree){return{treePath:path,writeTree:writeTree};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ChildChangeAccumulator=/** @class */function(){function ChildChangeAccumulator(){this.changeMap=new Map();}ChildChangeAccumulator.prototype.trackChildChange=function(change){var type=change.type;var childKey=change.childName;assert(type===\"child_added\"/* CHILD_ADDED */||type===\"child_changed\"/* CHILD_CHANGED */||type===\"child_removed\"/* CHILD_REMOVED */,'Only child changes supported for tracking');assert(childKey!=='.priority','Only non-priority child changes can be tracked.');var oldChange=this.changeMap.get(childKey);if(oldChange){var oldType=oldChange.type;if(type===\"child_added\"/* CHILD_ADDED */&&oldType===\"child_removed\"/* CHILD_REMOVED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.snapshotNode));}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.delete(childKey);}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildRemoved(childKey,oldChange.oldSnap));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.set(childKey,changeChildAdded(childKey,change.snapshotNode));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.oldSnap));}else{throw assertionError('Illegal combination of changes: '+change+' occurred after '+oldChange);}}else{this.changeMap.set(childKey,change);}};ChildChangeAccumulator.prototype.getChanges=function(){return Array.from(this.changeMap.values());};return ChildChangeAccumulator;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nvar NoCompleteChildSource_=/** @class */function(){function NoCompleteChildSource_(){}/**\r\n     * @inheritDoc\r\n     */NoCompleteChildSource_.prototype.getCompleteChild=function(childKey){return null;};/**\r\n     * @inheritDoc\r\n     */NoCompleteChildSource_.prototype.getChildAfterChild=function(index,child,reverse){return null;};return NoCompleteChildSource_;}();/**\r\n * Singleton instance.\r\n */var NO_COMPLETE_CHILD_SOURCE=new NoCompleteChildSource_();/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */var WriteTreeCompleteChildSource=/** @class */function(){function WriteTreeCompleteChildSource(writes_,viewCache_,optCompleteServerCache_){if(optCompleteServerCache_===void 0){optCompleteServerCache_=null;}this.writes_=writes_;this.viewCache_=viewCache_;this.optCompleteServerCache_=optCompleteServerCache_;}/**\r\n     * @inheritDoc\r\n     */WriteTreeCompleteChildSource.prototype.getCompleteChild=function(childKey){var node=this.viewCache_.eventCache;if(node.isCompleteForChild(childKey)){return node.getNode().getImmediateChild(childKey);}else{var serverNode=this.optCompleteServerCache_!=null?new CacheNode(this.optCompleteServerCache_,true,false):this.viewCache_.serverCache;return writeTreeRefCalcCompleteChild(this.writes_,childKey,serverNode);}};/**\r\n     * @inheritDoc\r\n     */WriteTreeCompleteChildSource.prototype.getChildAfterChild=function(index,child,reverse){var completeServerData=this.optCompleteServerCache_!=null?this.optCompleteServerCache_:viewCacheGetCompleteServerSnap(this.viewCache_);var nodes=writeTreeRefCalcIndexedSlice(this.writes_,completeServerData,child,1,reverse,index);if(nodes.length===0){return null;}else{return nodes[0];}};return WriteTreeCompleteChildSource;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewProcessor(filter){return{filter:filter};}function viewProcessorAssertIndexed(viewProcessor,viewCache){assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Event snap not indexed');assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Server snap not indexed');}function viewProcessorApplyOperation(viewProcessor,oldViewCache,operation,writesCache,completeCache){var accumulator=new ChildChangeAccumulator();var newViewCache,filterServerNode;if(operation.type===OperationType.OVERWRITE){var overwrite=operation;if(overwrite.source.fromUser){newViewCache=viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,accumulator);}else{assert(overwrite.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered  and the\n// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n// again\nfilterServerNode=overwrite.source.tagged||oldViewCache.serverCache.isFiltered()&&!pathIsEmpty(overwrite.path);newViewCache=viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.MERGE){var merge=operation;if(merge.source.fromUser){newViewCache=viewProcessorApplyUserMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,accumulator);}else{assert(merge.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered\nfilterServerNode=merge.source.tagged||oldViewCache.serverCache.isFiltered();newViewCache=viewProcessorApplyServerMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.ACK_USER_WRITE){var ackUserWrite=operation;if(!ackUserWrite.revert){newViewCache=viewProcessorAckUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,ackUserWrite.affectedTree,writesCache,completeCache,accumulator);}else{newViewCache=viewProcessorRevertUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,writesCache,completeCache,accumulator);}}else if(operation.type===OperationType.LISTEN_COMPLETE){newViewCache=viewProcessorListenComplete(viewProcessor,oldViewCache,operation.path,writesCache,accumulator);}else{throw assertionError('Unknown operation type: '+operation.type);}var changes=accumulator.getChanges();viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,changes);return{viewCache:newViewCache,changes:changes};}function viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,accumulator){var eventSnap=newViewCache.eventCache;if(eventSnap.isFullyInitialized()){var isLeafOrEmpty=eventSnap.getNode().isLeafNode()||eventSnap.getNode().isEmpty();var oldCompleteSnap=viewCacheGetCompleteEventSnap(oldViewCache);if(accumulator.length>0||!oldViewCache.eventCache.isFullyInitialized()||isLeafOrEmpty&&!eventSnap.getNode().equals(oldCompleteSnap)||!eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())){accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));}}}function viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,viewCache,changePath,writesCache,source,accumulator){var oldEventSnap=viewCache.eventCache;if(writeTreeRefShadowingWrite(writesCache,changePath)!=null){// we have a shadowing write, ignore changes\nreturn viewCache;}else{var newEventCache=void 0,serverNode=void 0;if(pathIsEmpty(changePath)){// TODO: figure out how this plays with \"sliding ack windows\"\nassert(viewCache.serverCache.isFullyInitialized(),'If change path is empty, we must have complete server data');if(viewCache.serverCache.isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or\n// we might end up raising events for incomplete children. If the server data is filtered deep\n// writes cannot be guaranteed to be complete\nvar serverCache=viewCacheGetCompleteServerSnap(viewCache);var completeChildren=serverCache instanceof ChildrenNode?serverCache:ChildrenNode.EMPTY_NODE;var completeEventChildren=writeTreeRefCalcCompleteEventChildren(writesCache,completeChildren);newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeEventChildren,accumulator);}else{var completeNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeNode,accumulator);}}else{var childKey=pathGetFront(changePath);if(childKey==='.priority'){assert(pathGetLength(changePath)===1,\"Can't have a priority with additional path components\");var oldEventNode=oldEventSnap.getNode();serverNode=viewCache.serverCache.getNode();// we might have overwrites for this priority\nvar updatedPriority=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventNode,serverNode);if(updatedPriority!=null){newEventCache=viewProcessor.filter.updatePriority(oldEventNode,updatedPriority);}else{// priority didn't change, keep old node\nnewEventCache=oldEventSnap.getNode();}}else{var childChangePath=pathPopFront(changePath);// update child\nvar newEventChild=void 0;if(oldEventSnap.isCompleteForChild(childKey)){serverNode=viewCache.serverCache.getNode();var eventChildUpdate=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventSnap.getNode(),serverNode);if(eventChildUpdate!=null){newEventChild=oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath,eventChildUpdate);}else{// Nothing changed, just keep the old child\nnewEventChild=oldEventSnap.getNode().getImmediateChild(childKey);}}else{newEventChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);}if(newEventChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newEventChild,childChangePath,source,accumulator);}else{// no complete child available or no change\nnewEventCache=oldEventSnap.getNode();}}}return viewCacheUpdateEventSnap(viewCache,newEventCache,oldEventSnap.isFullyInitialized()||pathIsEmpty(changePath),viewProcessor.filter.filtersNodes());}}function viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,filterServerNode,accumulator){var oldServerSnap=oldViewCache.serverCache;var newServerCache;var serverFilter=filterServerNode?viewProcessor.filter:viewProcessor.filter.getIndexedFilter();if(pathIsEmpty(changePath)){newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),changedSnap,null);}else if(serverFilter.filtersNodes()&&!oldServerSnap.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\nvar newServerNode=oldServerSnap.getNode().updateChild(changePath,changedSnap);newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),newServerNode,null);}else{var childKey=pathGetFront(changePath);if(!oldServerSnap.isCompleteForPath(changePath)&&pathGetLength(changePath)>1){// We don't update incomplete nodes with updates intended for other listeners\nreturn oldViewCache;}var childChangePath=pathPopFront(changePath);var childNode=oldServerSnap.getNode().getImmediateChild(childKey);var newChildNode=childNode.updateChild(childChangePath,changedSnap);if(childKey==='.priority'){newServerCache=serverFilter.updatePriority(oldServerSnap.getNode(),newChildNode);}else{newServerCache=serverFilter.updateChild(oldServerSnap.getNode(),childKey,newChildNode,childChangePath,NO_COMPLETE_CHILD_SOURCE,null);}}var newViewCache=viewCacheUpdateServerSnap(oldViewCache,newServerCache,oldServerSnap.isFullyInitialized()||pathIsEmpty(changePath),serverFilter.filtersNodes());var source=new WriteTreeCompleteChildSource(writesCache,newViewCache,completeCache);return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,changePath,writesCache,source,accumulator);}function viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,accumulator){var oldEventSnap=oldViewCache.eventCache;var newViewCache,newEventCache;var source=new WriteTreeCompleteChildSource(writesCache,oldViewCache,completeCache);if(pathIsEmpty(changePath)){newEventCache=viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(),changedSnap,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,true,viewProcessor.filter.filtersNodes());}else{var childKey=pathGetFront(changePath);if(childKey==='.priority'){newEventCache=viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(),changedSnap);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,oldEventSnap.isFullyInitialized(),oldEventSnap.isFiltered());}else{var childChangePath=pathPopFront(changePath);var oldChild=oldEventSnap.getNode().getImmediateChild(childKey);var newChild=void 0;if(pathIsEmpty(childChangePath)){// Child overwrite, we can replace the child\nnewChild=changedSnap;}else{var childNode=source.getCompleteChild(childKey);if(childNode!=null){if(pathGetBack(childChangePath)==='.priority'&&childNode.getChild(pathParent(childChangePath)).isEmpty()){// This is a priority update on an empty node. If this node exists on the server, the\n// server will send down the priority in the update, so ignore for now\nnewChild=childNode;}else{newChild=childNode.updateChild(childChangePath,changedSnap);}}else{// There is no complete child node available\nnewChild=ChildrenNode.EMPTY_NODE;}}if(!oldChild.equals(newChild)){var newEventSnap=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newChild,childChangePath,source,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventSnap,oldEventSnap.isFullyInitialized(),viewProcessor.filter.filtersNodes());}else{newViewCache=oldViewCache;}}}return newViewCache;}function viewProcessorCacheHasChild(viewCache,childKey){return viewCache.eventCache.isCompleteForChild(childKey);}function viewProcessorApplyUserMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,accumulator){// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;changedChildren.foreach(function(relativePath,childNode){var writePath=pathChild(path,relativePath);if(viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});changedChildren.foreach(function(relativePath,childNode){var writePath=pathChild(path,relativePath);if(!viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});return curViewCache;}function viewProcessorApplyMerge(viewProcessor,node,merge){merge.foreach(function(relativePath,childNode){node=node.updateChild(relativePath,childNode);});return node;}function viewProcessorApplyServerMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,filterServerNode,accumulator){// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n// wait for the complete data update coming soon.\nif(viewCache.serverCache.getNode().isEmpty()&&!viewCache.serverCache.isFullyInitialized()){return viewCache;}// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;var viewMergeTree;if(pathIsEmpty(path)){viewMergeTree=changedChildren;}else{viewMergeTree=new ImmutableTree(null).setTree(path,changedChildren);}var serverNode=viewCache.serverCache.getNode();viewMergeTree.children.inorderTraversal(function(childKey,childTree){if(serverNode.hasChild(childKey)){var serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);var newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});viewMergeTree.children.inorderTraversal(function(childKey,childMergeTree){var isUnknownDeepMerge=!viewCache.serverCache.isCompleteForChild(childKey)&&childMergeTree.value===undefined;if(!serverNode.hasChild(childKey)&&!isUnknownDeepMerge){var serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);var newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childMergeTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});return curViewCache;}function viewProcessorAckUserWrite(viewProcessor,viewCache,ackPath,affectedTree,writesCache,completeCache,accumulator){if(writeTreeRefShadowingWrite(writesCache,ackPath)!=null){return viewCache;}// Only filter server node if it is currently filtered\nvar filterServerNode=viewCache.serverCache.isFiltered();// Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n// now that it won't be shadowed.\nvar serverCache=viewCache.serverCache;if(affectedTree.value!=null){// This is an overwrite.\nif(pathIsEmpty(ackPath)&&serverCache.isFullyInitialized()||serverCache.isCompleteForPath(ackPath)){return viewProcessorApplyServerOverwrite(viewProcessor,viewCache,ackPath,serverCache.getNode().getChild(ackPath),writesCache,completeCache,filterServerNode,accumulator);}else if(pathIsEmpty(ackPath)){// This is a goofy edge case where we are acking data at this location but don't have full data.  We\n// should just re-apply whatever we have in our cache as a merge.\nvar changedChildren_1=new ImmutableTree(null);serverCache.getNode().forEachChild(KEY_INDEX,function(name,node){changedChildren_1=changedChildren_1.set(new Path(name),node);});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,changedChildren_1,writesCache,completeCache,filterServerNode,accumulator);}else{return viewCache;}}else{// This is a merge.\nvar changedChildren_2=new ImmutableTree(null);affectedTree.foreach(function(mergePath,value){var serverCachePath=pathChild(ackPath,mergePath);if(serverCache.isCompleteForPath(serverCachePath)){changedChildren_2=changedChildren_2.set(mergePath,serverCache.getNode().getChild(serverCachePath));}});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,changedChildren_2,writesCache,completeCache,filterServerNode,accumulator);}}function viewProcessorListenComplete(viewProcessor,viewCache,path,writesCache,accumulator){var oldServerNode=viewCache.serverCache;var newViewCache=viewCacheUpdateServerSnap(viewCache,oldServerNode.getNode(),oldServerNode.isFullyInitialized()||pathIsEmpty(path),oldServerNode.isFiltered());return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,path,writesCache,NO_COMPLETE_CHILD_SOURCE,accumulator);}function viewProcessorRevertUserWrite(viewProcessor,viewCache,path,writesCache,completeServerCache,accumulator){var complete;if(writeTreeRefShadowingWrite(writesCache,path)!=null){return viewCache;}else{var source=new WriteTreeCompleteChildSource(writesCache,viewCache,completeServerCache);var oldEventCache=viewCache.eventCache.getNode();var newEventCache=void 0;if(pathIsEmpty(path)||pathGetFront(path)==='.priority'){var newNode=void 0;if(viewCache.serverCache.isFullyInitialized()){newNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));}else{var serverChildren=viewCache.serverCache.getNode();assert(serverChildren instanceof ChildrenNode,'serverChildren would be complete if leaf node');newNode=writeTreeRefCalcCompleteEventChildren(writesCache,serverChildren);}newNode=newNode;newEventCache=viewProcessor.filter.updateFullNode(oldEventCache,newNode,accumulator);}else{var childKey=pathGetFront(path);var newChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);if(newChild==null&&viewCache.serverCache.isCompleteForChild(childKey)){newChild=oldEventCache.getImmediateChild(childKey);}if(newChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,newChild,pathPopFront(path),source,accumulator);}else if(viewCache.eventCache.getNode().hasChild(childKey)){// No complete child available, delete the existing one, if any\nnewEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,ChildrenNode.EMPTY_NODE,pathPopFront(path),source,accumulator);}else{newEventCache=oldEventCache;}if(newEventCache.isEmpty()&&viewCache.serverCache.isFullyInitialized()){// We might have reverted all child writes. Maybe the old event was a leaf node\ncomplete=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));if(complete.isLeafNode()){newEventCache=viewProcessor.filter.updateFullNode(newEventCache,complete,accumulator);}}}complete=viewCache.serverCache.isFullyInitialized()||writeTreeRefShadowingWrite(writesCache,newEmptyPath())!=null;return viewCacheUpdateEventSnap(viewCache,newEventCache,complete,viewProcessor.filter.filtersNodes());}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */var View=/** @class */function(){function View(query_,initialViewCache){this.query_=query_;this.eventRegistrations_=[];var params=this.query_.getQueryParams();var indexFilter=new IndexedFilter(params.getIndex());var filter=queryParamsGetNodeFilter(params);this.processor_=newViewProcessor(filter);var initialServerCache=initialViewCache.serverCache;var initialEventCache=initialViewCache.eventCache;// Don't filter server node with other filter than index, wait for tagged listen\nvar serverSnap=indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE,initialServerCache.getNode(),null);var eventSnap=filter.updateFullNode(ChildrenNode.EMPTY_NODE,initialEventCache.getNode(),null);var newServerCache=new CacheNode(serverSnap,initialServerCache.isFullyInitialized(),indexFilter.filtersNodes());var newEventCache=new CacheNode(eventSnap,initialEventCache.isFullyInitialized(),filter.filtersNodes());this.viewCache_=newViewCache(newEventCache,newServerCache);this.eventGenerator_=new EventGenerator(this.query_);}Object.defineProperty(View.prototype,\"query\",{get:function(){return this.query_;},enumerable:false,configurable:true});return View;}();function viewGetServerCache(view){return view.viewCache_.serverCache.getNode();}function viewGetCompleteNode(view){return viewCacheGetCompleteEventSnap(view.viewCache_);}function viewGetCompleteServerCache(view,path){var cache=viewCacheGetCompleteServerSnap(view.viewCache_);if(cache){// If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n// we need to see if it contains the child we're interested in.\nif(view.query.getQueryParams().loadsAllData()||!pathIsEmpty(path)&&!cache.getImmediateChild(pathGetFront(path)).isEmpty()){return cache.getChild(path);}}return null;}function viewIsEmpty(view){return view.eventRegistrations_.length===0;}function viewAddEventRegistration(view,eventRegistration){view.eventRegistrations_.push(eventRegistration);}/**\r\n * @param eventRegistration If null, remove all callbacks.\r\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n * @return Cancel events, if cancelError was provided.\r\n */function viewRemoveEventRegistration(view,eventRegistration,cancelError){var cancelEvents=[];if(cancelError){assert(eventRegistration==null,'A cancel should cancel all event registrations.');var path_1=view.query.path;view.eventRegistrations_.forEach(function(registration){var maybeEvent=registration.createCancelEvent(cancelError,path_1);if(maybeEvent){cancelEvents.push(maybeEvent);}});}if(eventRegistration){var remaining=[];for(var i=0;i<view.eventRegistrations_.length;++i){var existing=view.eventRegistrations_[i];if(!existing.matches(eventRegistration)){remaining.push(existing);}else if(eventRegistration.hasAnyCallback()){// We're removing just this one\nremaining=remaining.concat(view.eventRegistrations_.slice(i+1));break;}}view.eventRegistrations_=remaining;}else{view.eventRegistrations_=[];}return cancelEvents;}/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */function viewApplyOperation(view,operation,writesCache,completeServerCache){if(operation.type===OperationType.MERGE&&operation.source.queryId!==null){assert(viewCacheGetCompleteServerSnap(view.viewCache_),'We should always have a full cache before handling merges');assert(viewCacheGetCompleteEventSnap(view.viewCache_),'Missing event cache, even though we have a server cache');}var oldViewCache=view.viewCache_;var result=viewProcessorApplyOperation(view.processor_,oldViewCache,operation,writesCache,completeServerCache);viewProcessorAssertIndexed(view.processor_,result.viewCache);assert(result.viewCache.serverCache.isFullyInitialized()||!oldViewCache.serverCache.isFullyInitialized(),'Once a server snap is complete, it should never go back');view.viewCache_=result.viewCache;return viewGenerateEventsForChanges_(view,result.changes,result.viewCache.eventCache.getNode(),null);}function viewGetInitialEvents(view,registration){var eventSnap=view.viewCache_.eventCache;var initialChanges=[];if(!eventSnap.getNode().isLeafNode()){var eventNode=eventSnap.getNode();eventNode.forEachChild(PRIORITY_INDEX,function(key,childNode){initialChanges.push(changeChildAdded(key,childNode));});}if(eventSnap.isFullyInitialized()){initialChanges.push(changeValue(eventSnap.getNode()));}return viewGenerateEventsForChanges_(view,initialChanges,eventSnap.getNode(),registration);}function viewGenerateEventsForChanges_(view,changes,eventCache,eventRegistration){var registrations=eventRegistration?[eventRegistration]:view.eventRegistrations_;return eventGeneratorGenerateEventsForChanges(view.eventGenerator_,changes,eventCache,registrations);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var referenceConstructor;/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */var SyncPoint=/** @class */function(){function SyncPoint(){/**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */this.views=new Map();}return SyncPoint;}();function syncPointSetReferenceConstructor(val){assert(!referenceConstructor,'__referenceConstructor has already been defined');referenceConstructor=val;}function syncPointGetReferenceConstructor(){assert(referenceConstructor,'Reference.ts has not been loaded');return referenceConstructor;}function syncPointIsEmpty(syncPoint){return syncPoint.views.size===0;}function syncPointApplyOperation(syncPoint,operation,writesCache,optCompleteServerCache){var e_1,_a;var queryId=operation.source.queryId;if(queryId!==null){var view=syncPoint.views.get(queryId);assert(view!=null,'SyncTree gave us an op for an invalid query.');return viewApplyOperation(view,operation,writesCache,optCompleteServerCache);}else{var events=[];try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;events=events.concat(viewApplyOperation(view,operation,writesCache,optCompleteServerCache));}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return events;}}/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @return Events to raise.\r\n */function syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete){var queryId=query.queryIdentifier();var view=syncPoint.views.get(queryId);if(!view){// TODO: make writesCache take flag for complete server node\nvar eventCache=writeTreeRefCalcCompleteEventCache(writesCache,serverCacheComplete?serverCache:null);var eventCacheComplete=false;if(eventCache){eventCacheComplete=true;}else if(serverCache instanceof ChildrenNode){eventCache=writeTreeRefCalcCompleteEventChildren(writesCache,serverCache);eventCacheComplete=false;}else{eventCache=ChildrenNode.EMPTY_NODE;eventCacheComplete=false;}var viewCache=newViewCache(new CacheNode(eventCache,eventCacheComplete,false),new CacheNode(serverCache,serverCacheComplete,false));return new View(query,viewCache);}return view;}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @return Events to raise.\r\n */function syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete){var view=syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete);if(!syncPoint.views.has(query.queryIdentifier())){syncPoint.views.set(query.queryIdentifier(),view);}// This is guaranteed to exist now, we just created anything that was missing\nviewAddEventRegistration(view,eventRegistration);return viewGetInitialEvents(view,eventRegistration);}/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration If null, remove all callbacks.\r\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n * @return removed queries and any cancel events\r\n */function syncPointRemoveEventRegistration(syncPoint,query,eventRegistration,cancelError){var e_2,_a;var queryId=query.queryIdentifier();var removed=[];var cancelEvents=[];var hadCompleteView=syncPointHasCompleteView(syncPoint);if(queryId==='default'){try{// When you do ref.off(...), we search all views for the registration to remove.\nfor(var _b=__values(syncPoint.views.entries()),_c=_b.next();!_c.done;_c=_b.next()){var _d=__read(_c.value,2),viewQueryId=_d[0],view=_d[1];cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(view,eventRegistration,cancelError));if(viewIsEmpty(view)){syncPoint.views.delete(viewQueryId);// We'll deal with complete views later.\nif(!view.query.getQueryParams().loadsAllData()){removed.push(view.query);}}}}catch(e_2_1){e_2={error:e_2_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_2)throw e_2.error;}}}else{// remove the callback from the specific view.\nvar view=syncPoint.views.get(queryId);if(view){cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(view,eventRegistration,cancelError));if(viewIsEmpty(view)){syncPoint.views.delete(queryId);// We'll deal with complete views later.\nif(!view.query.getQueryParams().loadsAllData()){removed.push(view.query);}}}}if(hadCompleteView&&!syncPointHasCompleteView(syncPoint)){// We removed our last complete view.\nremoved.push(new(syncPointGetReferenceConstructor())(query.database,query.path));}return{removed:removed,events:cancelEvents};}function syncPointGetQueryViews(syncPoint){var e_3,_a;var result=[];try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(!view.query.getQueryParams().loadsAllData()){result.push(view);}}}catch(e_3_1){e_3={error:e_3_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_3)throw e_3.error;}}return result;}/**\r\n * @param path The path to the desired complete snapshot\r\n * @return A complete cache, if it exists\r\n */function syncPointGetCompleteServerCache(syncPoint,path){var e_4,_a;var serverCache=null;try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;serverCache=serverCache||viewGetCompleteServerCache(view,path);}}catch(e_4_1){e_4={error:e_4_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_4)throw e_4.error;}}return serverCache;}function syncPointViewForQuery(syncPoint,query){var params=query.getQueryParams();if(params.loadsAllData()){return syncPointGetCompleteView(syncPoint);}else{var queryId=query.queryIdentifier();return syncPoint.views.get(queryId);}}function syncPointViewExistsForQuery(syncPoint,query){return syncPointViewForQuery(syncPoint,query)!=null;}function syncPointHasCompleteView(syncPoint){return syncPointGetCompleteView(syncPoint)!=null;}function syncPointGetCompleteView(syncPoint){var e_5,_a;try{for(var _b=__values(syncPoint.views.values()),_c=_b.next();!_c.done;_c=_b.next()){var view=_c.value;if(view.query.getQueryParams().loadsAllData()){return view;}}}catch(e_5_1){e_5={error:e_5_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_5)throw e_5.error;}}return null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Static tracker for next query tag.\r\n */var syncTreeNextQueryTag_=1;/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */var SyncTree=/** @class */function(){/**\r\n     * @param listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */function SyncTree(listenProvider_){this.listenProvider_=listenProvider_;/**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */this.syncPointTree_=new ImmutableTree(null);/**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */this.pendingWriteTree_=newWriteTree();this.tagToQueryMap=new Map();this.queryToTagMap=new Map();}return SyncTree;}();/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyUserOverwrite(syncTree,path,newData,writeId,visible){// Record pending write.\nwriteTreeAddOverwrite(syncTree.pendingWriteTree_,path,newData,writeId,visible);if(!visible){return[];}else{return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceUser(),path,newData));}}/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyUserMerge(syncTree,path,changedChildren,writeId){// Record pending merge.\nwriteTreeAddMerge(syncTree.pendingWriteTree_,path,changedChildren,writeId);var changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceUser(),path,changeTree));}/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert True if the given write failed and needs to be reverted\r\n * @return Events to raise.\r\n */function syncTreeAckUserWrite(syncTree,writeId,revert){if(revert===void 0){revert=false;}var write=writeTreeGetWrite(syncTree.pendingWriteTree_,writeId);var needToReevaluate=writeTreeRemoveWrite(syncTree.pendingWriteTree_,writeId);if(!needToReevaluate){return[];}else{var affectedTree_1=new ImmutableTree(null);if(write.snap!=null){// overwrite\naffectedTree_1=affectedTree_1.set(newEmptyPath(),true);}else{each(write.children,function(pathString){affectedTree_1=affectedTree_1.set(new Path(pathString),true);});}return syncTreeApplyOperationToSyncPoints_(syncTree,new AckUserWrite(write.path,affectedTree_1,revert));}}/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyServerOverwrite(syncTree,path,newData){return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceServer(),path,newData));}/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyServerMerge(syncTree,path,changedChildren){var changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceServer(),path,changeTree));}/**\r\n * Apply a listen complete for a query\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyListenComplete(syncTree,path){return syncTreeApplyOperationToSyncPoints_(syncTree,new ListenComplete(newOperationSourceServer(),path));}/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyTaggedListenComplete(syncTree,path,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var op=new ListenComplete(newOperationSourceServerTaggedQuery(queryId),relativePath);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration If null, all callbacks are removed.\r\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n * @return Cancel events, if cancelError was provided.\r\n */function syncTreeRemoveEventRegistration(syncTree,query,eventRegistration,cancelError){// Find the syncPoint first. Then deal with whether or not it has matching listeners\nvar path=query.path;var maybeSyncPoint=syncTree.syncPointTree_.get(path);var cancelEvents=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n// not loadsAllData().\nif(maybeSyncPoint&&(query.queryIdentifier()==='default'||syncPointViewExistsForQuery(maybeSyncPoint,query))){var removedAndEvents=syncPointRemoveEventRegistration(maybeSyncPoint,query,eventRegistration,cancelError);if(syncPointIsEmpty(maybeSyncPoint)){syncTree.syncPointTree_=syncTree.syncPointTree_.remove(path);}var removed=removedAndEvents.removed;cancelEvents=removedAndEvents.events;// We may have just removed one of many listeners and can short-circuit this whole process\n// We may also not have removed a default listener, in which case all of the descendant listeners should already be\n// properly set up.\n//\n// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n// queryId === 'default'\nvar removingDefault=-1!==removed.findIndex(function(query){return query.getQueryParams().loadsAllData();});var covered=syncTree.syncPointTree_.findOnPath(path,function(relativePath,parentSyncPoint){return syncPointHasCompleteView(parentSyncPoint);});if(removingDefault&&!covered){var subtree=syncTree.syncPointTree_.subtree(path);// There are potentially child listeners. Determine what if any listens we need to send before executing the\n// removal\nif(!subtree.isEmpty()){// We need to fold over our subtree and collect the listeners to send\nvar newViews=syncTreeCollectDistinctViewsForSubTree_(subtree);// Ok, we've collected all the listens we need. Set them up.\nfor(var i=0;i<newViews.length;++i){var view=newViews[i],newQuery=view.query;var listener=syncTreeCreateListenerForView_(syncTree,view);syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery),syncTreeTagForQuery_(syncTree,newQuery),listener.hashFn,listener.onComplete);}}}// If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n// The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n// Also, note that if we have a cancelError, it's already been removed at the provider level.\nif(!covered&&removed.length>0&&!cancelError){// If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n// default. Otherwise, we need to iterate through and cancel each individual query\nif(removingDefault){// We don't tag default listeners\nvar defaultTag=null;syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query),defaultTag);}else{removed.forEach(function(queryToRemove){var tagToRemove=syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove),tagToRemove);});}}// Now, clear all of the tags we're tracking for the removed listens\nsyncTreeRemoveTags_(syncTree,removed);}return cancelEvents;}/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyTaggedQueryOverwrite(syncTree,path,snap,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey!=null){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var op=new Overwrite(newOperationSourceServerTaggedQuery(queryId),relativePath,snap);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// Query must have been removed already\nreturn[];}}/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @return Events to raise.\r\n */function syncTreeApplyTaggedQueryMerge(syncTree,path,changedChildren,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var changeTree=ImmutableTree.fromObject(changedChildren);var op=new Merge(newOperationSourceServerTaggedQuery(queryId),relativePath,changeTree);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @return Events to raise.\r\n */function syncTreeAddEventRegistration(syncTree,query,eventRegistration){var path=query.path;var serverCache=null;var foundAncestorDefaultView=false;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(sp);});var syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(syncPoint);serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var serverCacheComplete;if(serverCache!=null){serverCacheComplete=true;}else{serverCacheComplete=false;serverCache=ChildrenNode.EMPTY_NODE;var subtree=syncTree.syncPointTree_.subtree(path);subtree.foreachChild(function(childName,childSyncPoint){var completeCache=syncPointGetCompleteServerCache(childSyncPoint,newEmptyPath());if(completeCache){serverCache=serverCache.updateImmediateChild(childName,completeCache);}});}var viewAlreadyExists=syncPointViewExistsForQuery(syncPoint,query);if(!viewAlreadyExists&&!query.getQueryParams().loadsAllData()){// We need to track a tag for this query\nvar queryKey=syncTreeMakeQueryKey_(query);assert(!syncTree.queryToTagMap.has(queryKey),'View does not exist, but we have a tag');var tag=syncTreeGetNextQueryTag_();syncTree.queryToTagMap.set(queryKey,tag);syncTree.tagToQueryMap.set(tag,queryKey);}var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,path);var events=syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete);if(!viewAlreadyExists&&!foundAncestorDefaultView){var view=syncPointViewForQuery(syncPoint,query);events=events.concat(syncTreeSetupListener_(syncTree,query,view));}return events;}/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path The path to the data we want\r\n * @param writeIdsToExclude A specific set to be excluded\r\n */function syncTreeCalcCompleteEventCache(syncTree,path,writeIdsToExclude){var includeHiddenSets=true;var writeTree=syncTree.pendingWriteTree_;var serverCache=syncTree.syncPointTree_.findOnPath(path,function(pathSoFar,syncPoint){var relativePath=newRelativePath(pathSoFar,path);var serverCache=syncPointGetCompleteServerCache(syncPoint,relativePath);if(serverCache){return serverCache;}});return writeTreeCalcCompleteEventCache(writeTree,path,serverCache,writeIdsToExclude,includeHiddenSets);}function syncTreeGetServerValue(syncTree,query){var path=query.path;var serverCache=null;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);});var syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var serverCacheComplete=serverCache!=null;var serverCacheNode=serverCacheComplete?new CacheNode(serverCache,true,false):null;var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,query.path);var view=syncPointGetView(syncPoint,query,writesCache,serverCacheComplete?serverCacheNode.getNode():ChildrenNode.EMPTY_NODE,serverCacheComplete);return viewGetCompleteNode(view);}/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */function syncTreeApplyOperationToSyncPoints_(syncTree,operation){return syncTreeApplyOperationHelper_(operation,syncTree.syncPointTree_,/*serverCache=*/null,writeTreeChildWrites(syncTree.pendingWriteTree_,newEmptyPath()));}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationHelper_(operation,syncPointTree,serverCache,writesCache){if(pathIsEmpty(operation.path)){return syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache);}else{var syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var events=[];var childName=pathGetFront(operation.path);var childOperation=operation.operationForChild(childName);var childTree=syncPointTree.children.get(childName);if(childTree&&childOperation){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writeTreeRefChild(writesCache,childName);events=events.concat(syncTreeApplyOperationHelper_(childOperation,childTree,childServerCache,childWritesCache));}if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache){var syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var events=[];syncPointTree.children.inorderTraversal(function(childName,childTree){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writeTreeRefChild(writesCache,childName);var childOperation=operation.operationForChild(childName);if(childOperation){events=events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation,childTree,childServerCache,childWritesCache));}});if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}function syncTreeCreateListenerForView_(syncTree,view){var query=view.query;var tag=syncTreeTagForQuery_(syncTree,query);return{hashFn:function(){var cache=viewGetServerCache(view)||ChildrenNode.EMPTY_NODE;return cache.hash();},onComplete:function(status){if(status==='ok'){if(tag){return syncTreeApplyTaggedListenComplete(syncTree,query.path,tag);}else{return syncTreeApplyListenComplete(syncTree,query.path);}}else{// If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n// Note that this may need to be scoped to just this listener if we change permissions on filtered children\nvar error=errorForServerCode(status,query);return syncTreeRemoveEventRegistration(syncTree,query,/*eventRegistration*/null,error);}}};}/**\r\n * Return the tag associated with the given query.\r\n */function syncTreeTagForQuery_(syncTree,query){var queryKey=syncTreeMakeQueryKey_(query);return syncTree.queryToTagMap.get(queryKey);}/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */function syncTreeMakeQueryKey_(query){return query.path.toString()+'$'+query.queryIdentifier();}/**\r\n * Return the query associated with the given tag, if we have one\r\n */function syncTreeQueryKeyForTag_(syncTree,tag){return syncTree.tagToQueryMap.get(tag);}/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */function syncTreeParseQueryKey_(queryKey){var splitIndex=queryKey.indexOf('$');assert(splitIndex!==-1&&splitIndex<queryKey.length-1,'Bad queryKey.');return{queryId:queryKey.substr(splitIndex+1),path:new Path(queryKey.substr(0,splitIndex))};}/**\r\n * A helper method to apply tagged operations\r\n */function syncTreeApplyTaggedOperation_(syncTree,queryPath,operation){var syncPoint=syncTree.syncPointTree_.get(queryPath);assert(syncPoint,\"Missing sync point for query tag that we're tracking\");var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,queryPath);return syncPointApplyOperation(syncPoint,operation,writesCache,null);}/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */function syncTreeCollectDistinctViewsForSubTree_(subtree){return subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){var completeView=syncPointGetCompleteView(maybeChildSyncPoint);return[completeView];}else{// No complete view here, flatten any deeper listens into an array\nvar views_1=[];if(maybeChildSyncPoint){views_1=syncPointGetQueryViews(maybeChildSyncPoint);}each(childMap,function(_key,childViews){views_1=views_1.concat(childViews);});return views_1;}});}/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @return The normalized query\r\n */function syncTreeQueryForListening_(query){if(query.getQueryParams().loadsAllData()&&!query.getQueryParams().isDefault()){// We treat queries that load all data as default queries\n// Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n// from Query\nreturn query.getRef();}else{return query;}}function syncTreeRemoveTags_(syncTree,queries){for(var j=0;j<queries.length;++j){var removedQuery=queries[j];if(!removedQuery.getQueryParams().loadsAllData()){// We should have a tag for this\nvar removedQueryKey=syncTreeMakeQueryKey_(removedQuery);var removedQueryTag=syncTree.queryToTagMap.get(removedQueryKey);syncTree.queryToTagMap.delete(removedQueryKey);syncTree.tagToQueryMap.delete(removedQueryTag);}}}/**\r\n * Static accessor for query tags.\r\n */function syncTreeGetNextQueryTag_(){return syncTreeNextQueryTag_++;}/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @return This method can return events to support synchronous data sources\r\n */function syncTreeSetupListener_(syncTree,query,view){var path=query.path;var tag=syncTreeTagForQuery_(syncTree,query);var listener=syncTreeCreateListenerForView_(syncTree,view);var events=syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query),tag,listener.hashFn,listener.onComplete);var subtree=syncTree.syncPointTree_.subtree(path);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n// may need to shadow other listens as well.\nif(tag){assert(!syncPointHasCompleteView(subtree.value),\"If we're adding a query, it shouldn't be shadowed\");}else{// Shadow everything at or below this location, this is a default listener.\nvar queriesToStop=subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(!pathIsEmpty(relativePath)&&maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){return[syncPointGetCompleteView(maybeChildSyncPoint).query];}else{// No default listener here, flatten any deeper queries into an array\nvar queries_1=[];if(maybeChildSyncPoint){queries_1=queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function(view){return view.query;}));}each(childMap,function(_key,childQueries){queries_1=queries_1.concat(childQueries);});return queries_1;}});for(var i=0;i<queriesToStop.length;++i){var queryToStop=queriesToStop[i];syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop),syncTreeTagForQuery_(syncTree,queryToStop));}}return events;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ExistingValueProvider=/** @class */function(){function ExistingValueProvider(node_){this.node_=node_;}ExistingValueProvider.prototype.getImmediateChild=function(childName){var child=this.node_.getImmediateChild(childName);return new ExistingValueProvider(child);};ExistingValueProvider.prototype.node=function(){return this.node_;};return ExistingValueProvider;}();var DeferredValueProvider=/** @class */function(){function DeferredValueProvider(syncTree,path){this.syncTree_=syncTree;this.path_=path;}DeferredValueProvider.prototype.getImmediateChild=function(childName){var childPath=pathChild(this.path_,childName);return new DeferredValueProvider(this.syncTree_,childPath);};DeferredValueProvider.prototype.node=function(){return syncTreeCalcCompleteEventCache(this.syncTree_,this.path_);};return DeferredValueProvider;}();/**\r\n * Generate placeholders for deferred values.\r\n */var generateWithValues=function(values){values=values||{};values['timestamp']=values['timestamp']||new Date().getTime();return values;};/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */var resolveDeferredLeafValue=function(value,existingVal,serverValues){if(!value||typeof value!=='object'){return value;}assert('.sv'in value,'Unexpected leaf node or priority contents');if(typeof value['.sv']==='string'){return resolveScalarDeferredValue(value['.sv'],existingVal,serverValues);}else if(typeof value['.sv']==='object'){return resolveComplexDeferredValue(value['.sv'],existingVal);}else{assert(false,'Unexpected server value: '+JSON.stringify(value,null,2));}};var resolveScalarDeferredValue=function(op,existing,serverValues){switch(op){case'timestamp':return serverValues['timestamp'];default:assert(false,'Unexpected server value: '+op);}};var resolveComplexDeferredValue=function(op,existing,unused){if(!op.hasOwnProperty('increment')){assert(false,'Unexpected server value: '+JSON.stringify(op,null,2));}var delta=op['increment'];if(typeof delta!=='number'){assert(false,'Unexpected increment value: '+delta);}var existingNode=existing.node();assert(existingNode!==null&&typeof existingNode!=='undefined','Expected ChildrenNode.EMPTY_NODE for nulls');// Incrementing a non-number sets the value to the incremented amount\nif(!existingNode.isLeafNode()){return delta;}var leaf=existingNode;var existingVal=leaf.getValue();if(typeof existingVal!=='number'){return delta;}// No need to do over/underflow arithmetic here because JS only handles floats under the covers\nreturn existingVal+delta;};/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path path to which write is relative\r\n * @param node new data written at path\r\n * @param syncTree current data\r\n */var resolveDeferredValueTree=function(path,node,syncTree,serverValues){return resolveDeferredValue(node,new DeferredValueProvider(syncTree,path),serverValues);};/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */var resolveDeferredValueSnapshot=function(node,existing,serverValues){return resolveDeferredValue(node,new ExistingValueProvider(existing),serverValues);};function resolveDeferredValue(node,existingVal,serverValues){var rawPri=node.getPriority().val();var priority=resolveDeferredLeafValue(rawPri,existingVal.getImmediateChild('.priority'),serverValues);var newNode;if(node.isLeafNode()){var leafNode=node;var value=resolveDeferredLeafValue(leafNode.getValue(),existingVal,serverValues);if(value!==leafNode.getValue()||priority!==leafNode.getPriority().val()){return new LeafNode(value,nodeFromJSON$1(priority));}else{return node;}}else{var childrenNode=node;newNode=childrenNode;if(priority!==childrenNode.getPriority().val()){newNode=newNode.updatePriority(new LeafNode(priority));}childrenNode.forEachChild(PRIORITY_INDEX,function(childName,childNode){var newChildNode=resolveDeferredValue(childNode,existingVal.getImmediateChild(childName),serverValues);if(newChildNode!==childNode){newNode=newNode.updateImmediateChild(childName,newChildNode);}});return newNode;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */var Tree=/** @class */function(){/**\r\n     * @param name Optional name of the node.\r\n     * @param parent Optional parent node.\r\n     * @param node Optional node to wrap.\r\n     */function Tree(name,parent,node){if(name===void 0){name='';}if(parent===void 0){parent=null;}if(node===void 0){node={children:{},childCount:0};}this.name=name;this.parent=parent;this.node=node;}return Tree;}();/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj Path to look up.\r\n * @return Tree for path.\r\n */function treeSubTree(tree,pathObj){// TODO: Require pathObj to be Path?\nvar path=pathObj instanceof Path?pathObj:new Path(pathObj);var child=tree,next=pathGetFront(path);while(next!==null){var childNode=safeGet(child.node.children,next)||{children:{},childCount:0};child=new Tree(next,child,childNode);path=pathPopFront(path);next=pathGetFront(path);}return child;}/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @return The data or null if no data exists.\r\n */function treeGetValue(tree){return tree.node.value;}/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value Value to set.\r\n */function treeSetValue(tree,value){tree.node.value=value;treeUpdateParents(tree);}/**\r\n * @return Whether the tree has any children.\r\n */function treeHasChildren(tree){return tree.node.childCount>0;}/**\r\n * @return Whethe rthe tree is empty (no value or children).\r\n */function treeIsEmpty(tree){return treeGetValue(tree)===undefined&&!treeHasChildren(tree);}/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action Action to be called for each child.\r\n */function treeForEachChild(tree,action){each(tree.node.children,function(child,childTree){action(new Tree(child,tree,childTree));});}/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action Action to be called for each child.\r\n * @param includeSelf Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst Whether to call action on children before calling it on\r\n *   parent.\r\n */function treeForEachDescendant(tree,action,includeSelf,childrenFirst){if(includeSelf&&!childrenFirst){action(tree);}treeForEachChild(tree,function(child){treeForEachDescendant(child,action,true,childrenFirst);});if(includeSelf&&childrenFirst){action(tree);}}/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf Whether to call action on this node as well.\r\n * @return true if the action callback returned true.\r\n */function treeForEachAncestor(tree,action,includeSelf){var node=includeSelf?tree:tree.parent;while(node!==null){if(action(node)){return true;}node=node.parent;}return false;}/**\r\n * @return The path of this tree node, as a Path.\r\n */function treeGetPath(tree){return new Path(tree.parent===null?tree.name:treeGetPath(tree.parent)+'/'+tree.name);}/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */function treeUpdateParents(tree){if(tree.parent!==null){treeUpdateChild(tree.parent,tree.name,tree);}}/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName The name of the child to update.\r\n * @param child The child to update.\r\n */function treeUpdateChild(tree,childName,child){var childEmpty=treeIsEmpty(child);var childExists=contains(tree.node.children,childName);if(childEmpty&&childExists){delete tree.node.children[childName];tree.node.childCount--;treeUpdateParents(tree);}else if(!childEmpty&&!childExists){tree.node.children[childName]=child.node;tree.node.childCount++;treeUpdateParents(tree);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * True for invalid Firebase keys\r\n */var INVALID_KEY_REGEX_=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */var INVALID_PATH_REGEX_=/[\\[\\].#$\\u0000-\\u001F\\u007F]/;/**\r\n * Maximum number of characters to allow in leaf value\r\n */var MAX_LEAF_SIZE_=10*1024*1024;var isValidKey=function(key){return typeof key==='string'&&key.length!==0&&!INVALID_KEY_REGEX_.test(key);};var isValidPathString=function(pathString){return typeof pathString==='string'&&pathString.length!==0&&!INVALID_PATH_REGEX_.test(pathString);};var isValidRootPathString=function(pathString){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}return isValidPathString(pathString);};var isValidPriority=function(priority){return priority===null||typeof priority==='string'||typeof priority==='number'&&!isInvalidJSONNumber(priority)||priority&&typeof priority==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncontains(priority,'.sv');};/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */var validateFirebaseDataArg=function(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined){return;}validateFirebaseData(errorPrefix(fnName,argumentNumber,optional),data,path);};/**\r\n * Validate a data object client-side before sending to server.\r\n */var validateFirebaseData=function(errorPrefix,data,path_){var path=path_ instanceof Path?new ValidationPath(path_,errorPrefix):path_;if(data===undefined){throw new Error(errorPrefix+'contains undefined '+validationPathToErrorString(path));}if(typeof data==='function'){throw new Error(errorPrefix+'contains a function '+validationPathToErrorString(path)+' with contents = '+data.toString());}if(isInvalidJSONNumber(data)){throw new Error(errorPrefix+'contains '+data.toString()+' '+validationPathToErrorString(path));}// Check max leaf size, but try to avoid the utf8 conversion if we can.\nif(typeof data==='string'&&data.length>MAX_LEAF_SIZE_/3&&stringLength(data)>MAX_LEAF_SIZE_){throw new Error(errorPrefix+'contains a string greater than '+MAX_LEAF_SIZE_+' utf8 bytes '+validationPathToErrorString(path)+\" ('\"+data.substring(0,50)+\"...')\");}// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n// to save extra walking of large objects.\nif(data&&typeof data==='object'){var hasDotValue_1=false;var hasActualChild_1=false;each(data,function(key,value){if(key==='.value'){hasDotValue_1=true;}else if(key!=='.priority'&&key!=='.sv'){hasActualChild_1=true;if(!isValidKey(key)){throw new Error(errorPrefix+' contains an invalid key ('+key+') '+validationPathToErrorString(path)+'.  Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}validationPathPush(path,key);validateFirebaseData(errorPrefix,value,path);validationPathPop(path);});if(hasDotValue_1&&hasActualChild_1){throw new Error(errorPrefix+' contains \".value\" child '+validationPathToErrorString(path)+' in addition to actual children.');}}};/**\r\n * Pre-validate paths passed in the firebase function.\r\n */var validateFirebaseMergePaths=function(errorPrefix,mergePaths){var i,curPath;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];var keys=pathSlice(curPath);for(var j=0;j<keys.length;j++){if(keys[j]==='.priority'&&j===keys.length-1);else if(!isValidKey(keys[j])){throw new Error(errorPrefix+'contains an invalid key ('+keys[j]+') in path '+curPath.toString()+'. Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}}// Check that update keys are not descendants of each other.\n// We rely on the property that sorting guarantees that ancestors come\n// right before descendants.\nmergePaths.sort(pathCompare);var prevPath=null;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];if(prevPath!==null&&pathContains(prevPath,curPath)){throw new Error(errorPrefix+'contains a path '+prevPath.toString()+' that is ancestor of another path '+curPath.toString());}prevPath=curPath;}};/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */var validateFirebaseMergeDataArg=function(fnName,argumentNumber,data,path,optional){if(optional&&data===undefined){return;}var errorPrefix$1=errorPrefix(fnName,argumentNumber,optional);if(!(data&&typeof data==='object')||Array.isArray(data)){throw new Error(errorPrefix$1+' must be an object containing the children to replace.');}var mergePaths=[];each(data,function(key,value){var curPath=new Path(key);validateFirebaseData(errorPrefix$1,value,pathChild(path,curPath));if(pathGetBack(curPath)==='.priority'){if(!isValidPriority(value)){throw new Error(errorPrefix$1+\"contains an invalid value for '\"+curPath.toString()+\"', which must be a valid \"+'Firebase priority (a string, finite number, server value, or null).');}}mergePaths.push(curPath);});validateFirebaseMergePaths(errorPrefix$1,mergePaths);};var validatePriority=function(fnName,argumentNumber,priority,optional){if(optional&&priority===undefined){return;}if(isInvalidJSONNumber(priority)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'is '+priority.toString()+', but must be a valid Firebase priority (a string, finite number, '+'server value, or null).');}// Special case to allow importing data with a .sv.\nif(!isValidPriority(priority)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'must be a valid Firebase priority '+'(a string, finite number, server value, or null).');}};var validateEventType=function(fnName,argumentNumber,eventType,optional){if(optional&&eventType===undefined){return;}switch(eventType){case'value':case'child_added':case'child_removed':case'child_changed':case'child_moved':break;default:throw new Error(errorPrefix(fnName,argumentNumber,optional)+'must be a valid event type = \"value\", \"child_added\", \"child_removed\", '+'\"child_changed\", or \"child_moved\".');}};var validateKey=function(fnName,argumentNumber,key,optional){if(optional&&key===undefined){return;}if(!isValidKey(key)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'was an invalid key = \"'+key+'\".  Firebase keys must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');}};var validatePathString=function(fnName,argumentNumber,pathString,optional){if(optional&&pathString===undefined){return;}if(!isValidPathString(pathString)){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'was an invalid path = \"'+pathString+'\". Paths must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');}};var validateRootPathString=function(fnName,argumentNumber,pathString,optional){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}validatePathString(fnName,argumentNumber,pathString,optional);};var validateWritablePath=function(fnName,path){if(pathGetFront(path)==='.info'){throw new Error(fnName+\" failed = Can't modify data under /.info/\");}};var validateUrl=function(fnName,argumentNumber,parsedUrl){// TODO = Validate server better.\nvar pathString=parsedUrl.path.toString();if(!(typeof parsedUrl.repoInfo.host==='string')||parsedUrl.repoInfo.host.length===0||!isValidKey(parsedUrl.repoInfo.namespace)&&parsedUrl.repoInfo.host.split(':')[0]!=='localhost'||pathString.length!==0&&!isValidRootPathString(pathString)){throw new Error(errorPrefix(fnName,argumentNumber,false)+'must be a valid firebase URL and '+'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');}};var validateBoolean=function(fnName,argumentNumber,bool,optional){if(optional&&bool===undefined){return;}if(typeof bool!=='boolean'){throw new Error(errorPrefix(fnName,argumentNumber,optional)+'must be a boolean.');}};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */var EventQueue=/** @class */function(){function EventQueue(){this.eventLists_=[];/**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */this.recursionDepth_=0;}return EventQueue;}();/**\r\n * @param eventDataList The new events to queue.\r\n */function eventQueueQueueEvents(eventQueue,eventDataList){// We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\nvar currList=null;for(var i=0;i<eventDataList.length;i++){var data=eventDataList[i];var path=data.getPath();if(currList!==null&&!pathEquals(path,currList.path)){eventQueue.eventLists_.push(currList);currList=null;}if(currList===null){currList={events:[],path:path};}currList.events.push(data);}if(currList){eventQueue.eventLists_.push(currList);}}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path The path to raise events for.\r\n * @param eventDataList The new events to raise.\r\n */function eventQueueRaiseEventsAtPath(eventQueue,path,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,function(eventPath){return pathEquals(eventPath,path);});}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath The path to raise events for.\r\n * @param eventDataList The events to raise\r\n */function eventQueueRaiseEventsForChangedPath(eventQueue,changedPath,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,function(eventPath){return pathContains(eventPath,changedPath)||pathContains(changedPath,eventPath);});}function eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,predicate){eventQueue.recursionDepth_++;var sentAll=true;for(var i=0;i<eventQueue.eventLists_.length;i++){var eventList=eventQueue.eventLists_[i];if(eventList){var eventPath=eventList.path;if(predicate(eventPath)){eventListRaise(eventQueue.eventLists_[i]);eventQueue.eventLists_[i]=null;}else{sentAll=false;}}}if(sentAll){eventQueue.eventLists_=[];}eventQueue.recursionDepth_--;}/**\r\n * Iterates through the list and raises each event\r\n */function eventListRaise(eventList){for(var i=0;i<eventList.events.length;i++){var eventData=eventList.events[i];if(eventData!==null){eventList.events[i]=null;var eventFn=eventData.getEventRunner();if(logger){log('event: '+eventData.toString());}exceptionGuard(eventFn);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var INTERRUPT_REASON='repo_interrupt';/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */var MAX_TRANSACTION_RETRIES=25;/**\r\n * A connection to a single data repository.\r\n */var Repo=/** @class */function(){function Repo(repoInfo_,forceRestClient_,app,authTokenProvider_){this.repoInfo_=repoInfo_;this.forceRestClient_=forceRestClient_;this.app=app;this.authTokenProvider_=authTokenProvider_;this.dataUpdateCount=0;this.statsListener_=null;this.eventQueue_=new EventQueue();this.nextWriteId_=1;this.interceptServerDataCallback_=null;/** A list of data pieces and paths to be set when this client disconnects. */this.onDisconnect_=newSparseSnapshotTree();/** Stores queues of outstanding transactions for Firebase locations. */this.transactionQueueTree_=new Tree();// TODO: This should be @private but it's used by test_access.js and internal.js\nthis.persistentConnection_=null;// This key is intentionally not updated if RepoInfo is later changed or replaced\nthis.key=this.repoInfo_.toURLString();}/**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */Repo.prototype.toString=function(){return(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host;};return Repo;}();function repoStart(repo){repo.stats_=statsManagerGetCollection(repo.repoInfo_);if(repo.forceRestClient_||beingCrawled()){repo.server_=new ReadonlyRestClient(repo.repoInfo_,function(pathString,data,isMerge,tag){repoOnDataUpdate(repo,pathString,data,isMerge,tag);},repo.authTokenProvider_);// Minor hack: Fire onConnect immediately, since there's no actual connection.\nsetTimeout(function(){return repoOnConnectStatus(repo,/* connectStatus= */true);},0);}else{var authOverride=repo.app.options['databaseAuthVariableOverride'];// Validate authOverride\nif(typeof authOverride!=='undefined'&&authOverride!==null){if(typeof authOverride!=='object'){throw new Error('Only objects are supported for option databaseAuthVariableOverride');}try{stringify(authOverride);}catch(e){throw new Error('Invalid authOverride provided: '+e);}}repo.persistentConnection_=new PersistentConnection(repo.repoInfo_,repo.app.options.appId,function(pathString,data,isMerge,tag){repoOnDataUpdate(repo,pathString,data,isMerge,tag);},function(connectStatus){repoOnConnectStatus(repo,connectStatus);},function(updates){repoOnServerInfoUpdate(repo,updates);},repo.authTokenProvider_,authOverride);repo.server_=repo.persistentConnection_;}repo.authTokenProvider_.addTokenChangeListener(function(token){repo.server_.refreshAuthToken(token);});// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\nrepo.statsReporter_=statsManagerGetOrCreateReporter(repo.repoInfo_,function(){return new StatsReporter(repo.stats_,repo.server_);});// Used for .info.\nrepo.infoData_=new SnapshotHolder();repo.infoSyncTree_=new SyncTree({startListening:function(query,tag,currentHashFn,onComplete){var infoEvents=[];var node=repo.infoData_.getNode(query.path);// This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n// on initial data...\nif(!node.isEmpty()){infoEvents=syncTreeApplyServerOverwrite(repo.infoSyncTree_,query.path,node);setTimeout(function(){onComplete('ok');},0);}return infoEvents;},stopListening:function(){}});repoUpdateInfo(repo,'connected',false);repo.serverSyncTree_=new SyncTree({startListening:function(query,tag,currentHashFn,onComplete){repo.server_.listen(query,currentHashFn,tag,function(status,data){var events=onComplete(status,data);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,query.path,events);});// No synchronous events for network-backed sync trees\nreturn[];},stopListening:function(query,tag){repo.server_.unlisten(query,tag);}});}/**\r\n * @return The time in milliseconds, taking the server offset into account if we have one.\r\n */function repoServerTime(repo){var offsetNode=repo.infoData_.getNode(new Path('.info/serverTimeOffset'));var offset=offsetNode.val()||0;return new Date().getTime()+offset;}/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */function repoGenerateServerValues(repo){return generateWithValues({timestamp:repoServerTime(repo)});}/**\r\n * Called by realtime when we get new messages from the server.\r\n */function repoOnDataUpdate(repo,pathString,data,isMerge,tag){// For testing.\nrepo.dataUpdateCount++;var path=new Path(pathString);data=repo.interceptServerDataCallback_?repo.interceptServerDataCallback_(pathString,data):data;var events=[];if(tag){if(isMerge){var taggedChildren=map(data,function(raw){return nodeFromJSON$1(raw);});events=syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_,path,taggedChildren,tag);}else{var taggedSnap=nodeFromJSON$1(data);events=syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_,path,taggedSnap,tag);}}else if(isMerge){var changedChildren=map(data,function(raw){return nodeFromJSON$1(raw);});events=syncTreeApplyServerMerge(repo.serverSyncTree_,path,changedChildren);}else{var snap=nodeFromJSON$1(data);events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap);}var affectedPath=path;if(events.length>0){// Since we have a listener outstanding for each transaction, receiving any events\n// is a proxy for some change having occurred.\naffectedPath=repoRerunTransactions(repo,path);}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,events);}// TODO: This should be @private but it's used by test_access.js and internal.js\nfunction repoInterceptServerData(repo,callback){repo.interceptServerDataCallback_=callback;}function repoOnConnectStatus(repo,connectStatus){repoUpdateInfo(repo,'connected',connectStatus);if(connectStatus===false){repoRunOnDisconnectEvents(repo);}}function repoOnServerInfoUpdate(repo,updates){each(updates,function(key,value){repoUpdateInfo(repo,key,value);});}function repoUpdateInfo(repo,pathString,value){var path=new Path('/.info/'+pathString);var newNode=nodeFromJSON$1(value);repo.infoData_.updateSnapshot(path,newNode);var events=syncTreeApplyServerOverwrite(repo.infoSyncTree_,path,newNode);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);}function repoGetNextWriteId(repo){return repo.nextWriteId_++;}/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */function repoGetValue(repo,query){// Only active queries are cached. There is no persisted cache.\nvar cached=syncTreeGetServerValue(repo.serverSyncTree_,query);if(cached!=null){return Promise.resolve(cached);}return repo.server_.get(query).then(function(payload){var node=nodeFromJSON$1(payload);var events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,query.path,node);eventQueueRaiseEventsAtPath(repo.eventQueue_,query.path,events);return Promise.resolve(node);},function(err){repoLog(repo,'get for query '+stringify(query)+' failed: '+err);return Promise.reject(new Error(err));});}function repoSetWithPriority(repo,path,newVal,newPriority,onComplete){repoLog(repo,'set',{path:path.toString(),value:newVal,priority:newPriority});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n// (b) store unresolved paths on JSON parse\nvar serverValues=repoGenerateServerValues(repo);var newNodeUnresolved=nodeFromJSON$1(newVal,newPriority);var existing=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,existing,serverValues);var writeId=repoGetNextWriteId(repo);var events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,writeId,true);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.put(path.toString(),newNodeUnresolved.val(/*export=*/true),function(status,errorReason){var success=status==='ok';if(!success){warn('set at '+path+' failed: '+status);}var clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId,!success);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});var affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,[]);}function repoUpdate(repo,path,childrenToMerge,onComplete){repoLog(repo,'update',{path:path.toString(),value:childrenToMerge});// Start with our existing data and merge each child into it.\nvar empty=true;var serverValues=repoGenerateServerValues(repo);var changedChildren={};each(childrenToMerge,function(changedKey,changedValue){empty=false;changedChildren[changedKey]=resolveDeferredValueTree(pathChild(path,changedKey),nodeFromJSON$1(changedValue),repo.serverSyncTree_,serverValues);});if(!empty){var writeId_1=repoGetNextWriteId(repo);var events=syncTreeApplyUserMerge(repo.serverSyncTree_,path,changedChildren,writeId_1);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.merge(path.toString(),childrenToMerge,function(status,errorReason){var success=status==='ok';if(!success){warn('update at '+path+' failed: '+status);}var clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId_1,!success);var affectedPath=clearEvents.length>0?repoRerunTransactions(repo,path):path;eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});each(childrenToMerge,function(changedPath){var affectedPath=repoAbortTransactions(repo,pathChild(path,changedPath));repoRerunTransactions(repo,affectedPath);});// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,[]);}else{log(\"update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);}}/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */function repoRunOnDisconnectEvents(repo){repoLog(repo,'onDisconnectEvents');var serverValues=repoGenerateServerValues(repo);var resolvedOnDisconnectTree=newSparseSnapshotTree();sparseSnapshotTreeForEachTree(repo.onDisconnect_,newEmptyPath(),function(path,node){var resolved=resolveDeferredValueTree(path,node,repo.serverSyncTree_,serverValues);sparseSnapshotTreeRemember(resolvedOnDisconnectTree,path,resolved);});var events=[];sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree,newEmptyPath(),function(path,snap){events=events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap));var affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);});repo.onDisconnect_=newSparseSnapshotTree();eventQueueRaiseEventsForChangedPath(repo.eventQueue_,newEmptyPath(),events);}function repoOnDisconnectCancel(repo,path,onComplete){repo.server_.onDisconnectCancel(path.toString(),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeForget(repo.onDisconnect_,path);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSet(repo,path,value,onComplete){var newNode=nodeFromJSON$1(value);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSetWithPriority(repo,path,value,priority,onComplete){var newNode=nodeFromJSON$1(value,priority);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectUpdate(repo,path,childrenToMerge,onComplete){if(isEmpty(childrenToMerge)){log(\"onDisconnect().update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);return;}repo.server_.onDisconnectMerge(path.toString(),childrenToMerge,function(status,errorReason){if(status==='ok'){each(childrenToMerge,function(childName,childNode){var newChildNode=nodeFromJSON$1(childNode);sparseSnapshotTreeRemember(repo.onDisconnect_,pathChild(path,childName),newChildNode);});}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoAddEventCallbackForQuery(repo,query,eventRegistration){var events;if(pathGetFront(query.path)==='.info'){events=syncTreeAddEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeAddEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query.path,events);}function repoRemoveEventCallbackForQuery(repo,query,eventRegistration){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n// a little bit by handling the return values anyways.\nvar events;if(pathGetFront(query.path)==='.info'){events=syncTreeRemoveEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeRemoveEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query.path,events);}function repoInterrupt(repo){if(repo.persistentConnection_){repo.persistentConnection_.interrupt(INTERRUPT_REASON);}}function repoResume(repo){if(repo.persistentConnection_){repo.persistentConnection_.resume(INTERRUPT_REASON);}}function repoStats(repo,showDelta){if(showDelta===void 0){showDelta=false;}if(typeof console==='undefined'){return;}var stats;if(showDelta){if(!repo.statsListener_){repo.statsListener_=new StatsListener(repo.stats_);}stats=repo.statsListener_.get();}else{stats=repo.stats_.get();}var longestName=Object.keys(stats).reduce(function(previousValue,currentValue){return Math.max(currentValue.length,previousValue);},0);each(stats,function(stat,value){var paddedStat=stat;// pad stat names to be the same length (plus 2 extra spaces).\nfor(var i=stat.length;i<longestName+2;i++){paddedStat+=' ';}console.log(paddedStat+value);});}function repoStatsIncrementCounter(repo,metric){repo.stats_.incrementCounter(metric);statsReporterIncludeStat(repo.statsReporter_,metric);}function repoLog(repo){var varArgs=[];for(var _i=1;_i<arguments.length;_i++){varArgs[_i-1]=arguments[_i];}var prefix='';if(repo.persistentConnection_){prefix=repo.persistentConnection_.id+':';}log.apply(void 0,__spreadArray([prefix],__read(varArgs)));}function repoCallOnCompleteCallback(repo,callback,status,errorReason){if(callback){exceptionGuard(function(){if(status==='ok'){callback(null);}else{var code=(status||'error').toUpperCase();var message=code;if(errorReason){message+=': '+errorReason;}var error=new Error(message);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code;callback(error);}});}}/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path Path at which to do transaction.\r\n * @param transactionUpdate Update callback.\r\n * @param onComplete Completion callback.\r\n * @param unwatcher Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally Whether or not to make intermediate results visible\r\n */function repoStartTransaction(repo,path,transactionUpdate,onComplete,unwatcher,applyLocally){repoLog(repo,'transaction on '+path);// Initialize transaction.\nvar transaction={path:path,update:transactionUpdate,onComplete:onComplete,// One of TransactionStatus enums.\nstatus:null,// Used when combining transactions at different locations to figure out\n// which one goes first.\norder:LUIDGenerator(),// Whether to raise local events for this transaction.\napplyLocally:applyLocally,// Count of how many times we've retried the transaction.\nretryCount:0,// Function to call to clean up our .on() listener.\nunwatcher:unwatcher,// Stores why a transaction was aborted.\nabortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null};// Run transaction initially.\nvar currentState=repoGetLatestState(repo,path,undefined);transaction.currentInputSnapshot=currentState;var newVal=transaction.update(currentState.val());if(newVal===undefined){// Abort transaction.\ntransaction.unwatcher();transaction.currentOutputSnapshotRaw=null;transaction.currentOutputSnapshotResolved=null;if(transaction.onComplete){// We just set the input snapshot, so this cast should be safe\ntransaction.onComplete(null,false,transaction.currentInputSnapshot);}}else{validateFirebaseData('transaction failed: Data returned ',newVal,transaction.path);// Mark as run and add to our queue.\ntransaction.status=0/* RUN */;var queueNode=treeSubTree(repo.transactionQueueTree_,path);var nodeQueue=treeGetValue(queueNode)||[];nodeQueue.push(transaction);treeSetValue(queueNode,nodeQueue);// Update visibleData and raise events\n// Note: We intentionally raise events after updating all of our\n// transaction state, since the user could start new transactions from the\n// event callbacks.\nvar priorityForNode=void 0;if(typeof newVal==='object'&&newVal!==null&&contains(newVal,'.priority')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\npriorityForNode=safeGet(newVal,'.priority');assert(isValidPriority(priorityForNode),'Invalid priority returned by transaction. '+'Priority must be a valid string, finite number, server value, or null.');}else{var currentNode=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path)||ChildrenNode.EMPTY_NODE;priorityForNode=currentNode.getPriority().val();}var serverValues=repoGenerateServerValues(repo);var newNodeUnresolved=nodeFromJSON$1(newVal,priorityForNode);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,currentState,serverValues);transaction.currentOutputSnapshotRaw=newNodeUnresolved;transaction.currentOutputSnapshotResolved=newNode;transaction.currentWriteId=repoGetNextWriteId(repo);var events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,transaction.currentWriteId,transaction.applyLocally);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);repoSendReadyTransactions(repo,repo.transactionQueueTree_);}}/**\r\n * @param excludeSets A specific set to exclude\r\n */function repoGetLatestState(repo,path,excludeSets){return syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path,excludeSets)||ChildrenNode.EMPTY_NODE;}/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node transactionQueueTree node to start at.\r\n */function repoSendReadyTransactions(repo,node){if(node===void 0){node=repo.transactionQueueTree_;}// Before recursing, make sure any completed transactions are removed.\nif(!node){repoPruneCompletedTransactionsBelowNode(repo,node);}if(treeGetValue(node)){var queue=repoBuildTransactionQueue(repo,node);assert(queue.length>0,'Sending zero length transaction queue');var allRun=queue.every(function(transaction){return transaction.status===0/* RUN */;});// If they're all run (and not sent), we can send them.  Else, we must wait.\nif(allRun){repoSendTransactionQueue(repo,treeGetPath(node),queue);}}else if(treeHasChildren(node)){treeForEachChild(node,function(childNode){repoSendReadyTransactions(repo,childNode);});}}/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path The location of the queue.\r\n * @param queue Queue of transactions under the specified location.\r\n */function repoSendTransactionQueue(repo,path,queue){// Mark transactions as sent and increment retry count!\nvar setsToIgnore=queue.map(function(txn){return txn.currentWriteId;});var latestState=repoGetLatestState(repo,path,setsToIgnore);var snapToSend=latestState;var latestHash=latestState.hash();for(var i=0;i<queue.length;i++){var txn=queue[i];assert(txn.status===0/* RUN */,'tryToSendTransactionQueue_: items in queue should all be run.');txn.status=1/* SENT */;txn.retryCount++;var relativePath=newRelativePath(path,txn.path);// If we've gotten to this point, the output snapshot must be defined.\nsnapToSend=snapToSend.updateChild(relativePath/** @type {!Node} */,txn.currentOutputSnapshotRaw);}var dataToSend=snapToSend.val(true);var pathToSend=path;// Send the put.\nrepo.server_.put(pathToSend.toString(),dataToSend,function(status){repoLog(repo,'transaction put response',{path:pathToSend.toString(),status:status});var events=[];if(status==='ok'){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more\n// transactions or sets.\nvar callbacks=[];var _loop_1=function(i){queue[i].status=2/* COMPLETED */;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[i].currentWriteId));if(queue[i].onComplete){// We never unset the output snapshot, and given that this\n// transaction is complete, it should be set\ncallbacks.push(function(){return queue[i].onComplete(null,true,queue[i].currentOutputSnapshotResolved);});}queue[i].unwatcher();};for(var i=0;i<queue.length;i++){_loop_1(i);}// Now remove the completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,treeSubTree(repo.transactionQueueTree_,path));// There may be pending transactions that we can now send.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);// Finally, trigger onComplete callbacks.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}else{// transactions are no longer sent.  Update their status appropriately.\nif(status==='datastale'){for(var i=0;i<queue.length;i++){if(queue[i].status===3/* SENT_NEEDS_ABORT */){queue[i].status=4/* NEEDS_ABORT */;}else{queue[i].status=0/* RUN */;}}}else{warn('transaction at '+pathToSend.toString()+' failed: '+status);for(var i=0;i<queue.length;i++){queue[i].status=4/* NEEDS_ABORT */;queue[i].abortReason=status;}}repoRerunTransactions(repo,path);}},latestHash);}/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath The path in mergedData that changed.\r\n * @return The rootmost path that was affected by rerunning transactions.\r\n */function repoRerunTransactions(repo,changedPath){var rootMostTransactionNode=repoGetAncestorTransactionNode(repo,changedPath);var path=treeGetPath(rootMostTransactionNode);var queue=repoBuildTransactionQueue(repo,rootMostTransactionNode);repoRerunTransactionQueue(repo,queue,path);return path;}/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue The queue of transactions to run.\r\n * @param path The path the queue is for.\r\n */function repoRerunTransactionQueue(repo,queue,path){if(queue.length===0){return;// Nothing to do!\n}// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions or\n// sets.\nvar callbacks=[];var events=[];// Ignore all of the sets we're going to re-run.\nvar txnsToRerun=queue.filter(function(q){return q.status===0/* RUN */;});var setsToIgnore=txnsToRerun.map(function(q){return q.currentWriteId;});var _loop_2=function(i){var transaction=queue[i];var relativePath=newRelativePath(path,transaction.path);var abortTransaction=false,abortReason;assert(relativePath!==null,'rerunTransactionsUnderNode_: relativePath should not be null.');if(transaction.status===4/* NEEDS_ABORT */){abortTransaction=true;abortReason=transaction.abortReason;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else if(transaction.status===0/* RUN */){if(transaction.retryCount>=MAX_TRANSACTION_RETRIES){abortTransaction=true;abortReason='maxretry';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else{// This code reruns a transaction\nvar currentNode=repoGetLatestState(repo,transaction.path,setsToIgnore);transaction.currentInputSnapshot=currentNode;var newData=queue[i].update(currentNode.val());if(newData!==undefined){validateFirebaseData('transaction failed: Data returned ',newData,transaction.path);var newDataNode=nodeFromJSON$1(newData);var hasExplicitPriority=typeof newData==='object'&&newData!=null&&contains(newData,'.priority');if(!hasExplicitPriority){// Keep the old priority if there wasn't a priority explicitly specified.\nnewDataNode=newDataNode.updatePriority(currentNode.getPriority());}var oldWriteId=transaction.currentWriteId;var serverValues=repoGenerateServerValues(repo);var newNodeResolved=resolveDeferredValueSnapshot(newDataNode,currentNode,serverValues);transaction.currentOutputSnapshotRaw=newDataNode;transaction.currentOutputSnapshotResolved=newNodeResolved;transaction.currentWriteId=repoGetNextWriteId(repo);// Mutates setsToIgnore in place\nsetsToIgnore.splice(setsToIgnore.indexOf(oldWriteId),1);events=events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_,transaction.path,newNodeResolved,transaction.currentWriteId,transaction.applyLocally));events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,oldWriteId,true));}else{abortTransaction=true;abortReason='nodata';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}}}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);events=[];if(abortTransaction){// Abort.\nqueue[i].status=2/* COMPLETED */;// Removing a listener can trigger pruning which can muck with\n// mergedData/visibleData (as it prunes data). So defer the unwatcher\n// until we're done.\n(function(unwatcher){setTimeout(unwatcher,Math.floor(0));})(queue[i].unwatcher);if(queue[i].onComplete){if(abortReason==='nodata'){callbacks.push(function(){return queue[i].onComplete(null,false,queue[i].currentInputSnapshot);});}else{callbacks.push(function(){return queue[i].onComplete(new Error(abortReason),false,null);});}}}};for(var i=0;i<queue.length;i++){_loop_2(i);}// Clean up completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,repo.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.\nfor(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}// Try to send the transaction result to the server.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);}/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path The location to start at.\r\n * @return The rootmost node with a transaction.\r\n */function repoGetAncestorTransactionNode(repo,path){var front;// Start at the root and walk deeper into the tree towards path until we\n// find a node with pending transactions.\nvar transactionNode=repo.transactionQueueTree_;front=pathGetFront(path);while(front!==null&&treeGetValue(transactionNode)===undefined){transactionNode=treeSubTree(transactionNode,front);path=pathPopFront(path);front=pathGetFront(path);}return transactionNode;}/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @return The generated queue.\r\n */function repoBuildTransactionQueue(repo,transactionNode){// Walk any child transaction queues and aggregate them into a single queue.\nvar transactionQueue=[];repoAggregateTransactionQueuesForNode(repo,transactionNode,transactionQueue);// Sort them by the order the transactions were created.\ntransactionQueue.sort(function(a,b){return a.order-b.order;});return transactionQueue;}function repoAggregateTransactionQueuesForNode(repo,node,queue){var nodeQueue=treeGetValue(node);if(nodeQueue){for(var i=0;i<nodeQueue.length;i++){queue.push(nodeQueue[i]);}}treeForEachChild(node,function(child){repoAggregateTransactionQueuesForNode(repo,child,queue);});}/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */function repoPruneCompletedTransactionsBelowNode(repo,node){var queue=treeGetValue(node);if(queue){var to=0;for(var from=0;from<queue.length;from++){if(queue[from].status!==2/* COMPLETED */){queue[to]=queue[from];to++;}}queue.length=to;treeSetValue(node,queue.length>0?queue:undefined);}treeForEachChild(node,function(childNode){repoPruneCompletedTransactionsBelowNode(repo,childNode);});}/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path Path for which we want to abort related transactions.\r\n */function repoAbortTransactions(repo,path){var affectedPath=treeGetPath(repoGetAncestorTransactionNode(repo,path));var transactionNode=treeSubTree(repo.transactionQueueTree_,path);treeForEachAncestor(transactionNode,function(node){repoAbortTransactionsOnNode(repo,node);});repoAbortTransactionsOnNode(repo,transactionNode);treeForEachDescendant(transactionNode,function(node){repoAbortTransactionsOnNode(repo,node);});return affectedPath;}/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node Node to abort transactions for.\r\n */function repoAbortTransactionsOnNode(repo,node){var queue=treeGetValue(node);if(queue){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions\n// or sets.\nvar callbacks=[];// Go through queue.  Any already-sent transactions must be marked for\n// abort, while the unsent ones can be immediately aborted and removed.\nvar events=[];var lastSent=-1;for(var i=0;i<queue.length;i++){if(queue[i].status===3/* SENT_NEEDS_ABORT */);else if(queue[i].status===1/* SENT */){assert(lastSent===i-1,'All SENT items should be at beginning of queue.');lastSent=i;// Mark transaction for abort when it comes back.\nqueue[i].status=3/* SENT_NEEDS_ABORT */;queue[i].abortReason='set';}else{assert(queue[i].status===0/* RUN */,'Unexpected transaction status in abort');// We can abort it immediately.\nqueue[i].unwatcher();events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[i].currentWriteId,true));if(queue[i].onComplete){callbacks.push(queue[i].onComplete.bind(null,new Error('set'),false,null));}}}if(lastSent===-1){// We're not waiting for any sent transactions.  We can clear the queue.\ntreeSetValue(node,undefined);}else{// Remove the transactions we aborted.\nqueue.length=lastSent+1;}// Now fire the callbacks.\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,treeGetPath(node),events);for(var i=0;i<callbacks.length;i++){exceptionGuard(callbacks[i]);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function decodePath(pathString){var pathStringDecoded='';var pieces=pathString.split('/');for(var i=0;i<pieces.length;i++){if(pieces[i].length>0){var piece=pieces[i];try{piece=decodeURIComponent(piece.replace(/\\+/g,' '));}catch(e){}pathStringDecoded+='/'+piece;}}return pathStringDecoded;}/**\r\n * @return key value hash\r\n */function decodeQuery(queryString){var e_1,_a;var results={};if(queryString.charAt(0)==='?'){queryString=queryString.substring(1);}try{for(var _b=__values(queryString.split('&')),_c=_b.next();!_c.done;_c=_b.next()){var segment=_c.value;if(segment.length===0){continue;}var kv=segment.split('=');if(kv.length===2){results[decodeURIComponent(kv[0])]=decodeURIComponent(kv[1]);}else{warn(\"Invalid query segment '\"+segment+\"' in query '\"+queryString+\"'\");}}}catch(e_1_1){e_1={error:e_1_1};}finally{try{if(_c&&!_c.done&&(_a=_b.return))_a.call(_b);}finally{if(e_1)throw e_1.error;}}return results;}var parseRepoInfo=function(dataURL,nodeAdmin){var parsedUrl=parseDatabaseURL(dataURL),namespace=parsedUrl.namespace;if(parsedUrl.domain==='firebase.com'){fatal(parsedUrl.host+' is no longer supported. '+'Please use <YOUR FIREBASE>.firebaseio.com instead');}// Catch common error of uninitialized namespace value.\nif((!namespace||namespace==='undefined')&&parsedUrl.domain!=='localhost'){fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');}if(!parsedUrl.secure){warnIfPageIsSecure();}var webSocketOnly=parsedUrl.scheme==='ws'||parsedUrl.scheme==='wss';return{repoInfo:new RepoInfo(parsedUrl.host,parsedUrl.secure,namespace,nodeAdmin,webSocketOnly,/*persistenceKey=*/'',/*includeNamespaceInQueryParams=*/namespace!==parsedUrl.subdomain),path:new Path(parsedUrl.pathString)};};var parseDatabaseURL=function(dataURL){// Default to empty strings in the event of a malformed string.\nvar host='',domain='',subdomain='',pathString='',namespace='';// Always default to SSL, unless otherwise specified.\nvar secure=true,scheme='https',port=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.\nif(typeof dataURL==='string'){// Parse scheme.\nvar colonInd=dataURL.indexOf('//');if(colonInd>=0){scheme=dataURL.substring(0,colonInd-1);dataURL=dataURL.substring(colonInd+2);}// Parse host, path, and query string.\nvar slashInd=dataURL.indexOf('/');if(slashInd===-1){slashInd=dataURL.length;}var questionMarkInd=dataURL.indexOf('?');if(questionMarkInd===-1){questionMarkInd=dataURL.length;}host=dataURL.substring(0,Math.min(slashInd,questionMarkInd));if(slashInd<questionMarkInd){// For pathString, questionMarkInd will always come after slashInd\npathString=decodePath(dataURL.substring(slashInd,questionMarkInd));}var queryParams=decodeQuery(dataURL.substring(Math.min(dataURL.length,questionMarkInd)));// If we have a port, use scheme for determining if it's secure.\ncolonInd=host.indexOf(':');if(colonInd>=0){secure=scheme==='https'||scheme==='wss';port=parseInt(host.substring(colonInd+1),10);}else{colonInd=host.length;}var hostWithoutPort=host.slice(0,colonInd);if(hostWithoutPort.toLowerCase()==='localhost'){domain='localhost';}else if(hostWithoutPort.split('.').length<=2){domain=hostWithoutPort;}else{// Interpret the subdomain of a 3 or more component URL as the namespace name.\nvar dotInd=host.indexOf('.');subdomain=host.substring(0,dotInd).toLowerCase();domain=host.substring(dotInd+1);// Normalize namespaces to lowercase to share storage / connection.\nnamespace=subdomain;}// Always treat the value of the `ns` as the namespace name if it is present.\nif('ns'in queryParams){namespace=queryParams['ns'];}}return{host:host,port:port,domain:domain,subdomain:subdomain,secure:secure,scheme:scheme,pathString:pathString,namespace:namespace};};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */var DataSnapshot=/** @class */function(){/**\r\n     * @param node_ A SnapshotNode to wrap.\r\n     * @param ref_ The ref of the location this snapshot came from.\r\n     * @param index_ The iteration order for this snapshot\r\n     */function DataSnapshot(node_,ref_,index_){this.node_=node_;this.ref_=ref_;this.index_=index_;}/**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.val=function(){validateArgCount('DataSnapshot.val',0,0,arguments.length);return this.node_.val();};/**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n     */DataSnapshot.prototype.exportVal=function(){validateArgCount('DataSnapshot.exportVal',0,0,arguments.length);return this.node_.val(true);};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nDataSnapshot.prototype.toJSON=function(){// Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\nvalidateArgCount('DataSnapshot.toJSON',0,1,arguments.length);return this.exportVal();};/**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return Whether the snapshot contains a non-null value, or is empty.\r\n     */DataSnapshot.prototype.exists=function(){validateArgCount('DataSnapshot.exists',0,0,arguments.length);return!this.node_.isEmpty();};/**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param childPathString Path to a child.\r\n     * @return DataSnapshot for child node.\r\n     */DataSnapshot.prototype.child=function(childPathString){validateArgCount('DataSnapshot.child',0,1,arguments.length);// Ensure the childPath is a string (can be a number)\nchildPathString=String(childPathString);validatePathString('DataSnapshot.child',1,childPathString,false);var childPath=new Path(childPathString);var childRef=this.ref_.child(childPath);return new DataSnapshot(this.node_.getChild(childPath),childRef,PRIORITY_INDEX);};/**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param childPathString Path to a child.\r\n     * @return Whether the child exists.\r\n     */DataSnapshot.prototype.hasChild=function(childPathString){validateArgCount('DataSnapshot.hasChild',1,1,arguments.length);validatePathString('DataSnapshot.hasChild',1,childPathString,false);var childPath=new Path(childPathString);return!this.node_.getChild(childPath).isEmpty();};/**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return The priority.\r\n     */DataSnapshot.prototype.getPriority=function(){validateArgCount('DataSnapshot.getPriority',0,0,arguments.length);// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\nreturn this.node_.getPriority().val();};/**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action Callback function to be called\r\n     * for each child.\r\n     * @return True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */DataSnapshot.prototype.forEach=function(action){var _this=this;validateArgCount('DataSnapshot.forEach',1,1,arguments.length);validateCallback('DataSnapshot.forEach',1,action,false);if(this.node_.isLeafNode()){return false;}var childrenNode=this.node_;// Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\nreturn!!childrenNode.forEachChild(this.index_,function(key,node){return action(new DataSnapshot(node,_this.ref_.child(key),PRIORITY_INDEX));});};/**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return True if the DataSnapshot contains 1 or more child nodes.\r\n     */DataSnapshot.prototype.hasChildren=function(){validateArgCount('DataSnapshot.hasChildren',0,0,arguments.length);if(this.node_.isLeafNode()){return false;}else{return!this.node_.isEmpty();}};Object.defineProperty(DataSnapshot.prototype,\"key\",{get:function(){return this.ref_.getKey();},enumerable:false,configurable:true});/**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return The number of children that this DataSnapshot contains.\r\n     */DataSnapshot.prototype.numChildren=function(){validateArgCount('DataSnapshot.numChildren',0,0,arguments.length);return this.node_.numChildren();};/**\r\n     * @return The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */DataSnapshot.prototype.getRef=function(){validateArgCount('DataSnapshot.ref',0,0,arguments.length);return this.ref_;};Object.defineProperty(DataSnapshot.prototype,\"ref\",{get:function(){return this.getRef();},enumerable:false,configurable:true});return DataSnapshot;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var OnDisconnect=/** @class */function(){function OnDisconnect(repo_,path_){this.repo_=repo_;this.path_=path_;}OnDisconnect.prototype.cancel=function(onComplete){validateArgCount('OnDisconnect.cancel',0,1,arguments.length);validateCallback('OnDisconnect.cancel',1,onComplete,true);var deferred=new Deferred();repoOnDisconnectCancel(this.repo_,this.path_,deferred.wrapCallback(onComplete));return deferred.promise;};OnDisconnect.prototype.remove=function(onComplete){validateArgCount('OnDisconnect.remove',0,1,arguments.length);validateWritablePath('OnDisconnect.remove',this.path_);validateCallback('OnDisconnect.remove',1,onComplete,true);var deferred=new Deferred();repoOnDisconnectSet(this.repo_,this.path_,null,deferred.wrapCallback(onComplete));return deferred.promise;};OnDisconnect.prototype.set=function(value,onComplete){validateArgCount('OnDisconnect.set',1,2,arguments.length);validateWritablePath('OnDisconnect.set',this.path_);validateFirebaseDataArg('OnDisconnect.set',1,value,this.path_,false);validateCallback('OnDisconnect.set',2,onComplete,true);var deferred=new Deferred();repoOnDisconnectSet(this.repo_,this.path_,value,deferred.wrapCallback(onComplete));return deferred.promise;};OnDisconnect.prototype.setWithPriority=function(value,priority,onComplete){validateArgCount('OnDisconnect.setWithPriority',2,3,arguments.length);validateWritablePath('OnDisconnect.setWithPriority',this.path_);validateFirebaseDataArg('OnDisconnect.setWithPriority',1,value,this.path_,false);validatePriority('OnDisconnect.setWithPriority',2,priority,false);validateCallback('OnDisconnect.setWithPriority',3,onComplete,true);var deferred=new Deferred();repoOnDisconnectSetWithPriority(this.repo_,this.path_,value,priority,deferred.wrapCallback(onComplete));return deferred.promise;};OnDisconnect.prototype.update=function(objectToMerge,onComplete){validateArgCount('OnDisconnect.update',1,2,arguments.length);validateWritablePath('OnDisconnect.update',this.path_);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the '+'existing data, or an Object with integer keys if you really do want to only update some of the children.');}validateFirebaseMergeDataArg('OnDisconnect.update',1,objectToMerge,this.path_,false);validateCallback('OnDisconnect.update',2,onComplete,true);var deferred=new Deferred();repoOnDisconnectUpdate(this.repo_,this.path_,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};return OnDisconnect;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Encapsulates the data needed to raise an event\r\n */var DataEvent=/** @class */function(){/**\r\n     * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration The function to call to with the event data. User provided\r\n     * @param snapshot The data backing the event\r\n     * @param prevName Optional, the name of the previous child for child_* events.\r\n     */function DataEvent(eventType,eventRegistration,snapshot,prevName){this.eventType=eventType;this.eventRegistration=eventRegistration;this.snapshot=snapshot;this.prevName=prevName;}/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getPath=function(){var ref=this.snapshot.getRef();if(this.eventType==='value'){return ref.path;}else{return ref.getParent().path;}};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getEventType=function(){return this.eventType;};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**\r\n     * @inheritDoc\r\n     */DataEvent.prototype.toString=function(){return this.getPath().toString()+':'+this.eventType+':'+stringify(this.snapshot.exportVal());};return DataEvent;}();var CancelEvent=/** @class */function(){function CancelEvent(eventRegistration,error,path){this.eventRegistration=eventRegistration;this.error=error;this.path=path;}/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getPath=function(){return this.path;};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getEventType=function(){return'cancel';};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this);};/**\r\n     * @inheritDoc\r\n     */CancelEvent.prototype.toString=function(){return this.path.toString()+':cancel';};return CancelEvent;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Represents registration for 'value' events.\r\n */var ValueEventRegistration=/** @class */function(){function ValueEventRegistration(callback_,cancelCallback_,context_){this.callback_=callback_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.respondsTo=function(eventType){return eventType==='value';};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.createEvent=function(change,query){var index=query.getQueryParams().getIndex();return new DataEvent('value',this,new DataSnapshot(change.snapshotNode,query.getRef(),index));};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){assert(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_1=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event\ncancelCB_1.call(ctx,eventData.error);};}else{var cb_1=this.callback_;return function(){cb_1.call(ctx,eventData.snapshot);};}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.matches=function(other){if(!(other instanceof ValueEventRegistration)){return false;}else if(!other.callback_||!this.callback_){// If no callback specified, we consider it to match any callback.\nreturn true;}else{return other.callback_===this.callback_&&other.context_===this.context_;}};/**\r\n     * @inheritDoc\r\n     */ValueEventRegistration.prototype.hasAnyCallback=function(){return this.callback_!==null;};return ValueEventRegistration;}();/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n */var ChildEventRegistration=/** @class */function(){function ChildEventRegistration(callbacks_,cancelCallback_,context_){this.callbacks_=callbacks_;this.cancelCallback_=cancelCallback_;this.context_=context_;}/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.respondsTo=function(eventType){var eventToCheck=eventType==='children_added'?'child_added':eventType;eventToCheck=eventToCheck==='children_removed'?'child_removed':eventToCheck;return contains(this.callbacks_,eventToCheck);};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.createCancelEvent=function(error,path){if(this.cancelCallback_){return new CancelEvent(this,error,path);}else{return null;}};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.createEvent=function(change,query){assert(change.childName!=null,'Child events should have a childName.');var ref=query.getRef().child(change.childName);var index=query.getQueryParams().getIndex();return new DataEvent(change.type,this,new DataSnapshot(change.snapshotNode,ref,index),change.prevName);};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.getEventRunner=function(eventData){var ctx=this.context_;if(eventData.getEventType()==='cancel'){assert(this.cancelCallback_,'Raising a cancel event on a listener with no cancel callback');var cancelCB_2=this.cancelCallback_;return function(){// We know that error exists, we checked above that this is a cancel event\ncancelCB_2.call(ctx,eventData.error);};}else{var cb_2=this.callbacks_[eventData.eventType];return function(){cb_2.call(ctx,eventData.snapshot,eventData.prevName);};}};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.matches=function(other){var _this=this;if(other instanceof ChildEventRegistration){if(!this.callbacks_||!other.callbacks_){return true;}else if(this.context_===other.context_){var otherKeys=Object.keys(other.callbacks_);var thisKeys=Object.keys(this.callbacks_);var otherCount=otherKeys.length;var thisCount=thisKeys.length;if(otherCount===thisCount){// If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n// If event types don't match, not a match\n// If count is not 1, exact match across all\nif(otherCount===1){var otherKey=otherKeys[0];var thisKey=thisKeys[0];return thisKey===otherKey&&(!other.callbacks_[otherKey]||!this.callbacks_[thisKey]||other.callbacks_[otherKey]===this.callbacks_[thisKey]);}else{// Exact match on each key.\nreturn thisKeys.every(function(eventType){return other.callbacks_[eventType]===_this.callbacks_[eventType];});}}}}return false;};/**\r\n     * @inheritDoc\r\n     */ChildEventRegistration.prototype.hasAnyCallback=function(){return this.callbacks_!==null;};return ChildEventRegistration;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __referenceConstructor;/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */var Query=/** @class */function(){function Query(database,path,queryParams_,orderByCalled_){this.database=database;this.path=path;this.queryParams_=queryParams_;this.orderByCalled_=orderByCalled_;this.repo=database.repo_;}Object.defineProperty(Query,\"__referenceConstructor\",{get:function(){assert(__referenceConstructor,'Reference.ts has not been loaded');return __referenceConstructor;},set:function(val){__referenceConstructor=val;},enumerable:false,configurable:true});/**\r\n     * Validates start/end values for queries.\r\n     */Query.validateQueryEndpoints_=function(params){var startNode=null;var endNode=null;if(params.hasStart()){startNode=params.getIndexStartValue();}if(params.hasEnd()){endNode=params.getIndexEndValue();}if(params.getIndex()===KEY_INDEX){var tooManyArgsError='Query: When ordering by key, you may only pass one argument to '+'startAt(), endAt(), or equalTo().';var wrongArgTypeError='Query: When ordering by key, the argument passed to startAt(), startAfter(), '+'endAt(), endBefore(), or equalTo() must be a string.';if(params.hasStart()){var startName=params.getIndexStartName();if(startName!==MIN_NAME){throw new Error(tooManyArgsError);}else if(typeof startNode!=='string'){throw new Error(wrongArgTypeError);}}if(params.hasEnd()){var endName=params.getIndexEndName();if(endName!==MAX_NAME){throw new Error(tooManyArgsError);}else if(typeof endNode!=='string'){throw new Error(wrongArgTypeError);}}}else if(params.getIndex()===PRIORITY_INDEX){if(startNode!=null&&!isValidPriority(startNode)||endNode!=null&&!isValidPriority(endNode)){throw new Error('Query: When ordering by priority, the first argument passed to startAt(), '+'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value '+'(null, a number, or a string).');}}else{assert(params.getIndex()instanceof PathIndex||params.getIndex()===VALUE_INDEX,'unknown index type.');if(startNode!=null&&typeof startNode==='object'||endNode!=null&&typeof endNode==='object'){throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or '+'equalTo() cannot be an object.');}}};/**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     */Query.validateLimit_=function(params){if(params.hasStart()&&params.hasEnd()&&params.hasLimit()&&!params.hasAnchoredLimit()){throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \"+'limitToFirst() or limitToLast() instead.');}};/**\r\n     * Validates that no other order by call has been made\r\n     */Query.prototype.validateNoPreviousOrderByCall_=function(fnName){if(this.orderByCalled_===true){throw new Error(fnName+\": You can't combine multiple orderBy calls.\");}};Query.prototype.getQueryParams=function(){return this.queryParams_;};Query.prototype.getRef=function(){validateArgCount('Query.ref',0,0,arguments.length);// This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n// However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n// method gets called.\nreturn new Query.__referenceConstructor(this.database,this.path);};Query.prototype.on=function(eventType,callback,cancelCallbackOrContext,context){validateArgCount('Query.on',2,4,arguments.length);validateEventType('Query.on',1,eventType,false);validateCallback('Query.on',2,callback,false);var ret=Query.getCancelAndContextArgs_('Query.on',cancelCallbackOrContext,context);if(eventType==='value'){this.onValueEvent(callback,ret.cancel,ret.context);}else{var callbacks={};callbacks[eventType]=callback;this.onChildEvent(callbacks,ret.cancel,ret.context);}return callback;};Query.prototype.onValueEvent=function(callback,cancelCallback,context){var container=new ValueEventRegistration(callback,cancelCallback||null,context||null);repoAddEventCallbackForQuery(this.repo,this,container);};Query.prototype.onChildEvent=function(callbacks,cancelCallback,context){var container=new ChildEventRegistration(callbacks,cancelCallback,context);repoAddEventCallbackForQuery(this.repo,this,container);};Query.prototype.off=function(eventType,callback,context){validateArgCount('Query.off',0,3,arguments.length);validateEventType('Query.off',1,eventType,true);validateCallback('Query.off',2,callback,true);validateContextObject('Query.off',3,context,true);var container=null;var callbacks=null;if(eventType==='value'){var valueCallback=callback||null;container=new ValueEventRegistration(valueCallback,null,context||null);}else if(eventType){if(callback){callbacks={};callbacks[eventType]=callback;}container=new ChildEventRegistration(callbacks,null,context||null);}repoRemoveEventCallbackForQuery(this.repo,this,container);};/**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */Query.prototype.get=function(){var _this=this;return repoGetValue(this.repo,this).then(function(node){return new DataSnapshot(node,_this.getRef(),_this.getQueryParams().getIndex());});};/**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */Query.prototype.once=function(eventType,userCallback,failureCallbackOrContext,context){var _this=this;validateArgCount('Query.once',1,4,arguments.length);validateEventType('Query.once',1,eventType,false);validateCallback('Query.once',2,userCallback,true);var ret=Query.getCancelAndContextArgs_('Query.once',failureCallbackOrContext,context);// TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n// TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n// because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n// against the Promise specification.\nvar firstCall=true;var deferred=new Deferred();// A dummy error handler in case a user wasn't expecting promises\ndeferred.promise.catch(function(){});var onceCallback=function(snapshot){// NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n// triggers multiple events (e.g. child_added or child_changed).\nif(firstCall){firstCall=false;_this.off(eventType,onceCallback);if(userCallback){userCallback.bind(ret.context)(snapshot);}deferred.resolve(snapshot);}};this.on(eventType,onceCallback,/*cancel=*/function(err){_this.off(eventType,onceCallback);if(ret.cancel){ret.cancel.bind(ret.context)(err);}deferred.reject(err);});return deferred.promise;};/**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */Query.prototype.limitToFirst=function(limit){validateArgCount('Query.limitToFirst',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToFirst: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.database,this.path,queryParamsLimitToFirst(this.queryParams_,limit),this.orderByCalled_);};/**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */Query.prototype.limitToLast=function(limit){validateArgCount('Query.limitToLast',1,1,arguments.length);if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('Query.limitToLast: First argument must be a positive integer.');}if(this.queryParams_.hasLimit()){throw new Error('Query.limitToLast: Limit was already set (by another call to limit, '+'limitToFirst, or limitToLast).');}return new Query(this.database,this.path,queryParamsLimitToLast(this.queryParams_,limit),this.orderByCalled_);};/**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */Query.prototype.orderByChild=function(path){validateArgCount('Query.orderByChild',1,1,arguments.length);if(path==='$key'){throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');}else if(path==='$priority'){throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');}else if(path==='$value'){throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');}validatePathString('Query.orderByChild',1,path,false);this.validateNoPreviousOrderByCall_('Query.orderByChild');var parsedPath=new Path(path);if(pathIsEmpty(parsedPath)){throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');}var index=new PathIndex(parsedPath);var newParams=queryParamsOrderBy(this.queryParams_,index);Query.validateQueryEndpoints_(newParams);return new Query(this.database,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the KeyIndex\r\n     */Query.prototype.orderByKey=function(){validateArgCount('Query.orderByKey',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByKey');var newParams=queryParamsOrderBy(this.queryParams_,KEY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.database,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */Query.prototype.orderByPriority=function(){validateArgCount('Query.orderByPriority',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByPriority');var newParams=queryParamsOrderBy(this.queryParams_,PRIORITY_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.database,this.path,newParams,/*orderByCalled=*/true);};/**\r\n     * Return a new query ordered by the ValueIndex\r\n     */Query.prototype.orderByValue=function(){validateArgCount('Query.orderByValue',0,0,arguments.length);this.validateNoPreviousOrderByCall_('Query.orderByValue');var newParams=queryParamsOrderBy(this.queryParams_,VALUE_INDEX);Query.validateQueryEndpoints_(newParams);return new Query(this.database,this.path,newParams,/*orderByCalled=*/true);};Query.prototype.startAt=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.startAt',0,2,arguments.length);validateFirebaseDataArg('Query.startAt',1,value,this.path,true);validateKey('Query.startAt',2,name,true);var newParams=queryParamsStartAt(this.queryParams_,value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasStart()){throw new Error('Query.startAt: Starting point was already set (by another call to startAt '+'or equalTo).');}// Calling with no params tells us to start at the beginning.\nif(value===undefined){value=null;name=null;}return new Query(this.database,this.path,newParams,this.orderByCalled_);};Query.prototype.startAfter=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.startAfter',0,2,arguments.length);validateFirebaseDataArg('Query.startAfter',1,value,this.path,false);validateKey('Query.startAfter',2,name,true);var newParams=queryParamsStartAfter(this.queryParams_,value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasStart()){throw new Error('Query.startAfter: Starting point was already set (by another call to startAt, startAfter '+'or equalTo).');}return new Query(this.database,this.path,newParams,this.orderByCalled_);};Query.prototype.endAt=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.endAt',0,2,arguments.length);validateFirebaseDataArg('Query.endAt',1,value,this.path,true);validateKey('Query.endAt',2,name,true);var newParams=queryParamsEndAt(this.queryParams_,value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasEnd()){throw new Error('Query.endAt: Ending point was already set (by another call to endAt, endBefore, or '+'equalTo).');}return new Query(this.database,this.path,newParams,this.orderByCalled_);};Query.prototype.endBefore=function(value,name){if(value===void 0){value=null;}validateArgCount('Query.endBefore',0,2,arguments.length);validateFirebaseDataArg('Query.endBefore',1,value,this.path,false);validateKey('Query.endBefore',2,name,true);var newParams=queryParamsEndBefore(this.queryParams_,value,name);Query.validateLimit_(newParams);Query.validateQueryEndpoints_(newParams);if(this.queryParams_.hasEnd()){throw new Error('Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or '+'equalTo).');}return new Query(this.database,this.path,newParams,this.orderByCalled_);};/**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */Query.prototype.equalTo=function(value,name){validateArgCount('Query.equalTo',1,2,arguments.length);validateFirebaseDataArg('Query.equalTo',1,value,this.path,false);validateKey('Query.equalTo',2,name,true);if(this.queryParams_.hasStart()){throw new Error('Query.equalTo: Starting point was already set (by another call to startAt/startAfter or '+'equalTo).');}if(this.queryParams_.hasEnd()){throw new Error('Query.equalTo: Ending point was already set (by another call to endAt/endBefore or '+'equalTo).');}return this.startAt(value,name).endAt(value,name);};/**\r\n     * @return URL for this location.\r\n     */Query.prototype.toString=function(){validateArgCount('Query.toString',0,0,arguments.length);return this.repo.toString()+pathToUrlEncodedString(this.path);};// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users.\nQuery.prototype.toJSON=function(){// An optional spacer argument is unnecessary for a string.\nvalidateArgCount('Query.toJSON',0,1,arguments.length);return this.toString();};/**\r\n     * An object representation of the query parameters used by this Query.\r\n     */Query.prototype.queryObject=function(){return queryParamsGetQueryObject(this.queryParams_);};Query.prototype.queryIdentifier=function(){var obj=this.queryObject();var id=ObjectToUniqueKey(obj);return id==='{}'?'default':id;};/**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */Query.prototype.isEqual=function(other){validateArgCount('Query.isEqual',1,1,arguments.length);if(!(other instanceof Query)){var error='Query.isEqual failed: First argument must be an instance of firebase.database.Query.';throw new Error(error);}var sameRepo=this.repo===other.repo;var samePath=pathEquals(this.path,other.path);var sameQueryIdentifier=this.queryIdentifier()===other.queryIdentifier();return sameRepo&&samePath&&sameQueryIdentifier;};/**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName The function name (on or once)\r\n     *\r\n     */Query.getCancelAndContextArgs_=function(fnName,cancelOrContext,context){var ret={cancel:null,context:null};if(cancelOrContext&&context){ret.cancel=cancelOrContext;validateCallback(fnName,3,ret.cancel,true);ret.context=context;validateContextObject(fnName,4,ret.context,true);}else if(cancelOrContext){// we have either a cancel callback or a context.\nif(typeof cancelOrContext==='object'&&cancelOrContext!==null){// it's a context!\nret.context=cancelOrContext;}else if(typeof cancelOrContext==='function'){ret.cancel=cancelOrContext;}else{throw new Error(errorPrefix(fnName,3,true)+' must either be a cancel callback or a context object.');}}return ret;};Object.defineProperty(Query.prototype,\"ref\",{get:function(){return this.getRef();},enumerable:false,configurable:true});return Query;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var TransactionResult=/** @class */function(){/**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */function TransactionResult(committed,snapshot){this.committed=committed;this.snapshot=snapshot;}// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n// for end-users\nTransactionResult.prototype.toJSON=function(){validateArgCount('TransactionResult.toJSON',0,1,arguments.length);return{committed:this.committed,snapshot:this.snapshot.toJSON()};};return TransactionResult;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Reference=/** @class */function(_super){__extends(Reference,_super);/**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */function Reference(database,path){return _super.call(this,database,path,new QueryParams(),false)||this;}/** @return {?string} */Reference.prototype.getKey=function(){validateArgCount('Reference.key',0,0,arguments.length);if(pathIsEmpty(this.path)){return null;}else{return pathGetBack(this.path);}};Reference.prototype.child=function(pathString){validateArgCount('Reference.child',1,1,arguments.length);if(typeof pathString==='number'){pathString=String(pathString);}else if(!(pathString instanceof Path)){if(pathGetFront(this.path)===null){validateRootPathString('Reference.child',1,pathString,false);}else{validatePathString('Reference.child',1,pathString,false);}}return new Reference(this.database,pathChild(this.path,pathString));};/** @return {?Reference} */Reference.prototype.getParent=function(){validateArgCount('Reference.parent',0,0,arguments.length);var parentPath=pathParent(this.path);return parentPath===null?null:new Reference(this.database,parentPath);};/** @return {!Reference} */Reference.prototype.getRoot=function(){validateArgCount('Reference.root',0,0,arguments.length);var ref=this;while(ref.getParent()!==null){ref=ref.getParent();}return ref;};Reference.prototype.set=function(newVal,onComplete){validateArgCount('Reference.set',1,2,arguments.length);validateWritablePath('Reference.set',this.path);validateFirebaseDataArg('Reference.set',1,newVal,this.path,false);validateCallback('Reference.set',2,onComplete,true);var deferred=new Deferred();repoSetWithPriority(this.repo,this.path,newVal,/*priority=*/null,deferred.wrapCallback(onComplete));return deferred.promise;};Reference.prototype.update=function(objectToMerge,onComplete){validateArgCount('Reference.update',1,2,arguments.length);validateWritablePath('Reference.update',this.path);if(Array.isArray(objectToMerge)){var newObjectToMerge={};for(var i=0;i<objectToMerge.length;++i){newObjectToMerge[''+i]=objectToMerge[i];}objectToMerge=newObjectToMerge;warn('Passing an Array to Firebase.update() is deprecated. '+'Use set() if you want to overwrite the existing data, or '+'an Object with integer keys if you really do want to '+'only update some of the children.');}validateFirebaseMergeDataArg('Reference.update',1,objectToMerge,this.path,false);validateCallback('Reference.update',2,onComplete,true);var deferred=new Deferred();repoUpdate(this.repo,this.path,objectToMerge,deferred.wrapCallback(onComplete));return deferred.promise;};Reference.prototype.setWithPriority=function(newVal,newPriority,onComplete){validateArgCount('Reference.setWithPriority',2,3,arguments.length);validateWritablePath('Reference.setWithPriority',this.path);validateFirebaseDataArg('Reference.setWithPriority',1,newVal,this.path,false);validatePriority('Reference.setWithPriority',2,newPriority,false);validateCallback('Reference.setWithPriority',3,onComplete,true);if(this.getKey()==='.length'||this.getKey()==='.keys'){throw'Reference.setWithPriority failed: '+this.getKey()+' is a read-only object.';}var deferred=new Deferred();repoSetWithPriority(this.repo,this.path,newVal,newPriority,deferred.wrapCallback(onComplete));return deferred.promise;};Reference.prototype.remove=function(onComplete){validateArgCount('Reference.remove',0,1,arguments.length);validateWritablePath('Reference.remove',this.path);validateCallback('Reference.remove',1,onComplete,true);return this.set(null,onComplete);};Reference.prototype.transaction=function(transactionUpdate,onComplete,applyLocally){var _this=this;validateArgCount('Reference.transaction',1,3,arguments.length);validateWritablePath('Reference.transaction',this.path);validateCallback('Reference.transaction',1,transactionUpdate,false);validateCallback('Reference.transaction',2,onComplete,true);// NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n// to expose it.\nvalidateBoolean('Reference.transaction',3,applyLocally,true);if(this.getKey()==='.length'||this.getKey()==='.keys'){throw'Reference.transaction failed: '+this.getKey()+' is a read-only object.';}if(applyLocally===undefined){applyLocally=true;}var deferred=new Deferred();if(typeof onComplete==='function'){deferred.promise.catch(function(){});}var promiseComplete=function(error,committed,node){if(error){deferred.reject(error);if(typeof onComplete==='function'){onComplete(error,committed,null);}}else{var snapshot=new DataSnapshot(node,new Reference(_this.database,_this.path),PRIORITY_INDEX);deferred.resolve(new TransactionResult(committed,snapshot));if(typeof onComplete==='function'){onComplete(null,committed,snapshot);}}};// Add a watch to make sure we get server updates.\nvar valueCallback=function(){};var watchRef=new Reference(this.database,this.path);watchRef.on('value',valueCallback);var unwatcher=function(){watchRef.off('value',valueCallback);};repoStartTransaction(this.repo,this.path,transactionUpdate,promiseComplete,unwatcher,applyLocally);return deferred.promise;};Reference.prototype.setPriority=function(priority,onComplete){validateArgCount('Reference.setPriority',1,2,arguments.length);validateWritablePath('Reference.setPriority',this.path);validatePriority('Reference.setPriority',1,priority,false);validateCallback('Reference.setPriority',2,onComplete,true);var deferred=new Deferred();repoSetWithPriority(this.repo,pathChild(this.path,'.priority'),priority,null,deferred.wrapCallback(onComplete));return deferred.promise;};Reference.prototype.push=function(value,onComplete){validateArgCount('Reference.push',0,2,arguments.length);validateWritablePath('Reference.push',this.path);validateFirebaseDataArg('Reference.push',1,value,this.path,true);validateCallback('Reference.push',2,onComplete,true);var now=repoServerTime(this.repo);var name=nextPushId(now);// push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n// We use child() to create handles to two different references. The first is turned into a\n// ThennableReference below by adding then() and catch() methods and is used as the\n// return value of push(). The second remains a regular Reference and is used as the fulfilled\n// value of the first ThennableReference.\nvar thennablePushRef=this.child(name);var pushRef=this.child(name);var promise;if(value!=null){promise=thennablePushRef.set(value,onComplete).then(function(){return pushRef;});}else{promise=Promise.resolve(pushRef);}thennablePushRef.then=promise.then.bind(promise);thennablePushRef.catch=promise.then.bind(promise,undefined);if(typeof onComplete==='function'){promise.catch(function(){});}return thennablePushRef;};Reference.prototype.onDisconnect=function(){validateWritablePath('Reference.onDisconnect',this.path);return new OnDisconnect(this.repo,this.path);};Object.defineProperty(Reference.prototype,\"key\",{get:function(){return this.getKey();},enumerable:false,configurable:true});Object.defineProperty(Reference.prototype,\"parent\",{get:function(){return this.getParent();},enumerable:false,configurable:true});Object.defineProperty(Reference.prototype,\"root\",{get:function(){return this.getRoot();},enumerable:false,configurable:true});return Reference;}(Query);/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */Query.__referenceConstructor=Reference;syncPointSetReferenceConstructor(Reference);/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */var FIREBASE_DATABASE_EMULATOR_HOST_VAR='FIREBASE_DATABASE_EMULATOR_HOST';/**\r\n * Creates and caches Repo instances.\r\n */var repos={};/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */var useRestClient=false;/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */function repoManagerApplyEmulatorSettings(repo,host,port){repo.repoInfo_=new RepoInfo(host+\":\"+port,/* secure= */false,repo.repoInfo_.namespace,repo.repoInfo_.webSocketOnly,repo.repoInfo_.nodeAdmin,repo.repoInfo_.persistenceKey,repo.repoInfo_.includeNamespaceInQueryParams);if(repo.repoInfo_.nodeAdmin){repo.authTokenProvider_=new EmulatorAdminTokenProvider();}}/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n */function repoManagerDatabaseFromApp(app,authProvider,url,nodeAdmin){var dbUrl=url||app.options.databaseURL;if(dbUrl===undefined){if(!app.options.projectId){fatal(\"Can't determine Firebase Database URL. Be sure to include \"+' a Project ID when calling firebase.initializeApp().');}log('Using default host for project ',app.options.projectId);dbUrl=app.options.projectId+\"-default-rtdb.firebaseio.com\";}var parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);var repoInfo=parsedUrl.repoInfo;var isEmulator;var dbEmulatorHost=undefined;if(typeof process!=='undefined'){dbEmulatorHost=process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];}if(dbEmulatorHost){isEmulator=true;dbUrl=\"http://\"+dbEmulatorHost+\"?ns=\"+repoInfo.namespace;parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);repoInfo=parsedUrl.repoInfo;}else{isEmulator=!parsedUrl.repoInfo.secure;}var authTokenProvider=nodeAdmin&&isEmulator?new EmulatorAdminTokenProvider():new FirebaseAuthTokenProvider(app,authProvider);validateUrl('Invalid Firebase Database URL',1,parsedUrl);if(!pathIsEmpty(parsedUrl.path)){fatal('Database URL must point to the root of a Firebase Database '+'(not including a child path).');}var repo=repoManagerCreateRepo(repoInfo,app,authTokenProvider);return new Database(repo);}/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */function repoManagerDeleteRepo(repo){var appRepos=safeGet(repos,repo.app.name);// This should never happen...\nif(!appRepos||safeGet(appRepos,repo.key)!==repo){fatal(\"Database \"+repo.app.name+\"(\"+repo.repoInfo_+\") has already been deleted.\");}repoInterrupt(repo);delete appRepos[repo.key];}/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo The metadata about the Repo\r\n * @return The Repo object for the specified server / repoName.\r\n */function repoManagerCreateRepo(repoInfo,app,authTokenProvider){var appRepos=safeGet(repos,app.name);if(!appRepos){appRepos={};repos[app.name]=appRepos;}var repo=safeGet(appRepos,repoInfo.toURLString());if(repo){fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');}repo=new Repo(repoInfo,useRestClient,app,authTokenProvider);appRepos[repoInfo.toURLString()]=repo;return repo;}/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */function repoManagerForceRestClient(forceRestClient){useRestClient=forceRestClient;}/**\r\n * Class representing a firebase database.\r\n */var Database=/** @class */function(){/**\r\n     * The constructor should not be called by users of our public API.\r\n     */function Database(repoInternal_){var _this=this;this.repoInternal_=repoInternal_;/** Track if the instance has been used (root or repo accessed) */this.instanceStarted_=false;this.INTERNAL={delete:function(){return __awaiter(_this,void 0,void 0,function(){return __generator(this,function(_a){this.checkDeleted_('delete');repoManagerDeleteRepo(this.repo_);this.repoInternal_=null;this.rootInternal_=null;return[2/*return*/];});});}};if(!(repoInternal_ instanceof Repo)){fatal(\"Don't call new Database() directly - please use firebase.database().\");}}Object.defineProperty(Database.prototype,\"repo_\",{get:function(){if(!this.instanceStarted_){repoStart(this.repoInternal_);this.instanceStarted_=true;}return this.repoInternal_;},enumerable:false,configurable:true});Object.defineProperty(Database.prototype,\"root_\",{get:function(){if(!this.rootInternal_){this.rootInternal_=new Reference(this,newEmptyPath());}return this.rootInternal_;},enumerable:false,configurable:true});Object.defineProperty(Database.prototype,\"app\",{get:function(){return this.repo_.app;},enumerable:false,configurable:true});/**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host the emulator host (ex: localhost)\r\n     * @param port the emulator port (ex: 8080)\r\n     */Database.prototype.useEmulator=function(host,port){this.checkDeleted_('useEmulator');if(this.instanceStarted_){fatal('Cannot call useEmulator() after instance has already been initialized.');return;}// Modify the repo to apply emulator settings\nrepoManagerApplyEmulatorSettings(this.repoInternal_,host,port);};Database.prototype.ref=function(path){this.checkDeleted_('ref');validateArgCount('database.ref',0,1,arguments.length);if(path instanceof Reference){return this.refFromURL(path.toString());}return path!==undefined?this.root_.child(path):this.root_;};/**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @return Firebase reference.\r\n     */Database.prototype.refFromURL=function(url){/** @const {string} */var apiName='database.refFromURL';this.checkDeleted_(apiName);validateArgCount(apiName,1,1,arguments.length);var parsedURL=parseRepoInfo(url,this.repo_.repoInfo_.nodeAdmin);validateUrl(apiName,1,parsedURL);var repoInfo=parsedURL.repoInfo;if(!this.repo_.repoInfo_.isCustomHost()&&repoInfo.host!==this.repo_.repoInfo_.host){fatal(apiName+': Host name does not match the current database: '+'(found '+repoInfo.host+' but expected '+this.repo_.repoInfo_.host+')');}return this.ref(parsedURL.path.toString());};Database.prototype.checkDeleted_=function(apiName){if(this.repoInternal_===null){fatal('Cannot call '+apiName+' on a deleted database.');}};// Make individual repo go offline.\nDatabase.prototype.goOffline=function(){validateArgCount('database.goOffline',0,0,arguments.length);this.checkDeleted_('goOffline');repoInterrupt(this.repo_);};Database.prototype.goOnline=function(){validateArgCount('database.goOnline',0,0,arguments.length);this.checkDeleted_('goOnline');repoResume(this.repo_);};Database.ServerValue={TIMESTAMP:{'.sv':'timestamp'},increment:function(delta){return{'.sv':{'increment':delta}};}};return Database;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */var forceLongPolling=function(){WebSocketConnection.forceDisallow();BrowserPollConnection.forceAllow();};var forceWebSockets=function(){BrowserPollConnection.forceDisallow();};/* Used by App Manager */var isWebSocketsAvailable=function(){return WebSocketConnection['isAvailable']();};var setSecurityDebugCallback=function(ref,callback){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nref.repo.persistentConnection_.securityDebugCallback_=callback;};var stats=function(ref,showDelta){repoStats(ref.repo,showDelta);};var statsIncrementCounter=function(ref,metric){repoStatsIncrementCounter(ref.repo,metric);};var dataUpdateCount=function(ref){return ref.repo.dataUpdateCount;};var interceptServerData=function(ref,callback){return repoInterceptServerData(ref.repo,callback);};/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */function initStandalone(_a){var app=_a.app,url=_a.url,version=_a.version,customAuthImpl=_a.customAuthImpl,namespace=_a.namespace,_b=_a.nodeAdmin,nodeAdmin=_b===void 0?false:_b;setSDKVersion(version);/**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */var authProvider=new Provider('auth-internal',new ComponentContainer('database-standalone'));authProvider.setComponent(new Component('auth-internal',function(){return customAuthImpl;},\"PRIVATE\"/* PRIVATE */));return{instance:repoManagerDatabaseFromApp(app,authProvider,url,nodeAdmin),namespace:namespace};}var INTERNAL=/*#__PURE__*/Object.freeze({__proto__:null,forceLongPolling:forceLongPolling,forceWebSockets:forceWebSockets,isWebSocketsAvailable:isWebSocketsAvailable,setSecurityDebugCallback:setSecurityDebugCallback,stats:stats,statsIncrementCounter:statsIncrementCounter,dataUpdateCount:dataUpdateCount,interceptServerData:interceptServerData,initStandalone:initStandalone});/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var DataConnection=PersistentConnection;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.simpleListen=function(pathString,onComplete){this.sendRequest('q',{p:pathString},onComplete);};// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.echo=function(data,onEcho){this.sendRequest('echo',{d:data},onEcho);};// RealTimeConnection properties that we use in tests.\nvar RealTimeConnection=Connection;var hijackHash=function(newHash){var oldPut=PersistentConnection.prototype.put;PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){if(hash!==undefined){hash=newHash();}oldPut.call(this,pathString,data,onComplete,hash);};return function(){PersistentConnection.prototype.put=oldPut;};};var ConnectionTarget=RepoInfo;var queryIdentifier=function(query){return query.queryIdentifier();};/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */var forceRestClient=function(forceRestClient){repoManagerForceRestClient(forceRestClient);};var TEST_ACCESS=/*#__PURE__*/Object.freeze({__proto__:null,DataConnection:DataConnection,RealTimeConnection:RealTimeConnection,hijackHash:hijackHash,ConnectionTarget:ConnectionTarget,queryIdentifier:queryIdentifier,forceRestClient:forceRestClient});/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ServerValue=Database.ServerValue;function registerDatabase(instance){// set SDK_VERSION\nsetSDKVersion(instance.SDK_VERSION);// Register the Database Service with the 'firebase' namespace.\nvar namespace=instance.INTERNAL.registerComponent(new Component('database',function(container,_a){var url=_a.instanceIdentifier;/* Dependencies */ // getImmediate for FirebaseApp will always succeed\nvar app=container.getProvider('app').getImmediate();var authProvider=container.getProvider('auth-internal');return repoManagerDatabaseFromApp(app,authProvider,url,undefined);},\"PUBLIC\"/* PUBLIC */).setServiceProps(// firebase.database namespace properties\n{Reference:Reference,Query:Query,Database:Database,DataSnapshot:DataSnapshot,enableLogging:enableLogging,INTERNAL:INTERNAL,ServerValue:ServerValue,TEST_ACCESS:TEST_ACCESS}).setMultipleInstances(true));instance.registerVersion(name,version);if(isNodeSdk()){module.exports=namespace;}}registerDatabase(firebase);export{DataSnapshot,Database,OnDisconnect,Query,Reference,ServerValue,enableLogging,registerDatabase};","map":{"version":3,"names":["DOMStorageWrapper","domStorage_","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spreadArray","__read","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","FirebaseAuthTokenProvider","app_","authProvider_","_this","auth_","getImmediate","optional","then","auth","getToken","forceRefresh","Promise","resolve","catch","reject","addTokenChangeListener","listener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","options","EmulatorAdminTokenProvider","accessToken","EMULATOR_AUTH_TOKEN","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","toURLString","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","toProcess","this_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","_a","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","__values","ALL_TRANSPORTS","_c","next","done","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","undefined","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","__extends","call","online_","isMobileCordova","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","action","onResponse","curReqNum","r","deferred","Deferred","request","p","q","queryObject","outstandingGet","index","sendGet_","promise","listen","currentHashFn","tag","queryId","queryIdentifier","has","getQueryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","interrupt","resume","isEmpty","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","values","_d","queries","_e","e_2","_f","clientName","isReactNative","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE","setMaxNode","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","nodeFromJSON","MAX_NODE$1","setNodeFromJSON","setMaxNode$1","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","__assign","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","MIN_PUSH_CHAR","MAX_PUSH_CHAR","MAX_KEY_LEN","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsGetNodeFilter","queryParams","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","status_1","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","statsReporterIncludeStat","reporter","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","viewProcessorCacheHasChild","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor","SyncPoint","views","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","database","syncPointGetQueryViews","syncPointGetCompleteServerCache","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","syncTreeAckUserWrite","needToReevaluate","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","getRef","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","argumentNumber","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateEventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","isMerge","repoOnDataUpdate","repoOnConnectStatus","authOverride","appId","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoInterceptServerData","repoRunOnDisconnectEvents","repoGetNextWriteId","repoGetValue","cached","err","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","repoOnDisconnectSet","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","repoStats","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStatsIncrementCounter","metric","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","DataSnapshot","ref_","validateArgCount","exportVal","toJSON","exists","childPathString","childRef","validateCallback","hasChildren","getKey","OnDisconnect","repo_","cancel","wrapCallback","setWithPriority","objectToMerge","newObjectToMerge","DataEvent","snapshot","ref","getParent","getEventType","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","ctx","cancelCB_1","cb_1","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","__referenceConstructor","Query","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit_","validateNoPreviousOrderByCall_","cancelCallbackOrContext","ret","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","container","validateContextObject","valueCallback","once","userCallback","failureCallbackOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","TransactionResult","committed","Reference","parentPath","getRoot","promiseComplete","watchRef","setPriority","thennablePushRef","pushRef","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","repoManagerDatabaseFromApp","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appRepos","repoManagerForceRestClient","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","__awaiter","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","forceLongPolling","forceWebSockets","setSecurityDebugCallback","statsIncrementCounter","interceptServerData","initStandalone","customAuthImpl","Provider","ComponentContainer","setComponent","Component","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","registerDatabase","registerComponent","instanceIdentifier","getProvider","setServiceProps","TEST_ACCESS","setMultipleInstances","registerVersion","module","exports","firebase"],"sources":["../src/core/storage/DOMStorageWrapper.ts","../src/core/storage/MemoryStorage.ts","../src/core/storage/storage.ts","../src/core/util/util.ts","../src/core/AuthTokenProvider.ts","../src/realtime/Constants.ts","../src/core/RepoInfo.ts","../src/core/stats/StatsCollection.ts","../src/core/stats/StatsManager.ts","../src/realtime/polling/PacketReceiver.ts","../src/realtime/BrowserPollConnection.ts","../src/core/version.ts","../src/realtime/WebSocketConnection.ts","../src/realtime/TransportManager.ts","../src/realtime/Connection.ts","../src/core/ServerActions.ts","../src/core/util/EventEmitter.ts","../src/core/util/OnlineMonitor.ts","../src/core/util/Path.ts","../src/core/util/VisibilityMonitor.ts","../src/core/PersistentConnection.ts","../src/core/snap/Node.ts","../src/core/snap/indexes/Index.ts","../src/core/snap/indexes/KeyIndex.ts","../src/core/util/SortedMap.ts","../src/core/snap/comparators.ts","../src/core/snap/snap.ts","../src/core/snap/LeafNode.ts","../src/core/snap/indexes/PriorityIndex.ts","../src/core/snap/childSet.ts","../src/core/snap/IndexMap.ts","../src/core/snap/ChildrenNode.ts","../src/core/snap/nodeFromJSON.ts","../src/core/snap/indexes/PathIndex.ts","../src/core/snap/indexes/ValueIndex.ts","../src/core/util/NextPushId.ts","../src/core/view/Change.ts","../src/core/view/filter/IndexedFilter.ts","../src/core/view/filter/RangedFilter.ts","../src/core/view/filter/LimitedFilter.ts","../src/core/view/QueryParams.ts","../src/core/ReadonlyRestClient.ts","../src/core/SnapshotHolder.ts","../src/core/SparseSnapshotTree.ts","../src/core/stats/StatsListener.ts","../src/core/stats/StatsReporter.ts","../src/core/operation/Operation.ts","../src/core/operation/AckUserWrite.ts","../src/core/operation/ListenComplete.ts","../src/core/operation/Overwrite.ts","../src/core/operation/Merge.ts","../src/core/view/CacheNode.ts","../src/core/view/EventGenerator.ts","../src/core/view/ViewCache.ts","../src/core/util/ImmutableTree.ts","../src/core/CompoundWrite.ts","../src/core/WriteTree.ts","../src/core/view/ChildChangeAccumulator.ts","../src/core/view/CompleteChildSource.ts","../src/core/view/ViewProcessor.ts","../src/core/view/View.ts","../src/core/SyncPoint.ts","../src/core/SyncTree.ts","../src/core/util/ServerValues.ts","../src/core/util/Tree.ts","../src/core/util/validation.ts","../src/core/view/EventQueue.ts","../src/core/Repo.ts","../src/core/util/libs/parser.ts","../src/api/DataSnapshot.ts","../src/api/onDisconnect.ts","../src/core/view/Event.ts","../src/core/view/EventRegistration.ts","../src/api/Query.ts","../src/api/TransactionResult.ts","../src/api/Reference.ts","../src/api/Database.ts","../src/api/internal.ts","../src/api/test_access.ts","../index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key The key to save the value under\n   * @param value The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @return The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { Query } from '../../api/Query';\nimport { SessionStorage } from '../storage/storage';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str The string to hash\n * @return {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ A flag to turn on logging, or a custom logger\n * @param persistent Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @return {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str The string\n * @param segsize The maximum number of chars in the string.\n * @return The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj The object or array to iterate over\n * @param fn The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback Callback function.\n * @param context Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport const errorForServerCode = function (code: string, query: Query): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query.path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n};\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback Optional onComplete callback.\n * @param varArgs Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @return {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn Function to run.\n * @param time Milliseconds to wait before running.\n * @return The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { FirebaseAppLike } from '../api/Database';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n  constructor(\n    private app_: FirebaseAppLike,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.get().then(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(() => listener(null), 0);\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.app_.name +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\nexport class EmulatorAdminTokenProvider implements AuthTokenProvider {\n  private static EMULATOR_AUTH_TOKEN = 'owner';\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host Hostname portion of the url for the repo\n   * @param secure Whether or not this repo is accessed over ssl\n   * @param namespace The namespace represented by the repo\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\n   * @param persistenceKey Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\n   *                                         transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\n   *                                     connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) =>\n      repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n  }\n\n  /**\n   * @param onMessage Callback when messages arrive\n   * @param onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[\n          FIREBASE_LONGPOLL_CALLBACK_ID_PARAM\n        ] = this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[\n        FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier\n      ] = onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const rstate = (newScript as any).readyState;\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript.onload = (newScript as any).onreadystatechange = null;\n              if (newScript.parentNode) {\n                newScript.parentNode.removeChild(newScript);\n              }\n              loadCB();\n            }\n          };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n// SDK_VERSION should be set before any database instance is created\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo The info for the websocket endpoint.\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\n   * @return connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage Callback when messages arrive\n   * @param onDisconnect Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        const options: { [k: string]: object } = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @return Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param repoInfo Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n    }\n  }\n\n  /**\n   * @return The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @return The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      undefined,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query } from '../api/Query';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: Query, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: Query): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @return {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @return The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @return True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @return The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @return true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @return True if this path is a parent (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path Initial Path.\n   * @param errorPrefix_ Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  isEmpty,\n  safeGet,\n  stringify,\n  assert,\n  isAdmin,\n  isValidFormat,\n  isMobileCordova,\n  isReactNative,\n  isNodeSdk,\n  Deferred\n} from '@firebase/util';\n\nimport { Query } from '../api/Query';\nimport { Connection } from '../realtime/Connection';\n\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_AUTH_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: Query;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  /** Map<path, Map<queryId, ListenSpec>> */\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ Data about the namespace we are connecting to\n   * @param applicationId_ The Firebase App ID for this project\n   * @param onDataUpdate_ A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n    this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: Query): Promise<string> {\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query.path.toString(),\n      q: query.queryObject()\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          this.onDataUpdate_(\n            request['p'],\n            payload,\n            /*isMerge*/ false,\n            /*tag*/ null\n          );\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(() => {\n        const get = this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete this.outstandingGets_[index];\n        this.outstandingGetCount_--;\n        if (this.outstandingGetCount_ === 0) {\n          this.outstandingGets_ = [];\n        }\n        this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const queryId = query.queryIdentifier();\n    const pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: Query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        const indexPath = query.path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: Query, tag: number | null) {\n    const pathString = query.path.toString();\n    const queryId = query.queryIdentifier();\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query.getQueryParams().isDefault() ||\n        !query.getQueryParams().loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const self = this;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      // First fetch auth token, and establish connection after fetching the token was successful\n      this.authTokenProvider_\n        .getToken(forceRefresh)\n        .then(result => {\n          if (!canceled) {\n            log('getToken() completed. Creating connection.');\n            self.authToken_ = result && result.accessToken;\n            connection = new Connection(\n              connId,\n              self.repoInfo_,\n              self.applicationId_,\n              onDataMessage,\n              onReady,\n              onDisconnect,\n              /* onKill= */ reason => {\n                warn(reason + ' (' + self.repoInfo_.toString() + ')');\n                self.interrupt(SERVER_KILL_INTERRUPT_REASON);\n              },\n              lastSessionId\n            );\n          } else {\n            log('getToken() completed but was canceled');\n          }\n        })\n        .then(null, error => {\n          self.log_('Failed to get token: ' + error);\n          if (!canceled) {\n            if (this.repoInfo_.nodeAdmin) {\n              // This may be a critical error for the Admin Node.js SDK, so log a warning.\n              // But getToken() may also just have temporarily failed, so we still want to\n              // continue retrying.\n              warn(error);\n            }\n            closeFn();\n          }\n        });\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @return Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @return The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode New priority to set for the node.\n   * @return Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName The name of the child to retrieve.\n   * @return The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path The path of the child to retrieve.\n   * @return The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName The name of the child to find the predecessor of.\n   * @param childNode The node to find the predecessor of.\n   * @param index The index to use to determine the predecessor\n   * @return The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName The name of the child to update.\n   * @param newChildNode The new child node\n   * @return The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path The path of the child to update.\n   * @param newChildNode The new child node, which may be an empty node\n   * @return The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @return True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @return The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @return The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat True for export format (also wire protocol format).\n   * @return Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @return hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other Another node\n   * @return -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @return Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @return This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @return A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @return a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @return a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node Node to iterate.\n   * @param isReverse_ Whether or not to iterate in reverse\n   * @param resultGenerator_\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = ({ key: node.key, value: node.value } as unknown) as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return ({ key: node.key, value: node.value } as unknown) as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key Key associated with this node.\n   * @param value Value associated with this node.\n   * @param color Whether this node is red.\n   * @param left Left child.\n   * @param right Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key New key for the node, or null.\n   * @param value New value for the node, or null.\n   * @param color New color for the node, or null.\n   * @param left New left child for the node, or null.\n   * @param right New right child for the node, or null.\n   * @return The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @return The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @return True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @return The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @return The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @return The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @return The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key Key to insert.\n   * @param value Value to insert.\n   * @param comparator Comparator.\n   * @return New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @return New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key The key of the item to remove.\n   * @param comparator Comparator.\n   * @return New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @return Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @return New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @return New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @return New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @return New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @return New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @return Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @return True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @return The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key Key to be added.\n   * @param value Value to be added.\n   * @param comparator Comparator.\n   * @return New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key The key to remove.\n   * @param comparator Comparator.\n   * @return New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @return The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @return True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @return True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @return Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ Key comparator.\n   * @param root_ (Optional) Root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key Key to be added.\n   * @param value Value to be added.\n   * @return New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key The key to remove.\n   * @return New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key The key to look up.\n   * @return The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key The key to find the predecessor of\n   * @return The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @return True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @return The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @return The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @return The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @return True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @return The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @return The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(): Node {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    /**\n     * @inheritDoc\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList Unsorted list of children\n * @param cmp The comparison method to be used\n * @param keyFn An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      return new LLRBNode(\n        key,\n        (namedNode.node as unknown) as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : ((namedNode as unknown) as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          (namedNode.node as unknown) as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ List of children of this node..\n   * @param priorityNode_ The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[(key as unknown) as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json JSON to create a node for.\n * @param priority Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  /**\n   * @inheritDoc\n   */\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @return String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type The event type */\n  type: ChangeType;\n  /** @param snapshotNode The data */\n  snapshotNode: Node;\n  /** @param childName The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  filtersNodes(): boolean {\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { MIN_NAME, MAX_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_ = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @return True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @return True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @return query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { Query } from '../api/Query';\n\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: Query, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query.getQueryParams().isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query.path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ Data about the namespace we are connecting to\n   * @param onDataUpdate_ A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: Query,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query.path.toString();\n    this.log_(\n      'Listen called for ' + pathString + ' ' + query.queryIdentifier()\n    );\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query.getQueryParams()\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: Query, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: Query): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query.getQueryParams()\n    );\n\n    const pathString = query.path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    this.authTokenProvider_\n      .getToken(/*forceRefresh=*/ false)\n      .then(authTokenData => {\n        const authToken = authTokenData && authTokenData.accessToken;\n        if (authToken) {\n          queryStringParameters['auth'] = authToken;\n        }\n\n        const url =\n          (this.repoInfo_.secure ? 'https://' : 'http://') +\n          this.repoInfo_.host +\n          pathString +\n          '?' +\n          'ns=' +\n          this.repoInfo_.namespace +\n          querystring(queryStringParameters);\n\n        this.log_('Sending REST request for ' + url);\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n          if (callback && xhr.readyState === 4) {\n            this.log_(\n              'REST Response for ' + url + ' received. status:',\n              xhr.status,\n              'response:',\n              xhr.responseText\n            );\n            let res = null;\n            if (xhr.status >= 200 && xhr.status < 300) {\n              try {\n                res = jsonEval(xhr.responseText);\n              } catch (e) {\n                warn(\n                  'Failed to parse JSON response for ' +\n                    url +\n                    ': ' +\n                    xhr.responseText\n                );\n              }\n              callback(null, res);\n            } else {\n              // 401 and 404 are expected.\n              if (xhr.status !== 401 && xhr.status !== 404) {\n                warn(\n                  'Got unsuccessful REST response for ' +\n                    url +\n                    ' Status: ' +\n                    xhr.status\n                );\n              }\n              callback(xhr.status);\n            }\n            callback = null;\n          }\n        };\n\n        xhr.open('GET', url, /*asynchronous=*/ true);\n        xhr.send();\n      });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path Path to look up snapshot for.\n * @return The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path Path to look up snapshot for.\n * @param data The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path Path to look up snapshot for.\n * @return True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath Path to look up node for.\n * @param func The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  /**\n   * @param collection\n   * @param server_\n   */\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Query } from '../../api/Query';\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: Query) {\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\n   * on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath The remainder of the path\n   * @param predicate The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(\n            pathPopFront(relativePath),\n            predicate\n          );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @return The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath Path to set value at.\n   * @param toSet Value to set.\n   * @return Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath Path to value to remove.\n   * @return Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath Path to get value for.\n   * @return Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath Path to replace subtree for.\n   * @param newTree New tree.\n   * @return Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite The CompoundWrite to remove.\n * @param path The path at which a write and all deeper writes should be removed\n * @return The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite The CompoundWrite to check.\n * @param path The path to check for\n * @return Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite The CompoundWrite to get the node from.\n * @param path The path to get a complete write\n * @return The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite The CompoundWrite to get children from.\n * @return A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @return Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node The node to apply this CompoundWrite to\n * @return The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude An optional set to be excluded\n * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude Optional writes to exclude.\n * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(\n            writesCache,\n            changePath,\n            oldEventSnap.getNode(),\n            serverNode\n          );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === undefined;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Query } from '../../api/Query';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: Query, initialViewCache: ViewCache) {\n    const params = this.query_.getQueryParams();\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): Query {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query.getQueryParams().loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration If null, remove all callbacks.\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\n * @return Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query.path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Query } from '../api/Query';\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @return Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: Query,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query.queryIdentifier();\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache Complete server cache, if we have it.\n * @param serverCacheComplete\n * @return Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: Query,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query.queryIdentifier())) {\n    syncPoint.views.set(query.queryIdentifier(), view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration If null, remove all callbacks.\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\n * @return removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: Query,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: Query[]; events: Event[] } {\n  const queryId = query.queryIdentifier();\n  const removed: Query[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query.getQueryParams().loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query.getQueryParams().loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query.database, query.path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query.getQueryParams().loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path The path to the desired complete snapshot\n * @return A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: Query\n): View | null {\n  const params = query.getQueryParams();\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query.queryIdentifier();\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: Query\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query.getQueryParams().loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Query } from '../api/Query';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\n/**\n * @typedef {{\n *   startListening: function(\n *     !Query,\n *     ?number,\n *     function():string,\n *     function(!string, *):!Array.<!Event>\n *   ):!Array.<!Event>,\n *\n *   stopListening: function(!Query, ?number)\n * }}\n */\nexport interface ListenProvider {\n  startListening(\n    query: Query,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: Query, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_ = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert True if the given write failed and needs to be reverted\n * @return Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration If null, all callbacks are removed.\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\n * @return Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: Query,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query.path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query.queryIdentifier() === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n    // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n    const removingDefault =\n      -1 !==\n      removed.findIndex(query => {\n        return query.getQueryParams().loadsAllData();\n      });\n    const covered = syncTree.syncPointTree_.findOnPath(\n      path,\n      (relativePath, parentSyncPoint) =>\n        syncPointHasCompleteView(parentSyncPoint)\n    );\n\n    if (removingDefault && !covered) {\n      const subtree = syncTree.syncPointTree_.subtree(path);\n      // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n        // Ok, we've collected all the listens we need. Set them up.\n        for (let i = 0; i < newViews.length; ++i) {\n          const view = newViews[i],\n            newQuery = view.query;\n          const listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(\n            syncTreeQueryForListening_(newQuery),\n            syncTreeTagForQuery_(syncTree, newQuery),\n            listener.hashFn,\n            listener.onComplete\n          );\n        }\n      } else {\n        // There's nothing below us, so nothing we need to start listening on\n      }\n    }\n    // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        const defaultTag: number | null = null;\n        syncTree.listenProvider_.stopListening(\n          syncTreeQueryForListening_(query),\n          defaultTag\n        );\n      } else {\n        removed.forEach((queryToRemove: Query) => {\n          const tagToRemove = syncTree.queryToTagMap.get(\n            syncTreeMakeQueryKey_(queryToRemove)\n          );\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(queryToRemove),\n            tagToRemove\n          );\n        });\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @return Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @return Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: Query,\n  eventRegistration: EventRegistration\n): Event[] {\n  const path = query.path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path The path to the data we want\n * @param writeIdsToExclude A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: Query\n): Node | null {\n  const path = query.path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query.path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query.path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query.path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nfunction syncTreeTagForQuery_(syncTree: SyncTree, query: Query): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: Query): string {\n  return query.path.toString() + '$' + query.queryIdentifier();\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(\n  queryKey: string\n): { queryId: string; path: Path } {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @return The normalized query\n */\nfunction syncTreeQueryForListening_(query: Query): Query {\n  if (\n    query.getQueryParams().loadsAllData() &&\n    !query.getQueryParams().isDefault()\n  ) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return query.getRef()!;\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: Query[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery.getQueryParams().loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @return This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: Query,\n  view: View\n): Event[] {\n  const path = query.path;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<Query[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: Query[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: Query[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery_(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path path to which write is relative\n * @param node new data written at path\n * @param syncTree current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name Optional name of the node.\n   * @param parent Optional parent node.\n   * @param node Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj Path to look up.\n * @return Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @return The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @return Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @return Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action Action to be called for each child.\n * @param includeSelf Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf Whether to call action on this node as well.\n * @return true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @return The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName The name of the child to update.\n * @param child The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  argumentNumber: number,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(\n    errorPrefixFxn(fnName, argumentNumber, optional),\n    data,\n    path\n  );\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  argumentNumber: number,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  argumentNumber: number,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateEventType = function (\n  fnName: string,\n  argumentNumber: number,\n  eventType: string,\n  optional: boolean\n) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n    default:\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\n          '\"child_changed\", or \"child_moved\".'\n      );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentNumber: number,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\nexport const validatePathString = function (\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentNumber: number,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  argumentNumber: number,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, false) +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateCredential = function (\n  fnName: string,\n  argumentNumber: number,\n  cred: unknown,\n  optional: boolean\n) {\n  if (optional && cred === undefined) {\n    return;\n  }\n  if (!(typeof cred === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid credential (a string).'\n    );\n  }\n};\n\nexport const validateBoolean = function (\n  fnName: string,\n  argumentNumber: number,\n  bool: unknown,\n  optional: boolean\n) {\n  if (optional && bool === undefined) {\n    return;\n  }\n  if (typeof bool !== 'boolean') {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) + 'must be a boolean.'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentNumber: number,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentNumber: number,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentNumber, optional) +\n        'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentNumber: number,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentNumber, optional) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentNumber, optional) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path The path to raise events for.\n * @param eventDataList The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath The path to raise events for.\n * @param eventDataList The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { FirebaseAppLike } from '../api/Database';\nimport { Query } from '../api/Query';\n\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_ = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public app: FirebaseAppLike,\n    public authTokenProvider_: AuthTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @return The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(repo: Repo): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    const authOverride = repo.app.options['databaseAuthVariableOverride'];\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      repo.app.options.appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query.path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query.path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query.path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @return The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will try to\n * establish a connection and request the value for `query`. If\n * the client is not able to retrieve the query result, it reports\n * an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(repo: Repo, query: Query): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload as string);\n      const events = syncTreeApplyServerOverwrite(\n        repo.serverSyncTree_,\n        query.path,\n        node\n      );\n      eventQueueRaiseEventsAtPath(repo.eventQueue_, query.path, events);\n      return Promise.resolve(node);\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: Query,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query.path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query.path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: Query,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query.path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query.path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path Path at which to do transaction.\n * @param transactionUpdate Update callback.\n * @param onComplete Completion callback.\n * @param unwatcher Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path The location of the queue.\n * @param queue Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath The path in mergedData that changed.\n * @return The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue The queue of transactions to run.\n * @param path The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path The location to start at.\n * @return The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @return The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @return key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      nodeAdmin,\n      webSocketOnly,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (\n  dataURL: string\n): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount, validateCallback } from '@firebase/util';\n\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { Path } from '../core/util/Path';\nimport { validatePathString } from '../core/util/validation';\n\nimport { Reference } from './Reference';\n\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nexport class DataSnapshot {\n  /**\n   * @param node_ A SnapshotNode to wrap.\n   * @param ref_ The ref of the location this snapshot came from.\n   * @param index_ The iteration order for this snapshot\n   */\n  constructor(\n    private readonly node_: Node,\n    private readonly ref_: Reference,\n    private readonly index_: Index\n  ) {}\n\n  /**\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n   * empty.\n   *\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  val(): unknown {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  }\n\n  /**\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n   * the entire node contents.\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\n   */\n  exportVal(): unknown {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): unknown {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  }\n\n  /**\n   * Returns whether the snapshot contains a non-null value.\n   *\n   * @return Whether the snapshot contains a non-null value, or is empty.\n   */\n  exists(): boolean {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  }\n\n  /**\n   * Returns a DataSnapshot of the specified child node's contents.\n   *\n   * @param childPathString Path to a child.\n   * @return DataSnapshot for child node.\n   */\n  child(childPathString: string): DataSnapshot {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n    // Ensure the childPath is a string (can be a number)\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    const childRef = this.ref_.child(childPath);\n    return new DataSnapshot(\n      this.node_.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n\n  /**\n   * Returns whether the snapshot contains a child at the specified path.\n   *\n   * @param childPathString Path to a child.\n   * @return Whether the child exists.\n   */\n  hasChild(childPathString: string): boolean {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n\n    const childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns the priority of the object, or null if no priority was set.\n   *\n   * @return The priority.\n   */\n  getPriority(): string | number | null {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this.node_.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * Iterates through child nodes and calls the specified action for each one.\n   *\n   * @param action Callback function to be called\n   * for each child.\n   * @return True if forEach was canceled by action returning true for\n   * one of the child nodes.\n   */\n  forEach(action: (d: DataSnapshot) => boolean | void): boolean {\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this.node_ as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this.index_, (key, node) => {\n      return action(\n        new DataSnapshot(node, this.ref_.child(key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns whether this DataSnapshot has children.\n   * @return True if the DataSnapshot contains 1 or more child nodes.\n   */\n  hasChildren(): boolean {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  }\n\n  get key() {\n    return this.ref_.getKey();\n  }\n\n  /**\n   * Returns the number of children for this DataSnapshot.\n   * @return The number of children that this DataSnapshot contains.\n   */\n  numChildren(): number {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n\n    return this.node_.numChildren();\n  }\n\n  /**\n   * @return The Firebase reference for the location this snapshot's data came\n   * from.\n   */\n  getRef(): Reference {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n\n    return this.ref_;\n  }\n\n  get ref() {\n    return this.getRef();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred, validateArgCount, validateCallback } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Indexable } from '../core/util/misc';\nimport { Path } from '../core/util/Path';\nimport { warn } from '../core/util/util';\nimport {\n  validateWritablePath,\n  validateFirebaseDataArg,\n  validatePriority,\n  validateFirebaseMergeDataArg\n} from '../core/util/validation';\n\nexport class OnDisconnect {\n  constructor(private repo_: Repo, private path_: Path) {}\n\n  cancel(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this.repo_,\n      this.path_,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this.repo_,\n      this.path_,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  set(value: unknown, onComplete?: (a: Error | null) => void): Promise<void> {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this.repo_,\n      this.path_,\n      value,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      1,\n      value,\n      this.path_,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this.repo_,\n      this.path_,\n      value,\n      priority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  update(\n    objectToMerge: Indexable,\n    onComplete?: (a: Error | null) => void\n  ): Promise<void> {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\n          'existing data, or an Object with integer keys if you really do want to only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      1,\n      objectToMerge,\n      this.path_,\n      false\n    );\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this.repo_,\n      this.path_,\n      objectToMerge,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/DataSnapshot';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\nexport type EventType =\n  | 'value'\n  | ' child_added'\n  | ' child_changed'\n  | ' child_moved'\n  | ' child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration The function to call to with the event data. User provided\n   * @param snapshot The data backing the event\n   * @param prevName Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: DataSnapshot,\n    public prevName?: string | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    const ref = this.snapshot.getRef();\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return this.eventType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  getPath(): Path {\n    return this.path;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventType(): string {\n    return 'cancel';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/DataSnapshot';\nimport { Query } from '../../api/Query';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { DataEvent, CancelEvent, Event, EventType } from './Event';\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: Query): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(\n    private callback_: ((d: DataSnapshot) => void) | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_: {} | null\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(change.snapshotNode, query.getRef(), index)\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callback_;\n      return function () {\n        cb.call(ctx, (eventData as DataEvent).snapshot);\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return (\n        other.callback_ === this.callback_ && other.context_ === this.context_\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callback_ !== null;\n  }\n}\n\n/**\n * Represents the registration of 1 or more child_xxx events.\n *\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\n * register a group of callbacks together in the future.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private callbacks_: {\n      [k: string]: (d: DataSnapshot, s?: string | null) => void;\n    } | null,\n    private cancelCallback_: ((e: Error) => void) | null,\n    private context_?: {}\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createEvent(change: Change, query: Query): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const ref = query.getRef().child(change.childName);\n    const index = query.getQueryParams().getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, ref, index),\n      change.prevName\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    const ctx = this.context_;\n    if (eventData.getEventType() === 'cancel') {\n      assert(\n        this.cancelCallback_,\n        'Raising a cancel event on a listener with no cancel callback'\n      );\n      const cancelCB = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB.call(ctx, (eventData as CancelEvent).error);\n      };\n    } else {\n      const cb = this.callbacks_[(eventData as DataEvent).eventType];\n      return function () {\n        cb.call(\n          ctx,\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n      };\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        const otherKeys = Object.keys(other.callbacks_);\n        const thisKeys = Object.keys(this.callbacks_);\n        const otherCount = otherKeys.length;\n        const thisCount = thisKeys.length;\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n\n          if (otherCount === 1) {\n            const otherKey = otherKeys[0];\n            const thisKey = thisKeys[0];\n            return (\n              thisKey === otherKey &&\n              (!other.callbacks_[otherKey] ||\n                !this.callbacks_[thisKey] ||\n                other.callbacks_[otherKey] === this.callbacks_[thisKey])\n            );\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(\n              eventType =>\n                other.callbacks_[eventType] === this.callbacks_[eventType]\n            );\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasAnyCallback(): boolean {\n    return this.callbacks_ !== null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  Deferred,\n  errorPrefix,\n  validateArgCount,\n  validateCallback,\n  validateContextObject\n} from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery\n} from '../core/Repo';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport {\n  Path,\n  pathEquals,\n  pathIsEmpty,\n  pathToUrlEncodedString\n} from '../core/util/Path';\nimport { MAX_NAME, MIN_NAME, ObjectToUniqueKey } from '../core/util/util';\nimport {\n  isValidPriority,\n  validateEventType,\n  validateFirebaseDataArg,\n  validateKey,\n  validatePathString\n} from '../core/util/validation';\nimport {\n  ChildEventRegistration,\n  EventRegistration,\n  ValueEventRegistration\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { DataSnapshot } from './DataSnapshot';\nimport { Reference } from './Reference';\n\nlet __referenceConstructor: new (database: Database, path: Path) => Query;\n\nexport interface SnapshotCallback {\n  (a: DataSnapshot, b?: string | null): unknown;\n}\n\n/**\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\n *\n * Since every Firebase reference is a query, Firebase inherits from this object.\n */\nexport class Query {\n  static set __referenceConstructor(val) {\n    __referenceConstructor = val;\n  }\n\n  static get __referenceConstructor() {\n    assert(__referenceConstructor, 'Reference.ts has not been loaded');\n    return __referenceConstructor;\n  }\n\n  readonly repo: Repo;\n\n  constructor(\n    public database: Database,\n    public path: Path,\n    private queryParams_: QueryParams,\n    private orderByCalled_: boolean\n  ) {\n    this.repo = database.repo_;\n  }\n\n  /**\n   * Validates start/end values for queries.\n   */\n  private static validateQueryEndpoints_(params: QueryParams) {\n    let startNode = null;\n    let endNode = null;\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      const tooManyArgsError =\n        'Query: When ordering by key, you may only pass one argument to ' +\n        'startAt(), endAt(), or equalTo().';\n      const wrongArgTypeError =\n        'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n        'endAt(), endBefore(), or equalTo() must be a string.';\n      if (params.hasStart()) {\n        const startName = params.getIndexStartName();\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n      if (params.hasEnd()) {\n        const endName = params.getIndexEndName();\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (\n        (startNode != null && !isValidPriority(startNode)) ||\n        (endNode != null && !isValidPriority(endNode))\n      ) {\n        throw new Error(\n          'Query: When ordering by priority, the first argument passed to startAt(), ' +\n            'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n            '(null, a number, or a string).'\n        );\n      }\n    } else {\n      assert(\n        params.getIndex() instanceof PathIndex ||\n          params.getIndex() === VALUE_INDEX,\n        'unknown index type.'\n      );\n      if (\n        (startNode != null && typeof startNode === 'object') ||\n        (endNode != null && typeof endNode === 'object')\n      ) {\n        throw new Error(\n          'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n            'equalTo() cannot be an object.'\n        );\n      }\n    }\n  }\n\n  /**\n   * Validates that limit* has been called with the correct combination of parameters\n   */\n  private static validateLimit_(params: QueryParams) {\n    if (\n      params.hasStart() &&\n      params.hasEnd() &&\n      params.hasLimit() &&\n      !params.hasAnchoredLimit()\n    ) {\n      throw new Error(\n        \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n          'limitToFirst() or limitToLast() instead.'\n      );\n    }\n  }\n\n  /**\n   * Validates that no other order by call has been made\n   */\n  private validateNoPreviousOrderByCall_(fnName: string) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  }\n\n  getQueryParams(): QueryParams {\n    return this.queryParams_;\n  }\n\n  getRef(): Reference {\n    validateArgCount('Query.ref', 0, 0, arguments.length);\n    // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n    return new Query.__referenceConstructor(\n      this.database,\n      this.path\n    ) as Reference;\n  }\n\n  on(\n    eventType: string,\n    callback: SnapshotCallback,\n    cancelCallbackOrContext?: ((a: Error) => unknown) | object | null,\n    context?: object | null\n  ): SnapshotCallback {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.on',\n      cancelCallbackOrContext,\n      context\n    );\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      const callbacks: { [k: string]: typeof callback } = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n    return callback;\n  }\n\n  protected onValueEvent(\n    callback: (a: DataSnapshot) => void,\n    cancelCallback: ((a: Error) => void) | null,\n    context: object | null\n  ) {\n    const container = new ValueEventRegistration(\n      callback,\n      cancelCallback || null,\n      context || null\n    );\n    repoAddEventCallbackForQuery(this.repo, this, container);\n  }\n\n  onChildEvent(\n    callbacks: { [k: string]: SnapshotCallback },\n    cancelCallback: ((a: Error) => unknown) | null,\n    context: object | null\n  ) {\n    const container = new ChildEventRegistration(\n      callbacks,\n      cancelCallback,\n      context\n    );\n    repoAddEventCallbackForQuery(this.repo, this, container);\n  }\n\n  off(\n    eventType?: string,\n    callback?: SnapshotCallback,\n    context?: object | null\n  ): void {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n\n    let container: EventRegistration | null = null;\n    let callbacks: { [k: string]: typeof callback } | null = null;\n    if (eventType === 'value') {\n      const valueCallback = callback || null;\n      container = new ValueEventRegistration(\n        valueCallback,\n        null,\n        context || null\n      );\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n    repoRemoveEventCallbackForQuery(this.repo, this, container);\n  }\n\n  /**\n   * Get the server-value for this query, or return a cached value if not connected.\n   */\n  get(): Promise<DataSnapshot> {\n    return repoGetValue(this.repo, this).then(\n      node =>\n        new DataSnapshot(node, this.getRef(), this.getQueryParams().getIndex())\n    );\n  }\n\n  /**\n   * Attaches a listener, waits for the first event, and then removes the listener\n   */\n  once(\n    eventType: string,\n    userCallback?: SnapshotCallback,\n    failureCallbackOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): Promise<DataSnapshot> {\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n\n    const ret = Query.getCancelAndContextArgs_(\n      'Query.once',\n      failureCallbackOrContext,\n      context\n    );\n\n    // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n    let firstCall = true;\n    const deferred = new Deferred<DataSnapshot>();\n\n    // A dummy error handler in case a user wasn't expecting promises\n    deferred.promise.catch(() => {});\n\n    const onceCallback = (snapshot: DataSnapshot) => {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n        this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(\n      eventType,\n      onceCallback,\n      /*cancel=*/ err => {\n        this.off(eventType, onceCallback);\n\n        if (ret.cancel) {\n          ret.cancel.bind(ret.context)(err);\n        }\n        deferred.reject(err);\n      }\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Set a limit and anchor it to the start of the window.\n   */\n  limitToFirst(limit: number): Query {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToFirst: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToFirst: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.database,\n      this.path,\n      queryParamsLimitToFirst(this.queryParams_, limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Set a limit and anchor it to the end of the window.\n   */\n  limitToLast(limit: number): Query {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    if (\n      typeof limit !== 'number' ||\n      Math.floor(limit) !== limit ||\n      limit <= 0\n    ) {\n      throw new Error(\n        'Query.limitToLast: First argument must be a positive integer.'\n      );\n    }\n    if (this.queryParams_.hasLimit()) {\n      throw new Error(\n        'Query.limitToLast: Limit was already set (by another call to limit, ' +\n          'limitToFirst, or limitToLast).'\n      );\n    }\n\n    return new Query(\n      this.database,\n      this.path,\n      queryParamsLimitToLast(this.queryParams_, limit),\n      this.orderByCalled_\n    );\n  }\n\n  /**\n   * Given a child path, return a new query ordered by the specified grandchild path.\n   */\n  orderByChild(path: string): Query {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    if (path === '$key') {\n      throw new Error(\n        'Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.'\n      );\n    } else if (path === '$priority') {\n      throw new Error(\n        'Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.'\n      );\n    } else if (path === '$value') {\n      throw new Error(\n        'Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.'\n      );\n    }\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    const parsedPath = new Path(path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(this.queryParams_, index);\n    Query.validateQueryEndpoints_(newParams);\n\n    return new Query(\n      this.database,\n      this.path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n\n  /**\n   * Return a new query ordered by the KeyIndex\n   */\n  orderByKey(): Query {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    const newParams = queryParamsOrderBy(this.queryParams_, KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(\n      this.database,\n      this.path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n\n  /**\n   * Return a new query ordered by the PriorityIndex\n   */\n  orderByPriority(): Query {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    const newParams = queryParamsOrderBy(this.queryParams_, PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(\n      this.database,\n      this.path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n\n  /**\n   * Return a new query ordered by the ValueIndex\n   */\n  orderByValue(): Query {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    const newParams = queryParamsOrderBy(this.queryParams_, VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(\n      this.database,\n      this.path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n\n  startAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n\n    const newParams = queryParamsStartAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.startAt: Starting point was already set (by another call to startAt ' +\n          'or equalTo).'\n      );\n    }\n\n    // Calling with no params tells us to start at the beginning.\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.database, this.path, newParams, this.orderByCalled_);\n  }\n\n  startAfter(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\n    validateKey('Query.startAfter', 2, name, true);\n\n    const newParams = queryParamsStartAfter(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' +\n          'or equalTo).'\n      );\n    }\n\n    return new Query(this.database, this.path, newParams, this.orderByCalled_);\n  }\n\n  endAt(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n\n    const newParams = queryParamsEndAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' +\n          'equalTo).'\n      );\n    }\n\n    return new Query(this.database, this.path, newParams, this.orderByCalled_);\n  }\n\n  endBefore(\n    value: number | string | boolean | null = null,\n    name?: string | null\n  ): Query {\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\n    validateKey('Query.endBefore', 2, name, true);\n\n    const newParams = queryParamsEndBefore(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' +\n          'equalTo).'\n      );\n    }\n\n    return new Query(this.database, this.path, newParams, this.orderByCalled_);\n  }\n\n  /**\n   * Load the selection of children with exactly the specified value, and, optionally,\n   * the specified name.\n   */\n  equalTo(value: number | string | boolean | null, name?: string) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n    if (this.queryParams_.hasStart()) {\n      throw new Error(\n        'Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (this.queryParams_.hasEnd()) {\n      throw new Error(\n        'Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return this.startAt(value, name).endAt(value, name);\n  }\n\n  /**\n   * @return URL for this location.\n   */\n  toString(): string {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n\n    return this.repo.toString() + pathToUrlEncodedString(this.path);\n  }\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n  toJSON() {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  queryObject(): object {\n    return queryParamsGetQueryObject(this.queryParams_);\n  }\n\n  queryIdentifier(): string {\n    const obj = this.queryObject();\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\n   */\n  isEqual(other: Query): boolean {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n    if (!(other instanceof Query)) {\n      const error =\n        'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    const sameRepo = this.repo === other.repo;\n    const samePath = pathEquals(this.path, other.path);\n    const sameQueryIdentifier =\n      this.queryIdentifier() === other.queryIdentifier();\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  /**\n   * Helper used by .on and .once to extract the context and or cancel arguments.\n   * @param fnName The function name (on or once)\n   *\n   */\n  private static getCancelAndContextArgs_(\n    fnName: string,\n    cancelOrContext?: ((a: Error) => void) | object | null,\n    context?: object | null\n  ): { cancel: ((a: Error) => void) | null; context: object | null } {\n    const ret: {\n      cancel: ((a: Error) => void) | null;\n      context: object | null;\n    } = { cancel: null, context: null };\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext as (a: Error) => void;\n      validateCallback(fnName, 3, ret.cancel, true);\n\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext as (a: Error) => void;\n      } else {\n        throw new Error(\n          errorPrefix(fnName, 3, true) +\n            ' must either be a cancel callback or a context object.'\n        );\n      }\n    }\n    return ret;\n  }\n\n  get ref(): Reference {\n    return this.getRef();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { validateArgCount } from '@firebase/util';\n\nimport { DataSnapshot } from './DataSnapshot';\n\nexport class TransactionResult {\n  /**\n   * A type for the resolve value of Firebase.transaction.\n   */\n  constructor(public committed: boolean, public snapshot: DataSnapshot) {}\n\n  // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n  toJSON(): object {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred, validateArgCount, validateCallback } from '@firebase/util';\n\nimport {\n  repoServerTime,\n  repoSetWithPriority,\n  repoStartTransaction,\n  repoUpdate\n} from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathIsEmpty,\n  pathParent\n} from '../core/util/Path';\nimport { warn } from '../core/util/util';\nimport {\n  validateBoolean,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateWritablePath\n} from '../core/util/validation';\nimport { QueryParams } from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { DataSnapshot } from './DataSnapshot';\nimport { OnDisconnect } from './onDisconnect';\nimport { Query } from './Query';\nimport { TransactionResult } from './TransactionResult';\n\nexport interface ReferenceConstructor {\n  new (database: Database, path: Path): Reference;\n}\n\nexport class Reference extends Query {\n  then: Promise<Reference>['then'];\n  catch: Promise<Reference>['catch'];\n\n  /**\n   * Call options:\n   *   new Reference(Repo, Path) or\n   *   new Reference(url: string, string|RepoManager)\n   *\n   * Externally - this is the firebase.database.Reference type.\n   */\n  constructor(database: Database, path: Path) {\n    super(database, path, new QueryParams(), false);\n  }\n\n  /** @return {?string} */\n  getKey(): string | null {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (pathIsEmpty(this.path)) {\n      return null;\n    } else {\n      return pathGetBack(this.path);\n    }\n  }\n\n  child(pathString: string | Path): Reference {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (pathGetFront(this.path) === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.database, pathChild(this.path, pathString));\n  }\n\n  /** @return {?Reference} */\n  getParent(): Reference | null {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n\n    const parentPath = pathParent(this.path);\n    return parentPath === null\n      ? null\n      : new Reference(this.database, parentPath);\n  }\n\n  /** @return {!Reference} */\n  getRoot(): Reference {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n\n    let ref: Reference = this;\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n    return ref;\n  }\n\n  set(\n    newVal: unknown,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    repoSetWithPriority(\n      this.repo,\n      this.path,\n      newVal,\n      /*priority=*/ null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  update(\n    objectToMerge: object,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      const newObjectToMerge: { [k: string]: unknown } = {};\n      for (let i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n      objectToMerge = newObjectToMerge;\n      warn(\n        'Passing an Array to Firebase.update() is deprecated. ' +\n          'Use set() if you want to overwrite the existing data, or ' +\n          'an Object with integer keys if you really do want to ' +\n          'only update some of the children.'\n      );\n    }\n    validateFirebaseMergeDataArg(\n      'Reference.update',\n      1,\n      objectToMerge,\n      this.path,\n      false\n    );\n    validateCallback('Reference.update', 2, onComplete, true);\n    const deferred = new Deferred();\n    repoUpdate(\n      this.repo,\n      this.path,\n      objectToMerge as { [k: string]: unknown },\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  setWithPriority(\n    newVal: unknown,\n    newPriority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg(\n      'Reference.setWithPriority',\n      1,\n      newVal,\n      this.path,\n      false\n    );\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw (\n        'Reference.setWithPriority failed: ' +\n        this.getKey() +\n        ' is a read-only object.'\n      );\n    }\n\n    const deferred = new Deferred();\n    repoSetWithPriority(\n      this.repo,\n      this.path,\n      newVal,\n      newPriority,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  remove(onComplete?: (a: Error | null) => void): Promise<unknown> {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n\n    return this.set(null, onComplete);\n  }\n\n  transaction(\n    transactionUpdate: (a: unknown) => unknown,\n    onComplete?: (a: Error | null, b: boolean, c: DataSnapshot | null) => void,\n    applyLocally?: boolean\n  ): Promise<TransactionResult> {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true);\n    // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw (\n        'Reference.transaction failed: ' +\n        this.getKey() +\n        ' is a read-only object.'\n      );\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    const deferred = new Deferred<TransactionResult>();\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(() => {});\n    }\n\n    const promiseComplete = (error: Error, committed: boolean, node: Node) => {\n      if (error) {\n        deferred.reject(error);\n        if (typeof onComplete === 'function') {\n          onComplete(error, committed, null);\n        }\n      } else {\n        const snapshot = new DataSnapshot(\n          node,\n          new Reference(this.database, this.path),\n          PRIORITY_INDEX\n        );\n        deferred.resolve(new TransactionResult(committed, snapshot));\n        if (typeof onComplete === 'function') {\n          onComplete(null, committed, snapshot);\n        }\n      }\n    };\n\n    // Add a watch to make sure we get server updates.\n    const valueCallback = function () {};\n    const watchRef = new Reference(this.database, this.path);\n    watchRef.on('value', valueCallback);\n    const unwatcher = function () {\n      watchRef.off('value', valueCallback);\n    };\n\n    repoStartTransaction(\n      this.repo,\n      this.path,\n      transactionUpdate,\n      promiseComplete,\n      unwatcher,\n      applyLocally\n    );\n\n    return deferred.promise;\n  }\n\n  setPriority(\n    priority: string | number | null,\n    onComplete?: (a: Error | null) => void\n  ): Promise<unknown> {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n\n    const deferred = new Deferred();\n    repoSetWithPriority(\n      this.repo,\n      pathChild(this.path, '.priority'),\n      priority,\n      null,\n      deferred.wrapCallback(onComplete)\n    );\n    return deferred.promise;\n  }\n\n  push(value?: unknown, onComplete?: (a: Error | null) => void): Reference {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n\n    const now = repoServerTime(this.repo);\n    const name = nextPushId(now);\n\n    // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n    const thennablePushRef = this.child(name);\n    const pushRef = this.child(name);\n\n    let promise;\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(() => pushRef);\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(() => {});\n    }\n\n    return thennablePushRef;\n  }\n\n  onDisconnect(): OnDisconnect {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  }\n\n  get key(): string | null {\n    return this.getKey();\n  }\n\n  get parent(): Reference | null {\n    return this.getParent();\n  }\n\n  get root(): Reference {\n    return this.getRoot();\n  }\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nQuery.__referenceConstructor = Reference;\nsyncPointSetReferenceConstructor(Reference);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp as FirebaseAppExp } from '@firebase/app-exp';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport { safeGet, validateArgCount } from '@firebase/util';\n\nimport {\n  AuthTokenProvider,\n  EmulatorAdminTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { pathIsEmpty, newEmptyPath } from '../core/util/Path';\nimport { fatal, log } from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\n\nimport { Reference } from './Reference';\n\n/**\n * This variable is also defined in the firebase node.js admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Intersection type that allows the SDK to be used from firebase-exp and\n * firebase v8.\n */\nexport type FirebaseAppLike = FirebaseApp | FirebaseAppExp;\n\n/**\n * Creates and caches Repo instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing repo in place to point to a new host/port.\n */\nexport function repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (repo.repoInfo_.nodeAdmin) {\n    repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseAppLike,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorAdminTokenProvider()\n      : new FirebaseAuthTokenProvider(app, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\n  return new Database(repo);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nexport function repoManagerDeleteRepo(repo: Repo): void {\n  const appRepos = safeGet(repos, repo.app.name);\n  // This should never happen...\n  if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n    fatal(\n      `Database ${repo.app.name}(${repo.repoInfo_}) has already been deleted.`\n    );\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo The metadata about the Repo\n * @return The Repo object for the specified server / repoName.\n */\nexport function repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseAppLike,\n  authTokenProvider: AuthTokenProvider\n): Repo {\n  let appRepos = safeGet(repos, app.name);\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = safeGet(appRepos, repoInfo.toURLString());\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, app, authTokenProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a firebase database.\n */\nexport class Database implements FirebaseService {\n  /** Track if the instance has been used (root or repo accessed) */\n  private instanceStarted_: boolean = false;\n\n  /** Backing state for root_ */\n  private rootInternal_?: Reference;\n\n  static readonly ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: (delta: number) => {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n\n  /**\n   * The constructor should not be called by users of our public API.\n   */\n  constructor(private repoInternal_: Repo) {\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\n        \"Don't call new Database() directly - please use firebase.database().\"\n      );\n    }\n  }\n\n  INTERNAL = {\n    delete: async () => {\n      this.checkDeleted_('delete');\n      repoManagerDeleteRepo(this.repo_);\n      this.repoInternal_ = null;\n      this.rootInternal_ = null;\n    }\n  };\n\n  get repo_(): Repo {\n    if (!this.instanceStarted_) {\n      repoStart(this.repoInternal_);\n      this.instanceStarted_ = true;\n    }\n    return this.repoInternal_;\n  }\n\n  get root_(): Reference {\n    if (!this.rootInternal_) {\n      this.rootInternal_ = new Reference(this, newEmptyPath());\n    }\n\n    return this.rootInternal_;\n  }\n\n  get app(): FirebaseApp {\n    return this.repo_.app as FirebaseApp;\n  }\n\n  /**\n   * Modify this instance to communicate with the Realtime Database emulator.\n   *\n   * <p>Note: This method must be called before performing any other operation.\n   *\n   * @param host the emulator host (ex: localhost)\n   * @param port the emulator port (ex: 8080)\n   */\n  useEmulator(host: string, port: number): void {\n    this.checkDeleted_('useEmulator');\n    if (this.instanceStarted_) {\n      fatal(\n        'Cannot call useEmulator() after instance has already been initialized.'\n      );\n      return;\n    }\n\n    // Modify the repo to apply emulator settings\n    repoManagerApplyEmulatorSettings(this.repoInternal_, host, port);\n  }\n\n  /**\n   * Returns a reference to the root or to the path specified in the provided\n   * argument.\n   *\n   * @param path The relative string path or an existing Reference to a database\n   * location.\n   * @throws If a Reference is provided, throws if it does not belong to the\n   * same project.\n   * @return Firebase reference.\n   */\n  ref(path?: string): Reference;\n  ref(path?: Reference): Reference;\n  ref(path?: string | Reference): Reference {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  }\n\n  /**\n   * Returns a reference to the root or the path specified in url.\n   * We throw a exception if the url is not in the same domain as the\n   * current repo.\n   * @return Firebase reference.\n   */\n  refFromURL(url: string): Reference {\n    /** @const {string} */\n    const apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    const parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n\n    const repoInfo = parsedURL.repoInfo;\n    if (\n      !this.repo_.repoInfo_.isCustomHost() &&\n      repoInfo.host !== this.repo_.repoInfo_.host\n    ) {\n      fatal(\n        apiName +\n          ': Host name does not match the current database: ' +\n          '(found ' +\n          repoInfo.host +\n          ' but expected ' +\n          this.repo_.repoInfo_.host +\n          ')'\n      );\n    }\n\n    return this.ref(parsedURL.path.toString());\n  }\n\n  private checkDeleted_(apiName: string) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n\n  // Make individual repo go offline.\n  goOffline(): void {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    repoInterrupt(this.repo_);\n  }\n\n  goOnline(): void {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    repoResume(this.repo_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  Provider\n} from '@firebase/component';\nimport * as types from '@firebase/database-types';\n\nimport {\n  repoInterceptServerData,\n  repoStats,\n  repoStatsIncrementCounter\n} from '../core/Repo';\nimport { setSDKVersion } from '../core/version';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { repoManagerDatabaseFromApp } from './Database';\nimport { Reference } from './Reference';\n\n/**\n * INTERNAL methods for internal-use only (tests, etc.).\n *\n * Customers shouldn't use these or else should be aware that they could break at any time.\n */\n\nexport const forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nexport const forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n\n/* Used by App Manager */\nexport const isWebSocketsAvailable = function (): boolean {\n  return WebSocketConnection['isAvailable']();\n};\n\nexport const setSecurityDebugCallback = function (\n  ref: Reference,\n  callback: (a: object) => void\n) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (ref.repo.persistentConnection_ as any).securityDebugCallback_ = callback;\n};\n\nexport const stats = function (ref: Reference, showDelta?: boolean) {\n  repoStats(ref.repo, showDelta);\n};\n\nexport const statsIncrementCounter = function (ref: Reference, metric: string) {\n  repoStatsIncrementCounter(ref.repo, metric);\n};\n\nexport const dataUpdateCount = function (ref: Reference): number {\n  return ref.repo.dataUpdateCount;\n};\n\nexport const interceptServerData = function (\n  ref: Reference,\n  callback: ((a: string, b: unknown) => void) | null\n) {\n  return repoInterceptServerData(ref.repo, callback);\n};\n\n/**\n * Used by console to create a database based on the app,\n * passed database URL and a custom auth implementation.\n *\n * @param app A valid FirebaseApp-like object\n * @param url A valid Firebase databaseURL\n * @param version custom version e.g. firebase-admin version\n * @param customAuthImpl custom auth implementation\n */\nexport function initStandalone<T>({\n  app,\n  url,\n  version,\n  customAuthImpl,\n  namespace,\n  nodeAdmin = false\n}: {\n  app: FirebaseApp;\n  url: string;\n  version: string;\n  customAuthImpl: FirebaseAuthInternal;\n  namespace: T;\n  nodeAdmin?: boolean;\n}): {\n  instance: types.Database;\n  namespace: T;\n} {\n  setSDKVersion(version);\n\n  /**\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\n   * any actual function.\n   */\n  const authProvider = new Provider<FirebaseAuthInternalName>(\n    'auth-internal',\n    new ComponentContainer('database-standalone')\n  );\n  authProvider.setComponent(\n    new Component('auth-internal', () => customAuthImpl, ComponentType.PRIVATE)\n  );\n\n  return {\n    instance: repoManagerDatabaseFromApp(\n      app,\n      authProvider,\n      url,\n      nodeAdmin\n    ) as types.Database,\n    namespace\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\nimport { Query } from './Query';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\nexport const queryIdentifier = function (query: Query) {\n  return query.queryIdentifier();\n};\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport firebase from '@firebase/app';\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { Component, ComponentType } from '@firebase/component';\nimport * as types from '@firebase/database-types';\nimport { isNodeSdk } from '@firebase/util';\n\nimport { name, version } from './package.json';\nimport { Database, repoManagerDatabaseFromApp } from './src/api/Database';\nimport { DataSnapshot } from './src/api/DataSnapshot';\nimport * as INTERNAL from './src/api/internal';\nimport { Query } from './src/api/Query';\nimport { Reference } from './src/api/Reference';\nimport * as TEST_ACCESS from './src/api/test_access';\nimport { enableLogging } from './src/core/util/util';\nimport { setSDKVersion } from './src/core/version';\n\nconst ServerValue = Database.ServerValue;\n\nexport function registerDatabase(instance: FirebaseNamespace) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION);\n\n  // Register the Database Service with the 'firebase' namespace.\n  const namespace = (instance as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        /* Dependencies */\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const authProvider = container.getProvider('auth-internal');\n\n        return repoManagerDatabaseFromApp(app, authProvider, url, undefined);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps(\n        // firebase.database namespace properties\n        {\n          Reference,\n          Query,\n          Database,\n          DataSnapshot,\n          enableLogging,\n          INTERNAL,\n          ServerValue,\n          TEST_ACCESS\n        }\n      )\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\n\n// Types to export for the admin SDK\nexport { Database, Query, Reference, enableLogging, ServerValue };\n\nexport { DataSnapshot } from './src/api/DataSnapshot';\nexport { OnDisconnect } from './src/api/onDisconnect';\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    database?: {\n      (app?: FirebaseApp): types.FirebaseDatabase;\n      enableLogging: typeof types.enableLogging;\n      ServerValue: types.ServerValue;\n      Database: typeof types.FirebaseDatabase;\n    };\n  }\n  interface FirebaseApp {\n    database?(databaseURL?: string): types.FirebaseDatabase;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}