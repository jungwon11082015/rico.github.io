{"ast":null,"code":"import { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'Pagination',\n  props: {\n    currentPage: {\n      type: Number,\n      default: 1,\n      required: true\n    },\n    totalPages: {\n      type: Number,\n      required: true\n    },\n    prevPageData: {\n      type: Object,\n      default: () => ({})\n    },\n    nextPageData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const store = useStore();\n    const state = {\n      prevPageData: {\n        id: undefined,\n        project: ''\n      },\n      nextPageData: {\n        id: undefined,\n        project: ''\n      }\n    };\n    const showPrevLink = computed(() => store.state.prevPageData.id !== undefined);\n    const showNextLink = computed(() => store.state.nextPageData.id !== undefined);\n    const nextProjectInfo = ref({});\n    const prevProjectInfo = ref({});\n    const emitPageChange = page => {\n      if (page >= 1 && page <= props.totalPages) {\n        emit('page-change', page);\n      }\n    };\n    const projectInfoChange = () => {\n      nextProjectInfo.value = store.state.nextPageData.project;\n      prevProjectInfo.value = store.state.prevPageData.project;\n    };\n    watch(() => store.state.nextPageData, () => {\n      projectInfoChange();\n    });\n    watch(() => store.state.prevPageData, () => {\n      projectInfoChange();\n    });\n    onMounted(() => {\n      projectInfoChange();\n    });\n    return {\n      showPrevLink,\n      showNextLink,\n      emitPageChange,\n      nextProjectInfo,\n      prevProjectInfo\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","useStore","name","props","currentPage","type","Number","default","required","totalPages","prevPageData","Object","nextPageData","setup","emit","store","state","id","undefined","project","showPrevLink","showNextLink","nextProjectInfo","prevProjectInfo","emitPageChange","page","projectInfoChange","value"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\common\\Pagination.vue"],"sourcesContent":["<template>\r\n    <div class=\"work_project\" :class=\"currentPage > 1 ? 'on' : ''\">\r\n        <div class=\"project_info\" v-if=\"showPrevLink && currentPage > 1\">\r\n            <router-link :to=\"'/workView' + (currentPage - 1)\" @click=\"emitPageChange(currentPage - 1)\">\r\n                <em class=\"text\">Prev Project</em>\r\n                <em class=\"title\">{{ prevProjectInfo }}</em>\r\n            </router-link>\r\n        </div>\r\n        <div class=\"project_info\" v-if=\"showNextLink && currentPage >= 1 && currentPage <= totalPages\">\r\n            <router-link :to=\"'/workView' + (currentPage + 1)\" @click=\"emitPageChange(currentPage + 1)\">\r\n                <em class=\"text\">Next Project</em>\r\n                <em class=\"title\">{{ nextProjectInfo }}</em>\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n</template> \r\n<script>\r\n\r\nimport { ref, computed,  watch  , onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n    name: 'Pagination',\r\n    props: {\r\n        currentPage: {\r\n            type: Number,\r\n            default: 1,\r\n            required: true\r\n        },\r\n        totalPages: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        prevPageData: {\r\n            type: Object,\r\n            default: () => ({})\r\n        },\r\n        nextPageData: {\r\n            type: Object,\r\n            default: () => ({})\r\n        }\r\n\r\n    },\r\n    setup(props, { emit }) {\r\n        const store = useStore();\r\n        const state = {\r\n            prevPageData: { id: undefined, project: '' },\r\n            nextPageData: { id: undefined, project: '' },\r\n        };\r\n\r\n        const showPrevLink = computed(() =>  store.state.prevPageData.id !== undefined);\r\n        const showNextLink = computed(() =>  store.state.nextPageData.id !== undefined);\r\n        const nextProjectInfo = ref({});\r\n        const prevProjectInfo = ref({});\r\n     \r\n\r\n        const emitPageChange = ( page ) => {\r\n            if (page >= 1 && page <= props.totalPages) {\r\n                emit('page-change', page);\r\n            }\r\n        };\r\n\r\n \r\n        const projectInfoChange = () => {\r\n            nextProjectInfo.value = store.state.nextPageData.project;\r\n            prevProjectInfo.value = store.state.prevPageData.project;\r\n        };\r\n\r\n\r\n        watch(() => store.state.nextPageData, () => {\r\n            projectInfoChange();\r\n        });\r\n\r\n        watch(() => store.state.prevPageData, () => {\r\n            projectInfoChange();\r\n        });\r\n\r\n\r\n        onMounted(() => {\r\n            projectInfoChange();\r\n        });\r\n\r\n        return {\r\n            showPrevLink,\r\n            showNextLink,\r\n            emitPageChange,\r\n            nextProjectInfo,\r\n            prevProjectInfo\r\n        };\r\n    }\r\n\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n.work_project {\r\n    .project_info {\r\n        a {\r\n            padding: vw(50px 100px);\r\n            display: block;\r\n            width: 100%;\r\n            background: url(\"@/assets/images/nextproject_img1.jpg\") 0 0 no-repeat;\r\n            background-size: 100% auto;\r\n            height: vw(260px);\r\n            box-sizing: border-box;\r\n\r\n            em {\r\n                display: block;\r\n            }\r\n\r\n            .text {\r\n                font-size: vw(30px);\r\n                font-weight: 600;\r\n                color: #fff;\r\n            }\r\n\r\n            .title {\r\n                padding-top: vw(30px);\r\n                text-align: center;\r\n                font-size: vw(50px);\r\n                color: #fff;\r\n                font-family: 'Noto Sans Korean';\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.on {\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        .project_info {\r\n            width: 50%;\r\n\r\n            a {\r\n                background-size: auto 100%;\r\n                background-position: center center;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"AAkBA,SAASA,GAAG,EAAEC,QAAQ,EAAGC,KAAI,EAAKC,SAAQ,QAAS,KAAK;AACxD,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACHC,WAAW,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE;IACd,CAAC;IACDC,UAAU,EAAE;MACRJ,IAAI,EAAEC,MAAM;MACZE,QAAQ,EAAE;IACd,CAAC;IACDE,YAAY,EAAE;MACVL,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAEA,CAAA,MAAO,CAAC,CAAC;IACtB,CAAC;IACDK,YAAY,EAAE;MACVP,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAEA,CAAA,MAAO,CAAC,CAAC;IACtB;EAEJ,CAAC;EACDM,KAAKA,CAACV,KAAK,EAAE;IAAEW;EAAK,CAAC,EAAE;IACnB,MAAMC,KAAI,GAAId,QAAQ,CAAC,CAAC;IACxB,MAAMe,KAAI,GAAI;MACVN,YAAY,EAAE;QAAEO,EAAE,EAAEC,SAAS;QAAEC,OAAO,EAAE;MAAG,CAAC;MAC5CP,YAAY,EAAE;QAAEK,EAAE,EAAEC,SAAS;QAAEC,OAAO,EAAE;MAAG;IAC/C,CAAC;IAED,MAAMC,YAAW,GAAItB,QAAQ,CAAC,MAAOiB,KAAK,CAACC,KAAK,CAACN,YAAY,CAACO,EAAC,KAAMC,SAAS,CAAC;IAC/E,MAAMG,YAAW,GAAIvB,QAAQ,CAAC,MAAOiB,KAAK,CAACC,KAAK,CAACJ,YAAY,CAACK,EAAC,KAAMC,SAAS,CAAC;IAC/E,MAAMI,eAAc,GAAIzB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAM0B,eAAc,GAAI1B,GAAG,CAAC,CAAC,CAAC,CAAC;IAG/B,MAAM2B,cAAa,GAAMC,IAAG,IAAO;MAC/B,IAAIA,IAAG,IAAK,KAAKA,IAAG,IAAKtB,KAAK,CAACM,UAAU,EAAE;QACvCK,IAAI,CAAC,aAAa,EAAEW,IAAI,CAAC;MAC7B;IACJ,CAAC;IAGD,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC5BJ,eAAe,CAACK,KAAI,GAAIZ,KAAK,CAACC,KAAK,CAACJ,YAAY,CAACO,OAAO;MACxDI,eAAe,CAACI,KAAI,GAAIZ,KAAK,CAACC,KAAK,CAACN,YAAY,CAACS,OAAO;IAC5D,CAAC;IAGDpB,KAAK,CAAC,MAAMgB,KAAK,CAACC,KAAK,CAACJ,YAAY,EAAE,MAAM;MACxCc,iBAAiB,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF3B,KAAK,CAAC,MAAMgB,KAAK,CAACC,KAAK,CAACN,YAAY,EAAE,MAAM;MACxCgB,iBAAiB,CAAC,CAAC;IACvB,CAAC,CAAC;IAGF1B,SAAS,CAAC,MAAM;MACZ0B,iBAAiB,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,OAAO;MACHN,YAAY;MACZC,YAAY;MACZG,cAAc;MACdF,eAAe;MACfC;IACJ,CAAC;EACL;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}