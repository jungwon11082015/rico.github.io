{"ast":null,"code":"import { ref, onMounted, toRefs, reactive, defineProps } from 'vue';\nimport { gsap, Power2 } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport Skeletor from \"@/components/Layouts/common/Skeleton.vue\";\ngsap.registerPlugin(ScrollTrigger);\nexport default {\n  name: 'BlogList',\n  props: {\n    responseData: {\n      type: Array,\n      required: true\n    },\n    blogInfoData: {\n      type: Array,\n      required: true\n    },\n    SkeletorType: {\n      type: String\n    }\n  },\n  components: {\n    Skeletor\n  },\n  setup(props) {\n    const isView = ref(false);\n    const formatDate = dateString => {\n      const dateObject = new Date(dateString);\n      const year = dateObject.getFullYear();\n      const month = String(dateObject.getMonth() + 1).padStart(2, '0');\n      const day = String(dateObject.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    };\n    onMounted(() => {\n      setTimeout(() => {\n        isView.value = true;\n      }, 1000);\n    });\n    return {\n      isView,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","toRefs","reactive","defineProps","gsap","Power2","ScrollTrigger","Skeletor","registerPlugin","name","props","responseData","type","Array","required","blogInfoData","SkeletorType","String","components","setup","isView","formatDate","dateString","dateObject","Date","year","getFullYear","month","getMonth","padStart","day","getDate","setTimeout","value"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\List\\BlogList.vue"],"sourcesContent":["<template>\r\n    <template v-if=\"responseData.length && isView > 0\">\r\n        <ul class=\"blog--list\" >\r\n            <li class=\"blog--item\"  v-for=\"post in responseData\" :key=\"post.id\">\r\n                <router-link :to=\"{name: 'BlogView', params: { id: post.id }}\">\r\n                    <figure class=\"blog--thumbnail\">\r\n                        <img :src=\"blogInfoData[0]\" alt=\"thumbnail\">\r\n                    </figure>\r\n                    <div class=\"blog--context\">\r\n                        <div class=\"blog--hashtag\">\r\n                            <em>{{ blogInfoData[2]}}</em>\r\n                        </div>\r\n                        <em class=\"blog--title\">{{ post.title }}</em>\r\n                        <!-- <div class=\"blog--text\">\r\n                            엘루오의 DT(Digital Transformation) 깊게 들여다 보기 10<br />\r\n                            Frog Design의 Adaptive Design, IDEO의 'Design Thinking' 방법론\r\n                        </div> -->\r\n                        <div class=\"blog--info\">\r\n                            <span class=\"blog--date\">{{ formatDate(post.date) }}</span> \r\n                            <span class=\"blog--writer\">{{ blogInfoData[1] }}</span>\r\n                        </div>\r\n                    </div>\r\n                </router-link>\r\n            </li> \r\n        </ul>\r\n    </template>\r\n\r\n    <template v-else>\r\n        <Skeletor :SkeletorType=\"`list`\"/>\r\n    </template>\r\n\r\n</template>\r\n      \r\n<script>\r\n\r\nimport { ref, onMounted, toRefs, reactive, defineProps  } from 'vue';\r\nimport { gsap, Power2 } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\nimport Skeletor from \"@/components/Layouts/common/Skeleton.vue\";\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport default {\r\n    name: 'BlogList',\r\n    props: {\r\n        responseData: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        blogInfoData: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        SkeletorType:{\r\n          type:String,\r\n        }\r\n    },\r\n    components: {\r\n        Skeletor,\r\n    },\r\n    setup( props ) {\r\n        const isView = ref( false );\r\n        const formatDate = (dateString) => {\r\n            const dateObject = new Date(dateString);\r\n            const year = dateObject.getFullYear();\r\n            const month = String(dateObject.getMonth() + 1).padStart(2, '0');\r\n            const day = String(dateObject.getDate()).padStart(2, '0');\r\n            return `${year}-${month}-${day}`;\r\n        }\r\n        onMounted(() => {\r\n            setTimeout( ()=>{\r\n                isView.value = true;\r\n            },1000)\r\n        });\r\n        \r\n\r\n        return {\r\n            isView,\r\n            formatDate\r\n        };\r\n    }\r\n}\r\n</script>\r\n      \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n.blog {\r\n    &--list {\r\n        @include breakDevicePoint(padding, vw(0 200px), vw(0), null ); \r\n        @include breakDevicePoint(margin, vw(100px 0 120px), null, null ); \r\n        >li {\r\n           border-top: vw(2px) solid #181818;\r\n           >a{\r\n                display: flex;\r\n                justify-content: space-around;\r\n                align-items: center;\r\n                &:hover{\r\n                    .blog--title{\r\n                        &:before{\r\n                            content: '';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            &:last-child{\r\n                border-bottom: vw(2px) solid #181818;\r\n            }   \r\n        }\r\n    }\r\n    &--thumbnail{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-content: center;\r\n        @include breakDevicePoint(width, vw(144px),  vw(200px), null ); \r\n        @include breakDevicePoint(padding, vw(60px 0), vw(120px 0), null ); \r\n        >img{\r\n            width: 100%;\r\n        }\r\n    }\r\n    &--context{ \r\n        @include breakDevicePoint(width, vw(765px), null, null ); \r\n    }\r\n    &--hashtag{ \r\n        display: -webkit-box;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        -webkit-line-clamp: 1;\r\n        -webkit-box-orient: vertical;\r\n        @include breakDevicePoint(min-height, vw(29px), null, null ); \r\n        @include breakDevicePoint(max-height, vw(100px), null, null ); \r\n        @include breakDevicePoint(margin-bottom, vw(20px), null, null ); \r\n        >em{\r\n            display: block;\r\n            width: 100%;\r\n            font-family: 'Noto Sans Korean';\r\n            color: $dpColor;\r\n            font-weight: 600;  \r\n            letter-spacing: vw(-0.5px);\r\n            @include breakDevicePoint(font-size, vw(25px), vw(50px), null ); \r\n        }\r\n    }\r\n    &--title{\r\n        display: -webkit-box;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        -webkit-line-clamp: 1;\r\n        -webkit-box-orient: vertical;\r\n        font-weight: bold;\r\n        color: #222;\r\n        letter-spacing: vw(-1px);\r\n        font-family: 'Noto Sans Korean';\r\n        @include breakDevicePoint(font-size, vw(40px), vw(60px), null ); \r\n        @include breakDevicePoint(max-height, vw(85px), null, null ); \r\n        @include breakDevicePoint(margin-bottom, vw(20px), null, null ); \r\n        &:hover{\r\n            color: $dpColor;\r\n        }\r\n    }\r\n    &--text{\r\n        font-family: 'Noto Sans Korean';\r\n        display: -webkit-box;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        -webkit-line-clamp: 3;\r\n        -webkit-box-orient: vertical;\r\n        line-height: 1.3;\r\n        color: #555;\r\n        letter-spacing: vw(-1px);\r\n        @include breakDevicePoint(max-height, vw(120px), vw(50px), null ); \r\n        @include breakDevicePoint(font-size, vw(26px), vw(50px), null ); \r\n        @include breakDevicePoint(margin-bottom, vw(20px), vw(40px), null ); \r\n\r\n\r\n    }\r\n    &--info{\r\n        display: flex;\r\n        align-items: center;\r\n        span{ \r\n            color: #888;\r\n            @include breakDevicePoint(font-size, vw(26px), vw(40px), null ); \r\n        }\r\n    }\r\n    &--date{ \r\n        display: inline-block;\r\n        @include breakDevicePoint(padding-right, vw(20px), vw(40px), null ); \r\n    }\r\n    &--writer{\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        &::before{\r\n            content: '';\r\n            display: inline-block;\r\n            background:url(\"@/assets/images/icon_editor.png\") 0 0 no-repeat;\r\n            @include breakDevicePoint(width, vw(18px),  vw(30px), null ); \r\n            @include breakDevicePoint(height, vw(18px),  vw(30px), null ); \r\n            @include breakDevicePoint(background-size, vw(18px) auto,  vw(30px) auto, null ); \r\n            @include breakDevicePoint(padding-right, vw(6px), null, null ); \r\n        }\r\n    }\r\n   \r\n}\r\n\r\n</style>\r\n      "],"mappings":"AAmCA,SAASA,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAU,QAAU,KAAK;AACpE,SAASC,IAAI,EAAEC,MAAK,QAAS,MAAM;AACnC,SAASC,aAAY,QAAS,oBAAoB;AAClD,OAAOC,QAAO,MAAO,0CAA0C;AAC/DH,IAAI,CAACI,cAAc,CAACF,aAAa,CAAC;AAElC,eAAe;EACXG,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACHC,YAAY,EAAE;MACVC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACd,CAAC;IACDC,YAAY,EAAE;MACVH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACd,CAAC;IACDE,YAAY,EAAC;MACXJ,IAAI,EAACK;IACP;EACJ,CAAC;EACDC,UAAU,EAAE;IACRX;EACJ,CAAC;EACDY,KAAKA,CAAET,KAAI,EAAI;IACX,MAAMU,MAAK,GAAIrB,GAAG,CAAE,KAAM,CAAC;IAC3B,MAAMsB,UAAS,GAAKC,UAAU,IAAK;MAC/B,MAAMC,UAAS,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACvC,MAAMG,IAAG,GAAIF,UAAU,CAACG,WAAW,CAAC,CAAC;MACrC,MAAMC,KAAI,GAAIV,MAAM,CAACM,UAAU,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAChE,MAAMC,GAAE,GAAIb,MAAM,CAACM,UAAU,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACzD,OAAQ,GAAEJ,IAAK,IAAGE,KAAM,IAAGG,GAAI,EAAC;IACpC;IACA9B,SAAS,CAAC,MAAM;MACZgC,UAAU,CAAE,MAAI;QACZZ,MAAM,CAACa,KAAI,GAAI,IAAI;MACvB,CAAC,EAAC,IAAI;IACV,CAAC,CAAC;IAGF,OAAO;MACHb,MAAM;MACNC;IACJ,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}