{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'BlogView',\n  postId: {\n    type: String,\n    required: true\n  },\n  components: {},\n  setup() {\n    const route = useRoute();\n    const pageId = route.params.id;\n    const pageItem = ref([]);\n    const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\n    const formatDate = dateString => {\n      const dateObject = new Date(dateString);\n      const year = dateObject.getFullYear();\n      const month = String(dateObject.getMonth() + 1).padStart(2, '0');\n      const day = String(dateObject.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    };\n    const removeSpecialChars = text => {\n      const reg = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\' \\\"]/gi;\n      return text.replace(reg, '');\n    };\n    const tstoryitemView = async () => {\n      try {\n        const response = await axios.get(\"https://www.tistory.com/apis/post/read?\", {\n          params: {\n            access_token: ACCESS_TOKEN,\n            blogName: 'rico86',\n            output: 'json',\n            postId: pageId\n          }\n        });\n        pageItem.value = response.data.tistory.item;\n        console.log(pageItem.value);\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    onMounted(() => {\n      tstoryitemView();\n    });\n    return {\n      formatDate,\n      pageItem\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRoute","axios","name","postId","type","String","required","components","setup","route","pageId","params","id","pageItem","ACCESS_TOKEN","formatDate","dateString","dateObject","Date","year","getFullYear","month","getMonth","padStart","day","getDate","removeSpecialChars","text","reg","replace","tstoryitemView","response","get","access_token","blogName","output","value","data","tistory","item","console","log","error"],"sources":["C:\\Rico\\portfilo2023\\src\\components\\Layouts\\Views\\BlogView.vue"],"sourcesContent":["<template>\r\n  <section id=\"blog\">\r\n    <div class=\"inner\">\r\n      <div class=\"posting--contents\">\r\n        <div class=\"posting--info\" v-for=\"(tag, index) in pageItem.tags\"  :key=\"index\">\r\n          <em v-dompurify-html=\"tag\"></em>\r\n          <span>{{ formatDate(pageItem.date)}}</span>\r\n        </div>\r\n        <h2 class=\"posting--title\">\r\n          {{ pageItem.title}}\r\n        </h2>\r\n        <div class=\"posting--context\"  v-dompurify-html=\"pageItem.content\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </section>\r\n</template>\r\n    \r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport default {\r\n  name: 'BlogView',\r\n  postId: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  components: {},\r\n  setup() {\r\n    const route = useRoute();\r\n    const pageId = route.params.id;\r\n    const pageItem = ref([]);\r\n    const ACCESS_TOKEN = \"88f0ff4e5c7f1fca1ceee0437e6771d5_e4db11b9a579e41ca6dde90025c7e146\";\r\n\r\n    const formatDate = (dateString) => {\r\n        const dateObject = new Date(dateString);\r\n        const year = dateObject.getFullYear();\r\n        const month = String(dateObject.getMonth() + 1).padStart(2, '0');\r\n        const day = String(dateObject.getDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n\r\n\r\n    const removeSpecialChars = (text) => {\r\n      const reg = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\' \\\"]/gi;\r\n      return text.replace(reg, '');\r\n    };\r\n\r\n\r\n    \r\n    const tstoryitemView = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://www.tistory.com/apis/post/read?\", {\r\n                params: {\r\n                  access_token: ACCESS_TOKEN,\r\n                  blogName: 'rico86',\r\n                  output: 'json',\r\n                  postId:pageId\r\n                },\r\n            })\r\n            pageItem.value = response.data.tistory.item;\r\n            console.log(  pageItem.value );\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n        }\r\n    };\r\n    onMounted(() => {\r\n      tstoryitemView();\r\n    });\r\n\r\n    return {\r\n      formatDate,\r\n      pageItem,\r\n    };\r\n  }\r\n}\r\n</script>\r\n    \r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/__variables.scss\";\r\n\r\n  #blog {\r\n    \r\n    .inner{\r\n      display: block;\r\n      padding: 0 300px;\r\n    }\r\n    .posting{\r\n      &--contents{\r\n        padding-top: 200px;\r\n      }\r\n      &--info{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding-bottom: 40px;\r\n        em{\r\n          display: block;\r\n          width: 90%;\r\n          font-style: normal;\r\n          color: $dpColor;\r\n          font-size: 24px;\r\n          font-weight: 600;\r\n          font-family: 'Noto Sans Korean';\r\n        }\r\n        span{\r\n          display: block;\r\n          width: 10%;\r\n          font-size: 24px;\r\n        }\r\n      }\r\n      &--title{\r\n        padding-bottom: 120px;\r\n        width: 100%;\r\n        font-size: 58px;\r\n        line-height: 68px;\r\n        font-weight: bold;\r\n        color: #000;\r\n        letter-spacing: -1px;\r\n        font-family: 'Noto Sans Korean';\r\n      }\r\n      &--context{\r\n        line-height: 1.7;\r\n        p{ \r\n          margin-bottom: 0;\r\n          color: #000;\r\n          font-size: 18px;\r\n          &:deep(.in) {\r\n            color:blue;\r\n          }\r\n          &:deep(.out) {\r\n            color:red;\r\n          }\r\n         \r\n          >img{ width: auto; } \r\n        }\r\n        table{\r\n          width: 100%;\r\n          td{padding: 8px 0;}\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style> \r\n    "],"mappings":"AAoBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAK;AACxD,SAASC,QAAO,QAAS,YAAY;AACrC,OAAOC,KAAI,MAAO,OAAM;AAKxB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,MAAM,EAAE;IACNC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIT,QAAQ,CAAC,CAAC;IACxB,MAAMU,MAAK,GAAID,KAAK,CAACE,MAAM,CAACC,EAAE;IAC9B,MAAMC,QAAO,GAAIjB,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMkB,YAAW,GAAI,mEAAmE;IAExF,MAAMC,UAAS,GAAKC,UAAU,IAAK;MAC/B,MAAMC,UAAS,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACvC,MAAMG,IAAG,GAAIF,UAAU,CAACG,WAAW,CAAC,CAAC;MACrC,MAAMC,KAAI,GAAIhB,MAAM,CAACY,UAAU,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAChE,MAAMC,GAAE,GAAInB,MAAM,CAACY,UAAU,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MACzD,OAAQ,GAAEJ,IAAK,IAAGE,KAAM,IAAGG,GAAI,EAAC;IACpC;IAGA,MAAME,kBAAiB,GAAKC,IAAI,IAAK;MACnC,MAAMC,GAAE,GAAI,oDAAoD;MAChE,OAAOD,IAAI,CAACE,OAAO,CAACD,GAAG,EAAE,EAAE,CAAC;IAC9B,CAAC;IAID,MAAME,cAAa,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAO,GAAI,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,yCAAyC,EAAE;UACxErB,MAAM,EAAE;YACNsB,YAAY,EAAEnB,YAAY;YAC1BoB,QAAQ,EAAE,QAAQ;YAClBC,MAAM,EAAE,MAAM;YACdhC,MAAM,EAACO;UACT;QACJ,CAAC;QACDG,QAAQ,CAACuB,KAAI,GAAIL,QAAQ,CAACM,IAAI,CAACC,OAAO,CAACC,IAAI;QAC3CC,OAAO,CAACC,GAAG,CAAG5B,QAAQ,CAACuB,KAAM,CAAC;MAClC,EAAE,OAAOM,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC9C;IACJ,CAAC;IACD5C,SAAS,CAAC,MAAM;MACdgC,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC;IAEF,OAAO;MACLf,UAAU;MACVF;IACF,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}